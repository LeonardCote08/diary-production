import{_ as q}from"./main-Lyim7Yfo.js";class x{constructor(t={}){this.hasVibrationAPI="vibrate"in navigator,this.isSecureContext=window.isSecureContext,this.userAgent=navigator.userAgent.toLowerCase(),this.isIOS=/ipad|iphone|ipod/.test(this.userAgent),this.isAndroid=/android/.test(this.userAgent),this.isSafari=/safari/.test(this.userAgent)&&!/chrome/.test(this.userAgent),this.iOSVersion=this.getIOSVersion(),this.supportsIOSHaptics=this.isIOS&&this.iOSVersion>=18,this.enabled=t.enabled??!0,this.patterns={reveal:15,activate:35,success:[50,100,50],error:[100,50,100,50,100],warning:[200,100,200]},this.lastVibration=0,this.minInterval=50,this.iosHaptics=null,this.supportsIOSHaptics&&this.initIOSHaptics(),this.log("HapticManager initialized",{iOS:this.isIOS,Android:this.isAndroid,hasVibrationAPI:this.hasVibrationAPI,supportsIOSHaptics:this.supportsIOSHaptics,iOSVersion:this.iOSVersion})}getIOSVersion(){if(!this.isIOS)return 0;const t=navigator.userAgent.match(/OS (\d+)_(\d+)_?(\d+)?/);return t?parseInt(t[1],10):0}async initIOSHaptics(){try{const t=await q(()=>import("./index-C_6GQt14.js"),[]);this.iosHaptics=t.haptic,this.log("iOS haptics module loaded successfully")}catch(t){this.log("iOS haptics module not available, falling back to standard API",t),this.supportsIOSHaptics=!1}}vibrate(t=this.patterns.reveal){if(!this.enabled)return!1;const e=Date.now();if(e-this.lastVibration<this.minInterval)return!1;try{if(this.supportsIOSHaptics&&this.iosHaptics){if(this.lastVibration=e,Array.isArray(t)){if(t.length===3&&t[1]===100)return this.iosHaptics.confirm();if(t.length===5)return this.iosHaptics.error()}return this.iosHaptics()}return this.hasVibrationAPI&&!this.isIOS?this.isSecureContext?(this.lastVibration=e,navigator.vibrate(t)):(this.log("Vibration requires HTTPS"),!1):(this.log("No haptic support on this device"),!1)}catch(a){return this.log("Vibration error:",a),!1}}reveal(){return this.vibrate(this.patterns.reveal)}activate(){return this.vibrate(this.patterns.activate)}success(){return this.vibrate(this.patterns.success)}error(){return this.vibrate(this.patterns.error)}warning(){return this.vibrate(this.patterns.warning)}stop(){return this.hasVibrationAPI&&!this.isIOS?navigator.vibrate(0):!1}provideVisualFeedback(t){if(!t)return;if(this.getCapabilities().supported)this.reveal();else{const a=t.style.transform;t.style.transition="transform 100ms ease-out",t.style.transform="scale(0.95)",setTimeout(()=>{t.style.transform=a||"",setTimeout(()=>{t.style.transition=""},100)},100)}}createTouchHandler(t=this.patterns.reveal){return e=>{(e.type==="touchstart"||e.type==="touchend")&&this.vibrate(t)}}getCapabilities(){return{supported:this.supportsIOSHaptics||this.hasVibrationAPI&&!this.isIOS,platform:this.isIOS?"ios":this.isAndroid?"android":"other",method:this.supportsIOSHaptics?"ios-switch":this.hasVibrationAPI?"vibration-api":"none",iOSVersion:this.iOSVersion,fallbackAvailable:!0}}setEnabled(t){this.enabled=t,this.log(`Haptics ${t?"enabled":"disabled"}`)}setPattern(t,e){this.patterns[t]!==void 0&&(this.patterns[t]=e,this.log(`Updated ${t} pattern to ${e}ms`))}log(t,e){window.debugHaptics&&console.log(`[HapticManager] ${t}`,e||"")}}let b=null;function O(){return b||(b=new x),b}class G{constructor(){this.audioContext=null,this.isUnlocked=!1,this.pendingSounds=[],this.activeSources=new Set,this.currentReveal="inkDiffusion",this.currentActivate="absorbedImpact",this.haptics=O(),this.hapticsEnabled=!0}async init(){try{if(this.audioContext=new(window.AudioContext||window.webkitAudioContext)({latencyHint:"interactive",sampleRate:44100}),this.audioContext.state==="suspended"){const t=async()=>{await this.audioContext.resume(),this.isUnlocked=!0,document.removeEventListener("touchstart",t),document.removeEventListener("click",t)};document.addEventListener("touchstart",t),document.addEventListener("click",t)}else this.isUnlocked=!0;return console.log("[MinimalistAudio] Initialized"),!0}catch(t){return console.error("[MinimalistAudio] Init failed:",t),!1}}createPinkNoise(t){const e=this.audioContext.sampleRate*t,a=this.audioContext.createBuffer(1,e,this.audioContext.sampleRate),o=a.getChannelData(0);let u=0,p=0,r=0,i=0,c=0,n=0,s=0;for(let l=0;l<e;l++){const h=Math.random()*2-1;u=.99886*u+h*.0555179,p=.99332*p+h*.0750759,r=.969*r+h*.153852,i=.8665*i+h*.3104856,c=.55*c+h*.5329522,n=-.7616*n-h*.016898;const m=u+p+r+i+c+n+s+h*.5362;o[l]=m*.11,s=h*.115926}return a}createSoftBitCrusher(t=10){const a=this.audioContext.createScriptProcessor(256,1,1),o=Math.pow(1/2,t);let u=0,p=0;return a.onaudioprocess=r=>{const i=r.inputBuffer.getChannelData(0),c=r.outputBuffer.getChannelData(0);for(let n=0;n<256;n++)u+=.9,u>=1&&(u-=1,p=o*Math.floor(i[n]/o+.5)),c[n]=p},a}playSandShift(){const t=this.audioContext,e=t.currentTime,a=.2,o=t.createOscillator();o.type="square",o.frequency.setValueAtTime(150,e),o.frequency.exponentialRampToValueAtTime(100,e+a);const u=this.createPinkNoise(a),p=t.createBufferSource();p.buffer=u;const r=t.createBiquadFilter();r.type="bandpass",r.frequency.value=800,r.Q.value=.5;const i=t.createBiquadFilter();i.type="lowpass",i.frequency.value=1500;const c=this.createSoftBitCrusher(8),n=t.createGain();n.gain.value=.12;const s=t.createGain();s.gain.value=.08;const l=t.createGain();l.gain.setValueAtTime(0,e),l.gain.linearRampToValueAtTime(.2,e+.02),l.gain.linearRampToValueAtTime(.15,e+.1),l.gain.exponentialRampToValueAtTime(.001,e+a),o.connect(n),p.connect(s),n.connect(r),s.connect(r),r.connect(i),i.connect(c),c.connect(l),l.connect(t.destination),o.start(e),p.start(e),o.stop(e+a),p.stop(e+a)}playSandCrystal(){const t=this.audioContext,e=t.currentTime,a=.18,o=t.createOscillator();o.type="triangle",o.frequency.value=400;const u=t.createOscillator();u.type="sine",u.frequency.value=400*3.5;const p=t.createGain();p.gain.value=200,u.connect(p),p.connect(o.frequency);const r=t.createOscillator();r.type="square",r.frequency.value=200;const i=t.createGain();i.gain.value=.04;const c=t.createDelay(.01);c.delayTime.value=.003;const n=t.createGain();n.gain.value=.2;const s=this.createSoftBitCrusher(9),l=t.createGain();l.gain.setValueAtTime(0,e),l.gain.linearRampToValueAtTime(.25,e+.008),l.gain.exponentialRampToValueAtTime(.001,e+a),o.connect(c),r.connect(i),i.connect(c),c.connect(n),n.connect(c),c.connect(s),s.connect(l),l.connect(t.destination),o.start(e),u.start(e),r.start(e),o.stop(e+a),u.stop(e+a),r.stop(e+a)}playSandWhisper(){const t=this.audioContext,e=t.currentTime,a=.22,o=t.sampleRate*a,u=t.createBuffer(1,o,t.sampleRate),p=u.getChannelData(0);for(let m=0;m<o;m++)p[m]=(Math.random()*2-1)*.4;const r=t.createBufferSource();r.buffer=u;const i=t.createOscillator();i.type="square",i.frequency.value=250;const c=t.createGain();c.gain.value=.02;const n=t.createBiquadFilter();n.type="bandpass",n.frequency.setValueAtTime(1500,e),n.frequency.exponentialRampToValueAtTime(3e3,e+a),n.Q.value=.3;const s=t.createBiquadFilter();s.type="lowpass",s.frequency.value=2e3;const l=this.createSoftBitCrusher(10),h=t.createGain();h.gain.setValueAtTime(0,e),h.gain.linearRampToValueAtTime(.15,e+.05),h.gain.linearRampToValueAtTime(.12,e+.15),h.gain.exponentialRampToValueAtTime(.001,e+a),r.connect(n),i.connect(c),c.connect(n),n.connect(s),s.connect(l),l.connect(h),h.connect(t.destination),r.start(e),i.start(e),r.stop(e+a),i.stop(e+a)}playSandTrickle(){const t=this.audioContext,e=t.currentTime,a=.22,o=12,u=.03;for(let l=0;l<o;l++){const h=e+l*.015+Math.random()*.005,m=t.sampleRate*u,g=t.createBuffer(1,m,t.sampleRate),f=g.getChannelData(0);for(let y=0;y<m;y++){const S=Math.sin(y/m*Math.PI);f[y]=(Math.random()*2-1)*S*.3}const d=t.createBufferSource();d.buffer=g;const T=t.createBiquadFilter();T.type="bandpass",T.frequency.value=2e3+Math.random()*3e3,T.Q.value=.5+Math.random()*.5;const v=t.createGain(),V=.15*Math.pow(.85,l);v.gain.setValueAtTime(V,h),v.gain.exponentialRampToValueAtTime(.001,h+u),d.connect(T),T.connect(v),v.connect(t.destination),d.start(h),d.stop(h+u)}const p=this.createPinkNoise(a),r=t.createBufferSource();r.buffer=p;const i=t.createBiquadFilter();i.type="highpass",i.frequency.value=4e3,i.Q.value=.7;const c=t.createOscillator();c.frequency.value=7;const n=t.createGain();n.gain.value=.05;const s=t.createGain();s.gain.setValueAtTime(0,e),s.gain.linearRampToValueAtTime(.08,e+.02),s.gain.linearRampToValueAtTime(.06,e+.15),s.gain.exponentialRampToValueAtTime(.001,e+a),c.connect(n),n.connect(s.gain),r.connect(i),i.connect(s),s.connect(t.destination),r.start(e),c.start(e),r.stop(e+a),c.stop(e+a)}playSandMagic(){const t=this.audioContext,e=t.currentTime,a=.25,o=t.createOscillator();o.type="triangle",o.frequency.setValueAtTime(600,e),o.frequency.exponentialRampToValueAtTime(1800,e+.2);const u=t.createOscillator();u.type="sine",u.frequency.value=250;const p=t.createGain();p.gain.setValueAtTime(500,e),p.gain.exponentialRampToValueAtTime(100,e+.2),u.connect(p),p.connect(o.frequency);const r=this.createPinkNoise(a),i=t.createBufferSource();i.buffer=r;const c=t.createGain();c.gain.value=.08;const n=t.createBiquadFilter();n.type="bandpass",n.frequency.setValueAtTime(800,e),n.frequency.exponentialRampToValueAtTime(2e3,e+.2),n.Q.value=3;const s=this.createSoftBitCrusher(9),l=t.createGain();l.gain.setValueAtTime(0,e),l.gain.linearRampToValueAtTime(.35,e+.01),l.gain.exponentialRampToValueAtTime(.001,e+a),o.connect(n),i.connect(c),c.connect(n),n.connect(s),s.connect(l),l.connect(t.destination),o.start(e),u.start(e),i.start(e),o.stop(e+a),u.stop(e+a),i.stop(e+a)}playAbsorbedImpact(){const t=this.audioContext,e=t.currentTime,a=.4,o=t.sampleRate*.008,u=t.createBuffer(1,o,t.sampleRate),p=u.getChannelData(0);for(let d=0;d<o;d++)p[d]=(Math.random()*2-1)*Math.exp(-d/(o*.2))*.7;const r=t.createBufferSource();r.buffer=u;const i=t.createBiquadFilter();i.type="lowpass",i.frequency.value=1e3;const c=t.createOscillator(),n=t.createOscillator();c.type="sine",n.type="triangle";const s=180+Math.random()*80;c.frequency.value=s,n.frequency.value=s*.5;const l=t.createGain(),h=t.createGain();l.gain.setValueAtTime(0,e),l.gain.linearRampToValueAtTime(.3,e+.02),l.gain.exponentialRampToValueAtTime(.001,e+a),h.gain.setValueAtTime(0,e),h.gain.linearRampToValueAtTime(.15,e+.03),h.gain.exponentialRampToValueAtTime(.001,e+a);const m=t.createDelay(.02);m.delayTime.value=.012;const g=t.createGain();g.gain.value=.4;const f=t.createGain();f.gain.value=.4,r.connect(i),i.connect(f),c.connect(l),n.connect(h),l.connect(m),h.connect(m),m.connect(g),g.connect(m),m.connect(f),f.connect(t.destination),r.start(e),c.start(e),n.start(e),r.stop(e+.008),c.stop(e+a),n.stop(e+a)}playPaperWave(){const t=this.audioContext,e=t.currentTime,a=.4,o=t.createOscillator(),u=t.createOscillator();o.type="triangle",u.type="sine",o.frequency.setValueAtTime(320,e),o.frequency.exponentialRampToValueAtTime(160,e+a),u.frequency.setValueAtTime(325,e),u.frequency.exponentialRampToValueAtTime(155,e+a);const p=t.createOscillator();p.frequency.value=12;const r=t.createGain();r.gain.value=.3,p.connect(r);const i=t.createStereoPanner();i.pan.setValueAtTime(-.7,e),i.pan.linearRampToValueAtTime(.7,e+a);const c=t.createOscillator();c.type="square",c.frequency.value=80;const n=t.createGain();n.gain.value=.03;const s=t.createGain();s.gain.setValueAtTime(0,e),s.gain.linearRampToValueAtTime(.25,e+.1),s.gain.linearRampToValueAtTime(.2,e+.25),s.gain.exponentialRampToValueAtTime(.001,e+a),r.connect(s.gain),o.connect(s),u.connect(s),c.connect(n),n.connect(s),s.connect(i),i.connect(t.destination),o.start(e),u.start(e),p.start(e),c.start(e),o.stop(e+a),u.stop(e+a),p.stop(e+a),c.stop(e+a)}playInkSaturation(){const t=this.audioContext,e=t.currentTime,a=.4,o=120,u=[1,2,3,4,5,6],p=t.createGain(),r=this.createSoftBitCrusher(10);u.forEach((s,l)=>{const h=t.createOscillator(),m=t.createGain();h.type=l%2===0?"sawtooth":"square",h.frequency.value=o*s;const g=l*.05,f=.3/s;m.gain.setValueAtTime(0,e+g),m.gain.linearRampToValueAtTime(f,e+g+.08),m.gain.linearRampToValueAtTime(f*.8,e+.3),m.gain.exponentialRampToValueAtTime(.001,e+a),h.connect(m),m.connect(p),h.start(e),h.stop(e+a)});const i=t.createBiquadFilter();i.type="lowpass",i.frequency.setValueAtTime(200,e),i.frequency.exponentialRampToValueAtTime(800,e+a),i.Q.setValueAtTime(.5,e),i.Q.linearRampToValueAtTime(3,e+a);const c=t.createWaveShaper(),n=new Float32Array(256);for(let s=0;s<256;s++){const l=s/128-1;n[s]=Math.tanh(l*1.5)}c.curve=n,p.gain.value=.35,p.connect(r),r.connect(c),c.connect(i),i.connect(t.destination)}playSurfaceEcho(){const t=this.audioContext,e=t.currentTime,a=.4,o=t.sampleRate*.15,u=t.createBuffer(1,o,t.sampleRate),p=u.getChannelData(0);for(let d=0;d<o;d++)p[d]=(Math.random()*2-1)*Math.exp(-d/(o*.6))*.6;const r=t.createBufferSource();r.buffer=u;const i=t.createOscillator();i.type="square",i.frequency.value=200;const c=t.createGain();c.gain.value=.05;const n=t.createBiquadFilter();n.type="bandpass",n.frequency.value=800,n.Q.value=1.2;const s=t.createDelay(.02);s.delayTime.value=.01+Math.random()*.005;const l=t.createGain();l.gain.value=.45;const h=t.createBiquadFilter();h.type="lowpass",h.frequency.value=2500;const m=t.createGain(),g=t.createGain(),f=t.createGain();m.gain.value=.6,g.gain.value=.4,f.gain.setValueAtTime(0,e),f.gain.linearRampToValueAtTime(.3,e+.05),f.gain.exponentialRampToValueAtTime(.001,e+a),r.connect(n),i.connect(c),c.connect(n),n.connect(m),n.connect(s),s.connect(g),s.connect(l),l.connect(h),h.connect(s),m.connect(f),g.connect(f),f.connect(t.destination),r.start(e),i.start(e),r.stop(e+.15),i.stop(e+a)}playReveal(){this.playAbsorbedImpact(),this.hapticsEnabled&&this.haptics.reveal()}playActivate(){switch(this.currentActivate){case"absorbedImpact":this.playAbsorbedImpact();break;case"paperWave":this.playPaperWave();break;case"inkSaturation":this.playInkSaturation();break;case"surfaceEcho":this.playSurfaceEcho();break}this.hapticsEnabled&&this.haptics.activate()}setRevealSound(t){this.currentReveal=t}setActivateSound(t){this.currentActivate=t}setHapticsEnabled(t){this.hapticsEnabled=t,this.haptics.setEnabled(t),console.log(`[MinimalistAudio] Haptics ${t?"enabled":"disabled"}`)}getHapticCapabilities(){return this.haptics.getCapabilities()}testHaptics(t="reveal"){t==="reveal"?this.haptics.reveal():t==="activate"&&this.haptics.activate()}}export{G as default};
