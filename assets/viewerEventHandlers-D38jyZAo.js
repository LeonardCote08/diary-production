const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/main-B8qGZPYw.js","assets/main-eUu5CkWe.css","assets/TemporalEchoController-CmlR_R3t.js"])))=>i.map(i=>d[i]);
var ot=Object.defineProperty;var at=(r,t,e)=>t in r?ot(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var _=(r,t,e)=>at(r,typeof t!="symbol"?t+"":t,e);import{O as x,_ as tt,i as F,d as nt}from"./main-B8qGZPYw.js";import{o as J,p as I,a as rt}from"./viewerSetup-DV6mVdm2.js";class lt{constructor(t={}){this.audioEngine=t.audioEngine||window.audioEngine,this.onPhaseChange=t.onPhaseChange||(()=>{}),this.modeStateManager=t.modeStateManager,this.thresholds={explore:300,preview:500,activate:800},this.state={isHolding:!1,holdStartTime:0,holdTimer:null,currentPhase:null,targetHotspot:null,feedbackGiven:new Set},this.currentPointerX=null,this.currentPointerY=null,this.progressElement=null,this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window}startHold(t,e,i){t&&(this.modeStateManager&&(this.modeStateManager.modeStates.temporal.active||this.modeStateManager.modeStates.temporal.phase)&&(console.warn("[TEMPORAL_DEBUG] Cleaning stale temporal state before startHold"),this.modeStateManager.setTemporalState(!1,null),this.modeStateManager.modeStates.temporal.active=!1,this.modeStateManager.modeStates.temporal.phase=null),this.state.isHolding=!0,this.state.holdStartTime=Date.now(),this.state.targetHotspot=t,this.state.feedbackGiven.clear(),this.state.currentPhase=null,this.onPhaseChange&&this.onPhaseChange("initial",t),this.isMobile&&this.createTouchRipple(e,i),this.state.holdTimer&&clearTimeout(this.state.holdTimer),this.scheduleFeedback(),this.showProgressIndicator(e,i),this.currentPointerX=e,this.currentPointerY=i,this.animateProgress())}endHold(){const t=this.state.isHolding?Date.now()-this.state.holdStartTime:0,e=this.state.targetHotspot,i=this.state.currentPhase;return this.state.holdTimer&&(clearTimeout(this.state.holdTimer),this.state.holdTimer=null),this.hideProgressIndicator(),this.state.isHolding=!1,this.state.holdStartTime=0,this.state.currentPhase=null,this.state.targetHotspot=null,this.state.feedbackGiven.clear(),this.cleanupTemporalVisuals(),this.modeStateManager&&this.modeStateManager.setTemporalState(!1,null),{duration:t,hotspot:e,finalPhase:i}}cleanupTemporalVisuals(){console.log("[TemporalModeHandler] Cleaning up temporal visuals");const t=["hotspot-temporal-touchDown","hotspot-temporal-explore","hotspot-temporal-preview","hotspot-temporal-activate"];document.querySelectorAll("[data-hotspot-id]").forEach(e=>{t.forEach(i=>{e.classList.remove(i)}),e.style.removeProperty("opacity"),e.style.removeProperty("visibility"),e.style.removeProperty("transition")}),this.modeStateManager&&this.modeStateManager.setTemporalState(!1,null)}scheduleFeedback(){this.giveFeedback("touchDown"),this.state.holdTimer=setTimeout(()=>{this.state.isHolding&&(this.state.currentPhase="explore",this.giveFeedback("explore"),this.state.holdTimer=setTimeout(()=>{this.state.isHolding&&(this.state.currentPhase="preview",this.giveFeedback("preview"),this.state.holdTimer=setTimeout(()=>{this.state.isHolding&&(this.state.currentPhase="activate",this.giveFeedback("activate"))},this.thresholds.activate-this.thresholds.preview))},this.thresholds.preview-this.thresholds.explore))},this.thresholds.explore)}giveFeedback(t){if(!this.state.isHolding){console.log("[TEMPORAL_DEBUG] Ignoring feedback - not holding");return}this.state.feedbackGiven.has(t)||(this.state.feedbackGiven.add(t),t==="touchDown"&&this.isMobile&&this.playHaptic("touchDown"),this.onPhaseChange(t,this.state.targetHotspot),this.playAudio(t),this.playHaptic(t))}playAudio(t){if(!this.audioEngine)return;const e=this.calculateHotspotSize(this.state.targetHotspot);switch(t){case"touchDown":this.audioEngine.playTemporalSound("touch",2e3,20);break;case"explore":this.audioEngine.playTemporalTick(e);break;case"preview":this.audioEngine.playTemporalBoop();break;case"activate":this.audioEngine.playTemporalThunk(e);break}}playHaptic(t){if(!navigator.vibrate||!/Android|iPhone|iPad|iPod/i.test(navigator.userAgent))return;const e={touchDown:[20,10,20],explore:20,preview:[30,10,30],activate:100};if(e[t])try{navigator.vibrate(e[t])}catch{}}calculateHotspotSize(t){if(!t||!t.coordinates)return .5;let e=1/0,i=-1/0,s=1/0,a=-1/0;(t.shape==="multipolygon"?t.coordinates[0]:t.coordinates).forEach(([l,h])=>{e=Math.min(e,l),i=Math.max(i,l),s=Math.min(s,h),a=Math.max(a,h)});const n=(i-e)*(a-s);return Math.min(1,Math.max(0,n/1e4))}createProgressIndicator(){this.progressElement||(this.progressElement=document.createElement("div"),this.progressElement.className="temporal-progress-indicator",this.progressElement.innerHTML=`
            <svg width="64" height="64" style="position: absolute; top: -2px; left: -2px; transform: rotate(-90deg);">
                <circle cx="32" cy="32" r="30" fill="none" stroke="rgba(255,255,255,0.2)" stroke-width="4"/>
                <circle cx="32" cy="32" r="30" fill="none" stroke="rgba(255,255,255,0.9)" stroke-width="4"
                        stroke-dasharray="188.5" stroke-dashoffset="188.5" class="progress-ring"/>
            </svg>
        `,document.body.appendChild(this.progressElement))}createTouchRipple(t,e){const i=document.createElement("div");i.className="temporal-touch-ripple",i.style.left=t-20+"px",i.style.top=e-20+"px",document.body.appendChild(i),setTimeout(()=>{i.remove()},600)}showProgressIndicator(t,e){this.progressElement||this.createProgressIndicator(),this.progressElement.style.display="block",this.progressElement.style.left=t+"px",this.progressElement.style.top=e+"px"}hideProgressIndicator(){this.progressElement&&(this.progressElement.style.display="none")}updateProgress(t,e,i){this.progressElement&&(this.currentPointerX=t,this.currentPointerY=e,this.progressElement.style.left=t+"px",this.progressElement.style.top=e+"px")}animateProgress(){if(!this.state.isHolding){this.hideProgressIndicator();return}const t=Date.now()-this.state.holdStartTime,e=this.thresholds.activate+200,i=Math.min(1,t/e);if(this.progressElement){const s=this.progressElement.querySelector(".progress-ring");if(s){const a=188.5-188.5*i;s.style.strokeDashoffset=a}this.currentPointerX!==void 0&&this.currentPointerY!==void 0&&(this.progressElement.style.left=this.currentPointerX+"px",this.progressElement.style.top=this.currentPointerY+"px")}this.state.isHolding&&i<1?requestAnimationFrame(()=>this.animateProgress()):this.hideProgressIndicator()}getCurrentProgress(){if(!this.state.isHolding)return 0;const t=Date.now()-this.state.holdStartTime,e=this.thresholds.activate+200;return Math.min(1,t/e)}updateThreshold(t,e){this.thresholds[t]!==void 0&&(this.thresholds[t]=e)}reset(){this.endHold(),this.progressElement&&(this.progressElement.remove(),this.progressElement=null)}destroy(){this.reset()}}class ht{constructor(t={}){this.audioEngine=t.audioEngine||window.audioEngine,this.onStateChange=t.onStateChange||(()=>{}),this.onDiscovery=t.onDiscovery||(()=>{}),this.onActivation=t.onActivation||(()=>{}),this.thresholds={intentionDelay:100,navigation:150,discovery:400,activation:800,earlyVelocityCheck:150,distanceCheck:200},this.velocityThreshold=this.isMobile?5:15,this.frameTime=16.67,this.distanceThresholds={panDetection:this.isMobile?25:8,maxHoldDistance:this.isMobile?35:15},this.state={isHolding:!1,holdStartTime:0,currentPhase:null,targetHotspot:null,initialPosition:{x:0,y:0},lastPosition:{x:0,y:0},velocityHistory:[],feedbackGiven:new Set,timer:null,intentionTimer:null,temporalStarted:!1,earlyVelocityTimer:null,distanceTimer:null},this.hapticIntensities={discovery:.3,activation:1},this.lastFrameTime=0,this.velocityBufferSize=5,this.updateThrottle=this.isMobile?33:16,this.lastUpdateTime=0,this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,this.update=this.update.bind(this),this.calculateVelocity=this.calculateVelocity.bind(this),this.schedulePhases=this.schedulePhases.bind(this),this.startEarlyVelocityMonitoring=this.startEarlyVelocityMonitoring.bind(this),this.startDistanceMonitoring=this.startDistanceMonitoring.bind(this),this.checkPanDetection=this.checkPanDetection.bind(this)}startHold(t,e,i){t&&(console.log("[TemporalHoldEngine] Starting hold detection with intention delay",{hotspotId:t.id,position:{x:e,y:i},intentionDelay:this.thresholds.intentionDelay,timestamp:Date.now()}),this.reset(),this.state.isHolding=!0,this.state.holdStartTime=performance.now(),this.state.targetHotspot=t,this.state.initialPosition={x:e,y:i},this.state.lastPosition={x:e,y:i},this.state.velocityHistory=[],this.state.feedbackGiven.clear(),this.state.currentPhase="intention_delay",this.state.temporalStarted=!1,this.lastFrameTime=performance.now(),this.update(),this.state.intentionTimer=setTimeout(()=>{this.state.isHolding&&(console.log("[TemporalHoldEngine] Intention delay passed - starting temporal detection"),this.state.temporalStarted=!0,this.state.currentPhase="initiated",this.startEarlyVelocityMonitoring(),this.startDistanceMonitoring(),this.schedulePhases(),this.onStateChange("initiated",t,{duration:this.getHoldDuration(),velocity:this.getAverageVelocity(),phase:"initiated"}))},this.thresholds.intentionDelay),this.onStateChange("intention_delay",t,{duration:0,velocity:0,phase:"intention_delay"}))}updatePosition(t,e){if(!this.state.isHolding)return;const i=performance.now();if(this.isMobile&&i-this.lastUpdateTime<this.updateThrottle)return;this.lastUpdateTime=i;const s=i-this.lastFrameTime;if(s>0){const a=this.calculateVelocity(t,e,s);if(this.state.velocityHistory.push(a),this.state.velocityHistory.length>this.velocityBufferSize&&this.state.velocityHistory.shift(),this.checkPanDetection(t,e)){console.log("[TemporalHoldEngine] Pan movement detected, ending hold"),this.endHold("pan_detected");return}if(this.state.temporalStarted){const o=this.getAverageVelocity();if(o>this.velocityThreshold){console.log("[TemporalHoldEngine] Fast movement detected, ending hold",{velocity:o,threshold:this.velocityThreshold}),this.endHold("navigation_detected");return}}this.state.lastPosition={x:t,y:e},this.lastFrameTime=i}}calculateVelocity(t,e,i){const s=t-this.state.lastPosition.x,a=e-this.state.lastPosition.y;return Math.sqrt(s*s+a*a)/i*this.frameTime}getAverageVelocity(){return this.state.velocityHistory.length===0?0:this.state.velocityHistory.reduce((e,i)=>e+i,0)/this.state.velocityHistory.length}startEarlyVelocityMonitoring(){this.state.earlyVelocityTimer=setTimeout(()=>{this.state.isHolding&&console.log("[TemporalHoldEngine] Early velocity monitoring period ended")},this.thresholds.earlyVelocityCheck)}startDistanceMonitoring(){this.state.distanceTimer=setTimeout(()=>{this.state.isHolding&&console.log("[TemporalHoldEngine] Distance monitoring period ended")},this.thresholds.distanceCheck)}checkPanDetection(t,e){if(!this.state.isHolding)return!1;const i=Math.sqrt(Math.pow(t-this.state.initialPosition.x,2)+Math.pow(e-this.state.initialPosition.y,2)),s=this.getHoldDuration();return s<this.thresholds.intentionDelay+this.thresholds.distanceCheck&&i>this.distanceThresholds.panDetection?(console.log("[TemporalHoldEngine] Pan detected - distance exceeded",{distance:i,threshold:this.distanceThresholds.panDetection,elapsed:s}),!0):this.state.temporalStarted&&i>this.distanceThresholds.maxHoldDistance?(console.log("[TemporalHoldEngine] Hold drift exceeded",{distance:i,threshold:this.distanceThresholds.maxHoldDistance}),!0):!1}schedulePhases(){if(!this.state.temporalStarted){console.log("[TemporalHoldEngine] Cannot schedule phases - temporal detection not started");return}this.state.timer&&clearTimeout(this.state.timer);const t=this.thresholds.discovery-this.thresholds.intentionDelay;this.state.timer=setTimeout(()=>{if(!this.state.isHolding||!this.state.temporalStarted)return;this.enterDiscoveryPhase();const e=this.thresholds.activation-this.thresholds.discovery;this.state.timer=setTimeout(()=>{!this.state.isHolding||!this.state.temporalStarted||this.enterActivationPhase()},e)},t)}enterDiscoveryPhase(){!this.state.isHolding||this.state.feedbackGiven.has("discovery")||(console.log("[TemporalHoldEngine] Entering discovery phase"),this.state.currentPhase="discovery",this.state.feedbackGiven.add("discovery"),this.playHaptic("discovery",this.hapticIntensities.discovery),this.playDiscoveryAudio(),this.onDiscovery(this.state.targetHotspot,{duration:this.getHoldDuration(),phase:"discovery",intensity:this.hapticIntensities.discovery}),this.onStateChange("discovery",this.state.targetHotspot,{duration:this.getHoldDuration(),velocity:this.getAverageVelocity(),phase:"discovery"}))}enterActivationPhase(){!this.state.isHolding||this.state.feedbackGiven.has("activation")||(console.log("[TemporalHoldEngine] Entering activation phase"),this.state.currentPhase="activation",this.state.feedbackGiven.add("activation"),this.playHaptic("activation",this.hapticIntensities.activation),this.playActivationAudio(),this.onActivation(this.state.targetHotspot,{duration:this.getHoldDuration(),phase:"activation",finalPosition:this.state.lastPosition}),this.onStateChange("activation",this.state.targetHotspot,{duration:this.getHoldDuration(),velocity:this.getAverageVelocity(),phase:"activation"}),this.endHold("activated"))}endHold(t="released"){if(!this.state.isHolding)return null;const e=this.getHoldDuration(),i=this.state.currentPhase,s=this.state.targetHotspot;return console.log("[TemporalHoldEngine] Ending hold",{reason:t,duration:e,finalPhase:i,hotspotId:s==null?void 0:s.id}),this.state.timer&&(clearTimeout(this.state.timer),this.state.timer=null),this.reset(),this.onStateChange("ended",s,{duration:e,reason:t,finalPhase:i}),{duration:e,hotspot:s,finalPhase:i,reason:t}}update(){this.state.isHolding&&requestAnimationFrame(this.update)}getHoldDuration(){return this.state.isHolding?performance.now()-this.state.holdStartTime:0}playHaptic(t,e){if(!(!this.isMobile||!navigator.vibrate))try{const i={discovery:[Math.round(30*e),10,Math.round(20*e)],activation:[Math.round(100*e)]};i[t]&&navigator.vibrate(i[t])}catch(i){console.debug("[TemporalHoldEngine] Haptic feedback not available:",i.message)}}playDiscoveryAudio(){if(this.audioEngine)try{this.audioEngine.playTemporalSound("discovery",1e3,15)}catch(t){console.debug("[TemporalHoldEngine] Discovery audio not available:",t.message)}}playActivationAudio(){if(this.audioEngine)try{const t=this.calculateHotspotSize(this.state.targetHotspot);this.audioEngine.playTemporalThunk(t)}catch(t){console.debug("[TemporalHoldEngine] Activation audio not available:",t.message)}}calculateHotspotSize(t){if(!t||!t.coordinates)return .5;let e=1/0,i=-1/0,s=1/0,a=-1/0;(t.shape==="multipolygon"?t.coordinates[0]:t.coordinates).forEach(([l,h])=>{e=Math.min(e,l),i=Math.max(i,l),s=Math.min(s,h),a=Math.max(a,h)});const n=(i-e)*(a-s);return Math.min(1,Math.max(0,n/1e4))}isHolding(){return this.state.isHolding}getCurrentPhase(){return{phase:this.state.currentPhase,duration:this.getHoldDuration(),velocity:this.getAverageVelocity(),hotspot:this.state.targetHotspot}}updateThreshold(t,e){this.thresholds.hasOwnProperty(t)&&(this.thresholds[t]=e,console.log(`[TemporalHoldEngine] Updated ${t} threshold to ${e}ms`))}reset(){this.state.timer&&(clearTimeout(this.state.timer),this.state.timer=null),this.state.intentionTimer&&(clearTimeout(this.state.intentionTimer),this.state.intentionTimer=null),this.state.earlyVelocityTimer&&(clearTimeout(this.state.earlyVelocityTimer),this.state.earlyVelocityTimer=null),this.state.distanceTimer&&(clearTimeout(this.state.distanceTimer),this.state.distanceTimer=null),this.state={isHolding:!1,holdStartTime:0,currentPhase:null,targetHotspot:null,initialPosition:{x:0,y:0},lastPosition:{x:0,y:0},velocityHistory:[],feedbackGiven:new Set,timer:null,intentionTimer:null,temporalStarted:!1,earlyVelocityTimer:null,distanceTimer:null}}destroy(){this.reset(),this.onStateChange=null,this.onDiscovery=null,this.onActivation=null,this.audioEngine=null}}class ct{constructor(){this.modes={direct:{name:"Direct (Classic)",description:"Tap to select and zoom immediately",mobile:!0,desktop:!0},temporal:{name:"Temporal (Hold)",description:"Hold duration determines action",mobile:!0,desktop:!0}};const t=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window;this.currentMode=localStorage.getItem("interactionMode")||(t?"temporal":"direct"),this.modeStates={temporal:{active:!1,phase:null},reveal:{active:!1,timer:null,style:localStorage.getItem("revealStyle")||"invert"}},this.listeners={modeChange:[],stateChange:[]}}getCurrentMode(){return this.currentMode}setMode(t){if(!this.modes[t])return!1;const e=this.currentMode;return this.currentMode=t,localStorage.setItem("interactionMode",t),this.notifyListeners("modeChange",{from:e,to:t}),!0}getModeConfig(t=this.currentMode){return this.modes[t]}setTemporalState(t,e=null){const i=this.modeStates.temporal.active;this.modeStates.temporal.active=t,this.modeStates.temporal.phase=e,console.log("[ModeStateManager] Temporal state changed:",{from:{active:i,phase:this.modeStates.temporal.phase},to:{active:t,phase:e},timestamp:Date.now()}),this.notifyListeners("stateChange",{mode:"temporal",state:this.modeStates.temporal})}isTemporalActive(){return this.currentMode==="temporal"&&this.modeStates.temporal.active}setRevealActive(t){this.modeStates.reveal.active=t,!t&&this.modeStates.reveal.timer&&(clearTimeout(this.modeStates.reveal.timer),this.modeStates.reveal.timer=null),this.notifyListeners("stateChange",{mode:"reveal",state:this.modeStates.reveal})}isRevealActive(){return this.modeStates.reveal.active}setRevealTimer(t){this.modeStates.reveal.timer=t}setRevealStyle(t){this.modeStates.reveal.style=t,localStorage.setItem("revealStyle",t)}getRevealStyle(){return this.modeStates.reveal.style}shouldBlockNormalInteractions(){return this.isTemporalActive()||this.isRevealActive()}on(t,e){this.listeners[t]&&this.listeners[t].push(e)}off(t,e){if(this.listeners[t]){const i=this.listeners[t].indexOf(e);i>-1&&this.listeners[t].splice(i,1)}}notifyListeners(t,e){this.listeners[t]&&this.listeners[t].forEach(i=>i(e))}reset(){this.modeStates.temporal.active=!1,this.modeStates.temporal.phase=null,this.setRevealActive(!1)}forceTemporalCleanup(){console.log("[ModeStateManager] Force temporal cleanup"),this.modeStates.temporal.active=!1,this.modeStates.temporal.phase=null,this.notifyListeners("stateChange",{mode:"temporal",state:this.modeStates.temporal})}}class dt{constructor(t={}){this.viewer=t.viewer,this.spatialIndex=t.spatialIndex,this.debug=t.debug||!1,this.hitCanvas=null,this.hitContext=null,this.debugCanvas=null,this.colorToHotspot=new Map,this.hotspotToColor=new Map,this.nextColorIndex=1,this.stats={totalHotspots:0,renderedHotspots:0,lastRenderTime:0,hitTestCount:0,cacheHits:0},this.isInitialized=!1,this.needsRedraw=!0,this.currentViewport=null,this.hitCache=new Map,this.hitCacheSize=50,this.lastCacheClear=Date.now(),this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,this.isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),console.log("[HIT_DETECTION] Initializing for platform:",{isMobile:this.isMobile,isSafari:this.isSafari,debug:this.debug})}async initialize(){if(this.isInitialized){console.warn("[HIT_DETECTION] Already initialized");return}if(!this.viewer||!this.spatialIndex)throw new Error("HitDetectionCanvas requires viewer and spatialIndex");const t=performance.now();try{await this.waitForViewer(),this.createCanvasElements(),this.generateColorMapping(),this.setupEventHandlers(),this.scheduleRedraw(),this.isInitialized=!0;const e=performance.now()-t;console.log(`[HIT_DETECTION] Initialized in ${e.toFixed(2)}ms`,{totalHotspots:this.stats.totalHotspots,canvasSize:`${this.hitCanvas.width}x${this.hitCanvas.height}`,isMobile:this.isMobile})}catch(e){throw console.error("[HIT_DETECTION] Initialization failed:",e),e}}waitForViewer(){return new Promise(t=>{this.viewer.isOpen()&&this.viewer.world.getItemCount()>0?t():this.viewer.addOnceHandler("open",()=>{setTimeout(t,100)})})}createCanvasElements(){const e=this.viewer.world.getItemAt(0).getContentSize();let i,s;if(this.isMobile){const o=e.x/e.y;e.x>e.y?(i=Math.min(1024,e.x),s=Math.floor(i/o),s>512&&(s=512,i=Math.floor(s*o))):(s=Math.min(1024,e.y),i=Math.floor(s*o),i>512&&(i=512,s=Math.floor(i/o))),console.log(`[MOBILE_OPTIMIZATION] Canvas reduced for performance: ${i}x${s}`)}else i=Math.min(4096,e.x),s=Math.min(4096,e.y);this.hitCanvas=document.createElement("canvas"),this.hitCanvas.width=i,this.hitCanvas.height=s,this.hitCanvas.style.position="absolute",this.hitCanvas.style.top="0",this.hitCanvas.style.left="0",this.hitCanvas.style.width="100%",this.hitCanvas.style.height="100%",this.hitCanvas.style.pointerEvents="none",this.hitCanvas.style.visibility="hidden",this.hitCanvas.style.zIndex="-1000",this.hitContext=this.hitCanvas.getContext("2d",{alpha:!1,willReadFrequently:!0}),this.hitContext.imageSmoothingEnabled=!1,this.hitContext.webkitImageSmoothingEnabled=!1,this.hitContext.mozImageSmoothingEnabled=!1,this.hitContext.msImageSmoothingEnabled=!1,this.debug&&(this.debugCanvas=document.createElement("canvas"),this.debugCanvas.width=i,this.debugCanvas.height=s,this.debugCanvas.style.position="absolute",this.debugCanvas.style.top="0",this.debugCanvas.style.left="0",this.debugCanvas.style.width="100%",this.debugCanvas.style.height="100%",this.debugCanvas.style.pointerEvents="none",this.debugCanvas.style.opacity="0.3",this.debugCanvas.style.zIndex="1000",this.debugCanvas.style.mixBlendMode="multiply",this.debugContext=this.debugCanvas.getContext("2d")),this.viewer.addOverlay({element:this.hitCanvas,location:new x.Rect(0,0,1,e.y/e.x),placement:x.Placement.TOP_LEFT}),this.debug&&this.debugCanvas&&this.viewer.addOverlay({element:this.debugCanvas,location:new x.Rect(0,0,1,e.y/e.x),placement:x.Placement.TOP_LEFT}),console.log(`[HIT_DETECTION] Canvas created: ${i}x${s}`,{originalSize:`${e.x}x${e.y}`,mobile:this.isMobile,debug:this.debug})}generateColorMapping(){const t=this.spatialIndex.getAllHotspots(),e=performance.now();this.colorToHotspot.clear(),this.hotspotToColor.clear(),this.nextColorIndex=1;const i=this.indexToColor(0);this.colorToHotspot.set(i,null),t.forEach((o,n)=>{const l=this.nextColorIndex++,h=this.indexToColor(l);this.colorToHotspot.set(h,o),this.hotspotToColor.set(o.id,h),this.debug&&n<10&&console.log(`[HIT_DETECTION] Hotspot ${o.id} → ${h} (index: ${l})`)}),this.stats.totalHotspots=t.length;const s=performance.now()-e;console.log(`[HIT_DETECTION] Generated ${t.length} unique colors in ${s.toFixed(2)}ms`);const a=new Set(this.hotspotToColor.values()).size;a!==t.length&&console.error(`[HIT_DETECTION] Color collision detected! Expected ${t.length}, got ${a}`)}indexToColor(t){const e=(t&16711680)>>16,i=(t&65280)>>8,s=t&255;return`rgb(${e},${i},${s})`}colorToIndex(t,e,i){return t<<16|e<<8|i}setupEventHandlers(){this.viewer.addHandler("animation-finish",()=>{this.scheduleRedraw()});let t=null;this.viewer.addHandler("viewport-change",()=>{t&&clearTimeout(t),t=setTimeout(()=>{this.scheduleRedraw()},this.isMobile?100:50)}),setInterval(()=>{this.clearHitCache()},5e3)}scheduleRedraw(){this.needsRedraw||(this.needsRedraw=!0,requestAnimationFrame(()=>{this.needsRedraw&&this.renderHitCanvas()}))}renderHitCanvas(){if(!this.isInitialized||!this.hitContext)return;const t=performance.now();this.hitContext.fillStyle=this.indexToColor(0),this.hitContext.fillRect(0,0,this.hitCanvas.width,this.hitCanvas.height);const e=this.viewer.viewport.getBounds(),i=this.spatialIndex.queryViewport({minX:e.x,minY:e.y,maxX:e.x+e.width,maxY:e.y+e.height}),a=this.viewer.world.getItemAt(0).getContentSize(),o=this.hitCanvas.width/a.x,n=this.hitCanvas.height/a.y;let l=0;i.forEach(h=>{const c=this.hotspotToColor.get(h.id);c&&(this.hitContext.fillStyle=c,this.renderHotspotToCanvas(h,o,n),l++)}),this.debug&&this.debugContext&&this.renderDebugCanvas(i,o,n),this.stats.renderedHotspots=l,this.stats.lastRenderTime=performance.now()-t,this.needsRedraw=!1,console.log(`[HIT_DETECTION] Rendered ${l} hotspots in ${this.stats.lastRenderTime.toFixed(2)}ms`)}renderHotspotToCanvas(t,e,i){t.shape==="polygon"?this.renderPolygon(t.coordinates,e,i):t.shape==="multipolygon"&&t.coordinates.forEach(s=>{this.renderPolygon(s,e,i)})}renderPolygon(t,e,i){t.length!==0&&(this.hitContext.beginPath(),t.forEach((s,a)=>{const o=s[0]*e,n=s[1]*i;a===0?this.hitContext.moveTo(o,n):this.hitContext.lineTo(o,n)}),this.hitContext.closePath(),this.hitContext.fill())}renderDebugCanvas(t,e,i){this.debugContext.clearRect(0,0,this.debugCanvas.width,this.debugCanvas.height),t.forEach((s,a)=>{const o=a*137.508%360;this.debugContext.fillStyle=`hsla(${o}, 70%, 50%, 0.6)`,this.renderHotspotToCanvas(s,e,i)})}hitTest(t,e){if(!this.isInitialized||!this.hitContext)return console.warn("[HIT_DETECTION] Hit test called before initialization"),null;this.stats.hitTestCount++;const i=`${t},${e}`;if(this.hitCache.has(i))return this.stats.cacheHits++,this.hitCache.get(i);try{const s=this.hitCanvas.getBoundingClientRect(),a=(t-s.left)/s.width*this.hitCanvas.width,o=(e-s.top)/s.height*this.hitCanvas.height,n=Math.max(0,Math.min(this.hitCanvas.width-1,Math.floor(a))),l=Math.max(0,Math.min(this.hitCanvas.height-1,Math.floor(o))),h=this.hitContext.getImageData(n,l,1,1),[c,m,d]=h.data,u=`rgb(${c},${m},${d})`,v=this.colorToHotspot.get(u);return this.hitCache.size<this.hitCacheSize&&this.hitCache.set(i,v||null),this.debug&&v&&console.log(`[HIT_DETECTION] Hit test: (${t},${e}) → ${v.id}`,{canvasCoords:[n,l],color:u,pixel:[c,m,d]}),v||null}catch(s){return console.error("[HIT_DETECTION] Hit test error:",s),null}}clearHitCache(){Date.now()-this.lastCacheClear>5e3&&(this.hitCache.clear(),this.lastCacheClear=Date.now())}getStats(){return{...this.stats,cacheSize:this.hitCache.size,cacheHitRatio:this.stats.cacheHits/Math.max(1,this.stats.hitTestCount),isInitialized:this.isInitialized,canvasSize:this.hitCanvas?`${this.hitCanvas.width}x${this.hitCanvas.height}`:"Not created"}}setDebugMode(t){this.debug=t,this.debugCanvas&&(this.debugCanvas.style.display=t?"block":"none"),t&&this.scheduleRedraw(),console.log(`[HIT_DETECTION] Debug mode: ${t?"ON":"OFF"}`)}forceRedraw(){this.needsRedraw=!0,this.renderHitCanvas()}destroy(){this.hitCanvas&&this.viewer.removeOverlay(this.hitCanvas),this.debugCanvas&&this.viewer.removeOverlay(this.debugCanvas),this.colorToHotspot.clear(),this.hotspotToColor.clear(),this.hitCache.clear(),this.isInitialized=!1,console.log("[HIT_DETECTION] Destroyed")}}class mt{constructor(t={}){const e=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window;this.config={maxVisibleHotspots:e?{low:0,medium:5,high:10,critical:15}:{low:50,medium:100,high:150,critical:200},zoomThresholds:{low:2,medium:5,high:10},clustering:{enabled:!0,minDistance:50,maxClusterSize:8,zoomThreshold:3},scoring:{typeWeights:{audio_only:1,audio_image:.9,image_only:.7,link_only:.5,mixed:.8},sizeWeight:.3,distanceWeight:.4,interactionWeight:.3,selectedBonus:2,hoveredBonus:1.5},performance:{adaptiveThresholds:!0,fpsThreshold:e?35:45,memoryThreshold:e?150:200,emergencyReduction:.5}},this.lastZoom=0,this.lastViewportCenter=null,this.interactionHistory=new Map,this.clusterCache=new Map,this.lastVisibleSet=new Set,this.performanceMode="normal",this.boundsCache=new Map,this.centerCache=new Map,this.stats={totalHotspots:0,visibleHotspots:0,clusteredHotspots:0,lastUpdateTime:0,averageScore:0},this.isMobile=e}selectVisibleHotspots(t,e,i,s,a){const o=performance.now(),l=e.getBounds().getCenter(),h=this.getLODLevel(i),c=this.getMaxVisibleCount(h,i),m=this.filterViewportCandidates(t,e),d=this.applySpatialClustering(m,i,e),u=this.scoreHotspots(d,l,s,a),v=this.selectTopHotspots(u,c,s,a);return this.updateStats(m.length,v.length,o),m.length>c&&(v.length<m.length*.3||this.stats.lastUpdateTime>20)&&console.log(`[LOD] Reduced ${m.length} → ${v.length} hotspots (zoom: ${i.toFixed(2)})`),v}getLODLevel(t){return t<this.config.zoomThresholds.low?"low":t<this.config.zoomThresholds.medium?"medium":t<this.config.zoomThresholds.high?"high":"critical"}getMaxVisibleCount(t,e){let i=this.config.maxVisibleHotspots[t];if(this.performanceMode==="reduced"?i=Math.floor(i*.75):this.performanceMode==="emergency"&&(i=Math.floor(i*this.config.performance.emergencyReduction)),t==="medium"){const a=Math.min(1,(e-this.config.zoomThresholds.low)/(this.config.zoomThresholds.medium-this.config.zoomThresholds.low));i=Math.floor(this.config.maxVisibleHotspots.low+(this.config.maxVisibleHotspots.medium-this.config.maxVisibleHotspots.low)*a)}const s=this.isMobile?15:25;return Math.max(s,i)}filterViewportCandidates(t,e){const i=e.getBounds(),s=e.viewportToImageCoordinates(i.getTopLeft()),a=e.viewportToImageCoordinates(i.getBottomRight()),o={minX:s.x,minY:s.y,maxX:a.x,maxY:a.y},n=e.getZoom(),l=n<2?.3:n<5?.2:.1,h=(o.maxX-o.minX)*l;return o.minX-=h,o.minY-=h,o.maxX+=h,o.maxY+=h,t.filter(c=>{const m=c.overlay;if(!m||!m.bounds){const d=this.calculateHotspotBounds(c);return!(d.maxX<o.minX||d.minX>o.maxX||d.maxY<o.minY||d.minY>o.maxY)}return!(m.bounds.maxX<o.minX||m.bounds.minX>o.maxX||m.bounds.maxY<o.minY||m.bounds.minY>o.maxY)})}applySpatialClustering(t,e,i){if(!this.config.clustering.enabled||e>this.config.clustering.zoomThreshold)return t;const s=`${e.toFixed(1)}_${t.length}`;if(this.clusterCache.has(s))return this.clusterCache.get(s);const a=[],o=new Set,n=this.config.clustering.minDistance/i.getZoom();for(const l of t){if(o.has(l.id))continue;const h=[l];o.add(l.id);for(const c of t)o.has(c.id)||h.length>=this.config.clustering.maxClusterSize||this.calculateDistance(l,c)<n&&(h.push(c),o.add(c.id));h.length>1?(h.sort((c,m)=>{const d=this.config.scoring.typeWeights[c.type]||.5;return(this.config.scoring.typeWeights[m.type]||.5)-d}),a.push(...h.slice(0,Math.min(2,h.length)))):a.push(l)}return this.clusterCache.size>10&&this.clusterCache.clear(),this.clusterCache.set(s,a),a}scoreHotspots(t,e,i,s){var c;const a=Date.now(),o=Math.max(e.x,e.y),n=i==null?void 0:i.id,l=s==null?void 0:s.id,h=[];for(let m=0;m<t.length;m++){const d=t[m];let u=0;u+=(this.config.scoring.typeWeights[d.type]||.5)*.3,(c=d.overlay)!=null&&c.area&&(u+=Math.min(1,d.overlay.area/1e4)*this.config.scoring.sizeWeight);const v=this.getHotspotCenter(d),p=e.x-v.x,g=e.y-v.y,w=Math.sqrt(p*p+g*g);u+=Math.max(0,1-w/o)*this.config.scoring.distanceWeight;const S=this.interactionHistory.get(d.id);S&&a-S<3e4&&(u+=Math.max(0,1-(a-S)/3e4)*this.config.scoring.interactionWeight),d.id===n?u*=this.config.scoring.selectedBonus:d.id===l&&(u*=this.config.scoring.hoveredBonus),h.push({hotspot:d,score:Math.min(5,u)})}return h}selectTopHotspots(t,e,i,s){const a=new Set;i&&a.add(i.id),s&&a.add(s.id),t.sort((l,h)=>h.score-l.score);const o=[],n=a.size;for(const l of t)if(a.has(l.hotspot.id)&&(o.push(l.hotspot),o.length>=n))break;e-o.length;for(const l of t){if(o.length>=e)break;a.has(l.hotspot.id)||o.push(l.hotspot)}return o}recordInteraction(t){if(this.interactionHistory.set(t,Date.now()),this.interactionHistory.size>50){const e=Date.now()-6e4;for(const[i,s]of this.interactionHistory.entries())s<e&&this.interactionHistory.delete(i)}}updatePerformanceMode(t,e){const i=this.performanceMode;t>0&&t<30?this.performanceMode="emergency":t>0&&t<this.config.performance.fpsThreshold?this.performanceMode="reduced":e>this.config.performance.memoryThreshold?this.performanceMode="reduced":this.performanceMode="normal",this.performanceMode}calculateDistance(t,e){const i=t.x-e.x,s=t.y-e.y;return Math.sqrt(i*i+s*s)}calculateHotspotBounds(t){const e=this.boundsCache.get(t.id);if(e)return e;const i=t.coordinates;if(!i||i.length===0)return{minX:0,minY:0,maxX:0,maxY:0};let s={minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0};const a=o=>{o.forEach(([n,l])=>{s.minX=Math.min(s.minX,n),s.minY=Math.min(s.minY,l),s.maxX=Math.max(s.maxX,n),s.maxY=Math.max(s.maxY,l)})};return Array.isArray(i[0])&&typeof i[0][0]=="number"?a(i):i.forEach(a),this.boundsCache.set(t.id,s),s}getHotspotCenter(t){const e=this.centerCache.get(t.id);if(e)return e;let i;if(t.overlay&&t.overlay.bounds){const s=t.overlay.bounds;i={x:(s.minX+s.maxX)/2,y:(s.minY+s.maxY)/2}}else{const s=t.coordinates;if(s&&s.length>0){let a=0,o=0,n=0;const l=h=>{for(const[c,m]of h)a+=c,o+=m,n++};typeof s[0][0]=="number"?l(s):s.forEach(l),i={x:a/n,y:o/n}}else i={x:0,y:0}}return this.centerCache.set(t.id,i),i}updateStats(t,e,i){this.stats.totalHotspots=t,this.stats.visibleHotspots=e,this.stats.lastUpdateTime=performance.now()-i;const s=t>0?((t-e)/t*100).toFixed(1):0;t>e&&this.stats.lastUpdateTime>20&&console.log(`[LOD] Slow processing: ${this.stats.lastUpdateTime.toFixed(2)}ms | Reduction: ${s}% | Mode: ${this.performanceMode}`)}getStats(){return{...this.stats,performanceMode:this.performanceMode,cacheSize:this.clusterCache.size,interactionHistorySize:this.interactionHistory.size}}reset(){this.clusterCache.clear(),this.interactionHistory.clear(),this.lastVisibleSet.clear(),this.boundsCache.clear(),this.centerCache.clear(),this.performanceMode="normal"}}function gt(r,t){const e=t?r[0]:r;let i="";return e.forEach(([s,a],o)=>{o===0?i+=`M ${Math.round(s)} ${Math.round(a)} `:i+=`L ${Math.round(s)} ${Math.round(a)} `}),i+="Z",i}function et(r){let t={minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0};const e=i=>{i.forEach(([s,a])=>{t.minX=Math.min(t.minX,s),t.minY=Math.min(t.minY,a),t.maxX=Math.max(t.maxX,s),t.maxY=Math.max(t.maxY,a)})};return Array.isArray(r[0])&&typeof r[0][0]=="number"?e(r):r.forEach(e),t}function ut(r){return(r.maxX-r.minX)*(r.maxY-r.minY)}function j(r,t,e){let i=!1;const s=e.length;let a=e[0][0],o=e[0][1];for(let n=1;n<=s;n++){const l=e[n%s][0],h=e[n%s][1];if(t>Math.min(o,h)&&t<=Math.max(o,h)&&r<=Math.max(a,l)&&o!==h){const c=(t-o)*(l-a)/(h-o)+a;(a===l||r<=c)&&(i=!i)}a=l,o=h}return i}class pt{constructor({colorScheme:t,isMobile:e}){this.colorScheme=t,this.isMobile=e,this.isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),this.isWebKit="WebkitAppearance"in document.documentElement.style&&!window.chrome,this.isSafariOrWebKit=this.isSafari||this.isWebKit,this.config={hoverThrottleDelay:50,maxGlowLayers:3,iosClickDelay:300,gpuAccelerationHints:!0}}get isSafariEnvironment(){return this.isSafari||this.isWebKit}optimizeLayers(t){if(!this.isSafari)return;let e=1e-4;t.forEach(i=>{i.element.querySelectorAll(".glow-layer-1, .glow-layer-2, .glow-layer-3").forEach(a=>{a.style.transform=`translateZ(${e}px)`,e+=1e-4})})}forceIOSRedraw(){if(!this.isMobile||!this.isSafariEnvironment)return;const t=document.body,e=t.style.transform;t.style.transform="translateZ(0)",t.offsetHeight,t.style.transform=e}createGlowLayers(t,e,i){if(!this.isSafari)return;const s=i.main==="#000000",a=document.createElementNS("http://www.w3.org/2000/svg","path");a.setAttribute("d",e),a.setAttribute("fill","none"),a.setAttribute("stroke","rgba(255, 255, 255, 0.3)"),a.setAttribute("stroke-width","40"),a.setAttribute("opacity","0"),a.setAttribute("pathLength","100"),a.style.pointerEvents="none",a.classList.add("glow-layer-4"),t.appendChild(a);const o=document.createElementNS("http://www.w3.org/2000/svg","path");o.setAttribute("d",e),o.setAttribute("fill","none"),o.setAttribute("stroke",s?"rgba(40, 40, 40, 0.8)":i.glow2||i.glow),o.setAttribute("stroke-width","30"),o.setAttribute("opacity","0"),o.setAttribute("pathLength","100"),o.style.pointerEvents="none",o.classList.add("glow-layer-3"),t.appendChild(o);const n=document.createElementNS("http://www.w3.org/2000/svg","path");n.setAttribute("d",e),n.setAttribute("fill","none"),n.setAttribute("stroke",s?"rgba(30, 30, 30, 0.9)":i.glow),n.setAttribute("stroke-width","20"),n.setAttribute("opacity","0"),n.setAttribute("pathLength","100"),n.style.pointerEvents="none",n.classList.add("glow-layer-2"),t.appendChild(n);const l=document.createElementNS("http://www.w3.org/2000/svg","path");return l.setAttribute("d",e),l.setAttribute("fill","none"),l.setAttribute("stroke",s?"rgba(20, 20, 20, 1)":i.main),l.setAttribute("stroke-width","12"),l.setAttribute("opacity","0"),l.setAttribute("pathLength","100"),l.style.pointerEvents="none",l.classList.add("glow-layer-1"),t.appendChild(l),{glowPath1:l,glowPath2:n,glowPath3:o,glowPath4:a}}setGlowLayerLengths(t,e){const i=t.querySelector(".glow-layer-1"),s=t.querySelector(".glow-layer-2"),a=t.querySelector(".glow-layer-3"),o=t.querySelector(".glow-layer-4");[i,s,a,o].forEach(n=>{n&&n.setAttribute("data-real-length",e)})}setupIOSClickHandler(t,e,i){!this.isMobile&&!this.isSafariOrWebKit||t.addEventListener("click",s=>{var l,h,c;if(s.target.tagName==="path"||s.target.tagName==="g"||s.target.closest("g[data-hotspot-id]"))return;const a=(l=window.nativeHotspotRenderer)==null?void 0:l.modeStateManager,o=(h=window.nativeHotspotRenderer)==null?void 0:h.echoController;if(a&&o&&a.getCurrentMode()==="direct"&&((c=o.config)!=null&&c.enabled)){console.log("iOS/Safari: Skipping click - echo mode active");return}const n=e(s);n&&(console.log("iOS/Safari: Found hotspot at SVG click position:",n.id),s.stopPropagation(),s.preventDefault(),i(n))},!0)}createHoverThrottle(){let t=null;return e=>{if(!this.isSafari){e();return}t||(t=setTimeout(()=>{t=null},this.config.hoverThrottleDelay),e())}}optimizePathsForGPU(t){if(!this.isSafari)return;const e=t.element.getElementsByTagName("path");for(let i of e)i.style.transform="translateZ(0)",i.style.webkitBackfaceVisibility="hidden"}animateSafariGlowLayers(t,e,i,s,a){const o=t.querySelector(".glow-layer-1"),n=t.querySelector(".glow-layer-2"),l=t.querySelector(".glow-layer-3"),h=t.querySelector(".glow-layer-4"),c=t.querySelector(".main-path"),d=Math.random()*100,u=t.getAttribute("data-hotspot-id");console.log(`[Safari Random Start] Rotating dash animation for ${u}: offset ${d.toFixed(1)}% of path`);const v=s.main==="#000000";[{element:c,delay:0,opacity:"1"},{element:o,delay:0,opacity:e==="selected"?v?"0.9":"1":v?"0.85":"0.95"},{element:n,delay:0,opacity:e==="selected"?v?"0.8":"0.9":v?"0.7":"0.85"},{element:l,delay:0,opacity:e==="selected"?v?"0.6":"0.8":v?"0.5":"0.7"},{element:h,delay:0,opacity:e==="selected"?"0.35":"0.3"}].forEach(({element:g,delay:w,opacity:S})=>{if(g&&g.animate){Object.assign(g.style,{strokeDasharray:"0 100",strokeDashoffset:`-${d}`,opacity:"0",transition:"none",animation:"none",paintOrder:"stroke",transform:`translateZ(${w*.001}px)`,willChange:"stroke-dasharray, stroke-dashoffset, opacity"});const f=g.animate([{strokeDasharray:"0 100",strokeDashoffset:`-${d}`,opacity:"0",offset:0},{strokeDasharray:"10 90",strokeDashoffset:`-${d}`,opacity:"0.1",offset:.1},{strokeDasharray:"50 50",strokeDashoffset:`-${d}`,opacity:"0.3",offset:.5},{strokeDasharray:"95 5",strokeDashoffset:`-${d}`,opacity:S,offset:.95},{strokeDasharray:"100 0",strokeDashoffset:`-${d}`,opacity:S,offset:1}],{duration:i*1e3,delay:w,easing:a,fill:"forwards"});g.currentAnimation=f,e==="selected"?(w===150&&(g.style.filter="blur(1px)"),w===100&&(g.style.filter="blur(2px)"),w===50&&(g.style.filter="blur(3px)")):(w===150&&(g.style.filter="none"),w===100&&(g.style.filter="blur(1px)"),w===50&&(g.style.filter="blur(2px)"))}})}resetSafariGlowLayers(t){const e=t.querySelectorAll(".glow-layer-1, .glow-layer-2, .glow-layer-3, .glow-layer-4"),i=t.querySelector(".main-path");(i?[i,...e]:[...e]).forEach(a=>{a.style.animation="none",a.currentAnimation&&(a.currentAnimation.cancel(),a.currentAnimation=null),a.offsetWidth,Object.assign(a.style,{strokeDasharray:"100 100",strokeDashoffset:"100",transition:"opacity 0.1s ease-out",opacity:"0",filter:"none"})})}}class ft{constructor(){this.overlays=new Map,this.visibleOverlays=new Set,this.hoveredHotspot=null,this.selectedHotspot=null,this.selectionTimestamp=null,this.hotspotAreas=new Map,this.callbacks={onHoverChange:null,onSelectionChange:null,onVisibilityChange:null}}setCallbacks({onHoverChange:t,onSelectionChange:e,onVisibilityChange:i}){t&&(this.callbacks.onHoverChange=t),e&&(this.callbacks.onSelectionChange=e),i&&(this.callbacks.onVisibilityChange=i)}addOverlay(t,e){this.overlays.set(t,e),e.area!==void 0&&this.hotspotAreas.set(t,e.area)}getOverlay(t){return this.overlays.get(t)}getAllOverlays(){return this.overlays}removeOverlay(t){var e,i;this.overlays.delete(t),this.hotspotAreas.delete(t),this.visibleOverlays.delete(t),((e=this.hoveredHotspot)==null?void 0:e.id)===t&&this.setHoveredHotspot(null),((i=this.selectedHotspot)==null?void 0:i.id)===t&&this.setSelectedHotspot(null)}setOverlayVisibility(t,e){const i=this.overlays.get(t);i&&(i.isVisible=e,e?this.visibleOverlays.add(t):this.visibleOverlays.delete(t),this.callbacks.onVisibilityChange&&this.callbacks.onVisibilityChange(t,e))}batchUpdateVisibility(t){t.forEach(({id:e,isVisible:i})=>{const s=this.overlays.get(e);s&&(s.isVisible=i,i?this.visibleOverlays.add(e):this.visibleOverlays.delete(e))}),this.callbacks.onVisibilityChange&&this.callbacks.onVisibilityChange(null,null,t)}getVisibleCount(){return this.visibleOverlays.size}isOverlayVisible(t){const e=this.overlays.get(t);return e?e.isVisible:!1}setHoveredHotspot(t){const e=this.hoveredHotspot;this.hoveredHotspot=t,this.callbacks.onHoverChange&&this.callbacks.onHoverChange(t,e)}setSelectedHotspot(t){const e=this.selectedHotspot;this.selectedHotspot=t,this.selectionTimestamp=t?Date.now():null,this.callbacks.onSelectionChange&&this.callbacks.onSelectionChange(t,e)}getHoveredHotspot(){return this.hoveredHotspot}getSelectedHotspot(){return this.selectedHotspot}getHotspotArea(t){return this.hotspotAreas.get(t)}findOverlaysInBounds(t){const e=[];return this.overlays.forEach((i,s)=>{i.bounds&&i.bounds.minX<=t.maxX&&i.bounds.maxX>=t.minX&&i.bounds.minY<=t.maxY&&i.bounds.maxY>=t.minY&&e.push(i)}),e}clear(){this.overlays.clear(),this.visibleOverlays.clear(),this.hotspotAreas.clear(),this.hoveredHotspot=null,this.selectedHotspot=null,this.selectionTimestamp=null}getStateSummary(){var t,e;return{totalOverlays:this.overlays.size,visibleOverlays:this.visibleOverlays.size,hoveredId:((t=this.hoveredHotspot)==null?void 0:t.id)||null,selectedId:((e=this.selectedHotspot)==null?void 0:e.id)||null,selectionAge:this.selectionTimestamp?Date.now()-this.selectionTimestamp:null}}}class vt{constructor(){this.events=new Map}on(t,e){return this.events.has(t)||this.events.set(t,new Set),this.events.get(t).add(e),()=>this.off(t,e)}off(t,e){const i=this.events.get(t);i&&(i.delete(e),i.size===0&&this.events.delete(t))}emit(t,e){const i=this.events.get(t);i&&i.forEach(s=>{try{s(e)}catch(a){console.error(`Error in event handler for ${t}:`,a)}})}once(t,e){const i=s=>{this.off(t,i),e(s)};return this.on(t,i)}clear(){this.events.clear()}}class yt{constructor(t={}){this.velocityThreshold=t.velocityThreshold||150,this.dwellThreshold=t.dwellThreshold||100,this.historySize=t.historySize||10,this.history=[],this.lastPosition=null,this.lastTime=null}updatePosition(t,e){const i=performance.now();if(this.lastPosition&&this.lastTime){const s=t-this.lastPosition.x,a=e-this.lastPosition.y,o=i-this.lastTime;if(o>0){const l=Math.sqrt(s*s+a*a)/o*1e3;this.history.push({velocity:l,time:i,position:{x:t,y:e}}),this.history.length>this.historySize&&this.history.shift()}}this.lastPosition={x:t,y:e},this.lastTime=i}calculateVelocity(){if(this.history.length===0)return 0;const t=this.history.slice(-5);return t.reduce((i,s)=>i+s.velocity,0)/t.length}calculateDwellTime(){if(this.history.length===0)return 0;const t=performance.now(),e=this.history[this.history.length-1];return t-e.time}shouldTriggerHover(){const t=this.calculateVelocity(),e=this.calculateDwellTime();return window.DEBUG_ANIMATIONS&&console.log(`[HoverIntent] Velocity: ${t.toFixed(0)} px/s, Dwell: ${e.toFixed(0)}ms, VelThreshold: ${this.velocityThreshold}, DwellThreshold: ${this.dwellThreshold}`),t>this.velocityThreshold?!1:e>this.dwellThreshold}getInteractionMode(){const t=this.calculateVelocity();return t>200?"exploration":t>100?"navigation":"detail"}reset(){this.history=[],this.lastPosition=null,this.lastTime=null}}class wt extends vt{constructor(t={}){super(),this.isMobile=t.isMobile||!1,this.isSafari=t.isSafari||!1,this.clickTimeThreshold=t.clickTimeThreshold||300,this.clickDistThreshold=t.clickDistThreshold||(this.isMobile?12:8),this.mobileDragThreshold=t.mobileDragThreshold||15,this.activePointers=new Map,this.primaryPointerId=null,this.isDragging=!1,this.isPinching=!1,this.dragStartTime=0,this.dragStartPoint=null,this.lastEchoTapTime=0,this.hoverThrottleTimer=null,this.baseHoverDelay={exploration:50,navigation:100,detail:150},this.hoverThrottleDelay=this.isSafari?50:0,this.hoverIntentDetector=new yt({velocityThreshold:300,dwellThreshold:50}),this.currentMode="direct",this.temporalState={active:!1,phase:null,hotspot:null},this.eventProcessingPaused=!1,this.eventTypes={POINTER_DOWN:"pointer:down",POINTER_MOVE:"pointer:move",POINTER_UP:"pointer:up",POINTER_CANCEL:"pointer:cancel",MOUSE_MOVE:"mouse:move",CLICK:"click",TOUCH_START:"touch:start",TOUCH_MOVE:"touch:move",TOUCH_END:"touch:end",DRAG_START:"drag:start",DRAG_MOVE:"drag:move",DRAG_END:"drag:end",HOTSPOT_HOVER:"hotspot:hover",HOTSPOT_SELECT:"hotspot:select",HOTSPOT_DESELECT:"hotspot:deselect",HOTSPOT_ACTIVATE:"hotspot:activate",MODE_CHANGE:"mode:change",TEMPORAL_PHASE:"temporal:phase",TEMPORAL_START:"temporal:start",TEMPORAL_END:"temporal:end",REVEAL_TOGGLE:"reveal:toggle",ECHO_TAP:"echo:tap",ECHO_REVEAL_START:"echo:reveal:start",ECHO_REVEAL_END:"echo:reveal:end",VISIBILITY_CHANGE:"visibility:change",VISIBILITY_UPDATE:"visibility:update",ANIMATION_START:"animation:start",ANIMATION_END:"animation:end",ZOOM_START:"zoom:start",ZOOM_END:"zoom:end"},this.handlePointerDown=this.handlePointerDown.bind(this),this.handlePointerMove=this.handlePointerMove.bind(this),this.handlePointerUp=this.handlePointerUp.bind(this),this.handlePointerCancel=this.handlePointerCancel.bind(this),this.handleMouseMove=this.handleMouseMove.bind(this),this.handleClick=this.handleClick.bind(this)}updateHoverDelayForZoom(t){const i=t/10*100;let s,a;i<50?(s="exploration",a=this.baseHoverDelay.exploration):i<200?(s="navigation",a=this.baseHoverDelay.navigation):(s="detail",a=this.baseHoverDelay.detail),this.isSafari&&(a=Math.min(a*1.2,200)),this.hoverThrottleDelay=a,window.DEBUG_ANIMATIONS&&console.log(`[EventCoordinator] Hover delay updated: mode=${s}, delay=${this.hoverThrottleDelay}ms`)}initialize(t,e){this.container=t,this.svg=e,t.addEventListener("pointerdown",this.handlePointerDown),t.addEventListener("pointermove",this.handlePointerMove),t.addEventListener("pointerup",this.handlePointerUp),t.addEventListener("pointercancel",this.handlePointerCancel),e.addEventListener("mousemove",this.handleMouseMove),this.isMobile&&e.addEventListener("touchmove",this.handleTouchMove.bind(this),{passive:!1}),console.log("[EventCoordinator] Initialized with event listeners"),this.on(this.eventTypes.ECHO_TAP,()=>{this.lastEchoTapTime=performance.now()})}handlePointerDown(t){this.activePointers.set(t.pointerId,{x:t.clientX,y:t.clientY,startX:t.clientX,startY:t.clientY,startTime:Date.now()}),this.activePointers.size===1&&(this.primaryPointerId=t.pointerId,this.dragStartTime=Date.now(),this.dragStartPoint={x:t.clientX,y:t.clientY}),this.activePointers.size>=2&&(this.isPinching=!0),this.emit(this.eventTypes.POINTER_DOWN,{pointerId:t.pointerId,isPrimary:t.pointerId===this.primaryPointerId,x:t.clientX,y:t.clientY,activePointers:this.activePointers.size,event:t}),this.isMobile&&t.preventDefault()}handlePointerMove(t){if(!this.activePointers.has(t.pointerId))return;const e=this.activePointers.get(t.pointerId),i=e.x,s=e.y;e.x=t.clientX,e.y=t.clientY;const a=Math.sqrt(Math.pow(t.clientX-e.startX,2)+Math.pow(t.clientY-e.startY,2)),o=this.isMobile?this.mobileDragThreshold:this.clickDistThreshold;!this.isDragging&&a>o&&(this.isDragging=!0,this.emit(this.eventTypes.DRAG_START,{pointerId:t.pointerId,startX:e.startX,startY:e.startY,currentX:t.clientX,currentY:t.clientY})),this.emit(this.eventTypes.POINTER_MOVE,{pointerId:t.pointerId,isPrimary:t.pointerId===this.primaryPointerId,x:t.clientX,y:t.clientY,deltaX:t.clientX-i,deltaY:t.clientY-s,distance:a,isDragging:this.isDragging,isPinching:this.isPinching,event:t}),this.isDragging&&this.emit(this.eventTypes.DRAG_MOVE,{pointerId:t.pointerId,x:t.clientX,y:t.clientY,deltaX:t.clientX-i,deltaY:t.clientY-s})}handlePointerUp(t){if(!this.activePointers.has(t.pointerId))return;const e=this.activePointers.get(t.pointerId),i=Date.now()-e.startTime,s=Math.sqrt(Math.pow(t.clientX-e.startX,2)+Math.pow(t.clientY-e.startY,2)),a=t.pointerId===this.primaryPointerId&&this.activePointers.size===1&&!this.isPinching&&!this.isDragging&&s<this.clickDistThreshold&&i<this.clickTimeThreshold;if(this.emit(this.eventTypes.POINTER_UP,{pointerId:t.pointerId,isPrimary:t.pointerId===this.primaryPointerId,x:t.clientX,y:t.clientY,duration:i,distance:s,wasClick:a,wasDrag:this.isDragging,event:t}),a){const o=performance.now();let n=!1;this.lastEchoTapTime&&o-this.lastEchoTapTime<100&&(n=!0,console.log("[EventCoordinator] Suppressing click after quick tap")),n||this.emit(this.eventTypes.CLICK,{x:t.clientX,y:t.clientY,duration:i,event:t}),setTimeout(()=>{this.isDragging&&(console.log("[EventCoordinator] Force resetting stuck drag state after click"),this.isDragging=!1,window.lastKnownMouseX!==void 0&&window.lastKnownMouseY!==void 0&&this.emit(this.eventTypes.MOUSE_MOVE,{x:window.lastKnownMouseX,y:window.lastKnownMouseY,skipAnimation:!1,forceHover:!0}))},50)}this.isDragging&&t.pointerId===this.primaryPointerId&&this.emit(this.eventTypes.DRAG_END,{pointerId:t.pointerId,x:t.clientX,y:t.clientY,duration:i,distance:s}),this.activePointers.delete(t.pointerId),this.activePointers.size===0?(this.primaryPointerId=null,this.isPinching=!1,this.isDragging=!1,this.dragStartTime=0,this.dragStartPoint=null):a&&(console.log("[EventCoordinator] Resetting drag state after click even with active pointers"),this.isDragging=!1)}handlePointerCancel(t){this.handlePointerUp(t),this.emit(this.eventTypes.POINTER_CANCEL,{pointerId:t.pointerId})}handleMouseMove(t){if(this.isDragging&&this.activePointers.size===0&&(console.warn("[EventCoordinator] Detected stuck drag state with no active pointers, resetting"),this.isDragging=!1,this.dragStartTime=0,this.dragStartPoint=null),this.isDragging||this.currentMode==="temporal"||(this.hoverIntentDetector.updatePosition(t.clientX,t.clientY),this.hoverIntentDetector.shouldTriggerHover(),this.hoverThrottleTimer))return;const e=this.hoverIntentDetector.getInteractionMode();this.hoverThrottleTimer=setTimeout(()=>{this.hoverThrottleTimer=null},this.hoverThrottleDelay),!this.eventProcessingPaused&&this.emit(this.eventTypes.MOUSE_MOVE,{x:t.clientX,y:t.clientY,target:t.target,event:t,interactionMode:e,skipHover:!1})}handleTouchMove(t){if(this.isDragging||this.currentMode==="temporal")return;t.preventDefault();const e=t.touches[0];this.emit(this.eventTypes.TOUCH_MOVE,{x:e.clientX,y:e.clientY,touches:t.touches.length,event:t})}handleClick(t){t.target.closest(".openseadragon-controls")}setMode(t){const e=this.currentMode;this.currentMode=t,this.emit(this.eventTypes.MODE_CHANGE,{from:e,to:t})}setMode(t){const e=this.currentMode;this.currentMode=t,console.log(`[EventCoordinator] Mode changed from ${e} to ${t}`),this.emit(this.eventTypes.MODE_CHANGE,{from:e,to:t}),t!=="temporal"&&this.setTemporalState(!1,null,null)}getMode(){return this.currentMode}setTemporalState(t,e,i){this.temporalState={active:t,phase:e,hotspot:i},e!==null&&this.emit(this.eventTypes.TEMPORAL_PHASE,{phase:e,hotspot:i}),t&&!this.temporalState.active?this.emit(this.eventTypes.TEMPORAL_START,{hotspot:i}):!t&&this.temporalState.active&&this.emit(this.eventTypes.TEMPORAL_END,{hotspot:i})}emitHotspotHover(t,e){this.emit(this.eventTypes.HOTSPOT_HOVER,{hotspot:t,previousHotspot:e})}emitHotspotSelect(t,e){this.emit(this.eventTypes.HOTSPOT_SELECT,{hotspot:t,previousHotspot:e}),!t&&e&&this.emit(this.eventTypes.HOTSPOT_DESELECT,{hotspot:e})}emitHotspotActivate(t){this.emit(this.eventTypes.HOTSPOT_ACTIVATE,{hotspot:t})}pauseEventProcessing(){this.eventProcessingPaused=!0}resumeEventProcessing(){this.eventProcessingPaused=!1}forceReactivateMouseTracking(){console.log("[EventCoordinator] Force reactivating mouse tracking"),this.eventProcessingPaused=!1,this.isDragging=!1,window.lastKnownMouseX!==void 0&&window.lastKnownMouseY!==void 0&&(console.log("[EventCoordinator] Emitting last known mouse position"),this.emit(this.eventTypes.MOUSE_MOVE,{x:window.lastKnownMouseX,y:window.lastKnownMouseY,skipAnimation:!1,forceHover:!0,skipHover:!1}))}getPointerState(){return{activePointers:this.activePointers.size,primaryPointerId:this.primaryPointerId,isDragging:this.isDragging,isPinching:this.isPinching}}isCurrentlyDragging(){return this.isDragging}resetDragState(){this.isDragging=!1,this.dragStartTime=0,this.dragStartPoint=null}destroy(){this.container&&(this.container.removeEventListener("pointerdown",this.handlePointerDown),this.container.removeEventListener("pointermove",this.handlePointerMove),this.container.removeEventListener("pointerup",this.handlePointerUp),this.container.removeEventListener("pointercancel",this.handlePointerCancel)),this.svg&&(this.svg.removeEventListener("mousemove",this.handleMouseMove),this.isMobile&&this.svg.removeEventListener("touchmove",this.handleTouchMove)),this.clear(),this.hoverThrottleTimer&&(clearTimeout(this.hoverThrottleTimer),this.hoverThrottleTimer=null)}}class bt{constructor(t={}){this.viewer=t.viewer,this.colorScheme=t.colorScheme,this.isSafari=t.isSafari,this.isMobile=t.isMobile,this.config={zoomThreshold:8,transitionDuration:"0.15s",strokeWidthHover:"3px",strokeWidthSelected:"4px",opacityHover:"1.0",opacitySelected:"1.0"}}shouldActivate(t){return t>this.config.zoomThreshold}applyStaticStyle(t,e,i,s){var n,l;const a=t.getAttribute("data-hotspot-id");console.log(`[StaticRenderer] applyStaticStyle called for ${a}, state=${i}`),t.setAttribute("class",`hotspot-${e} hotspot-${i}`),t.setAttribute("data-current-state",i),t.setAttribute("data-animation-active","false");const o=t.querySelector(".main-path");if(o){const h=window.overlayManager||((n=this.viewer)==null?void 0:n.overlayManager),c=h&&h.constructor.name==="Canvas2DOverlayManager";if(o.style.transition=`all ${this.config.transitionDuration} ease-out`,o.style.fill="none",o.style.stroke=c?"transparent":s.main,o.style.strokeWidth=c?"0":i==="selected"?this.config.strokeWidthSelected:this.config.strokeWidthHover,o.style.opacity=c?"0":i==="selected"?this.config.opacitySelected:this.config.opacityHover,console.log(`[StaticRenderer] Applied styles for ${a}:`,{state:i,stroke:o.style.stroke,strokeWidth:o.style.strokeWidth,opacity:o.style.opacity,isCanvas2D:c,overlayManagerType:((l=h==null?void 0:h.constructor)==null?void 0:l.name)||"none"}),o.style.strokeDasharray="none",o.style.strokeDashoffset="0",t.setAttribute("data-animation-completed","true"),!this.isSafari&&!c){o.style.filter=`
                    blur(0px) 
                    contrast(1.4) 
                    drop-shadow(0 0 4px rgba(11, 18, 21, 0.7))
                    drop-shadow(0 0 10px rgba(11, 18, 21, 0.5))
                    drop-shadow(0 0 18px rgba(255, 255, 255, 0.3))
                    drop-shadow(0 0 30px rgba(255, 255, 255, 0.2))
                    drop-shadow(1px 1px 4px rgba(11, 18, 21, 0.4))
                `;const m=i==="selected"?.5:.4,d=i==="selected"?"20px":"15px";o.style.boxShadow=`
                    0 0 ${d} rgba(11, 18, 21, ${m*2}),
                    0 0 ${d*2} rgba(255, 255, 255, 0.25),
                    0 0 ${d*3} rgba(255, 255, 255, 0.2),
                    0 0 ${d*1.5} rgba(11, 18, 21, ${m*1.5}),
                    inset 0 0 3px rgba(11, 18, 21, 0.15)
                `}else c&&(o.style.filter="none",o.style.boxShadow="none")}this.isSafari&&this.applySafariStaticStyle(t,i),t.style.opacity="1"}applySafariStaticStyle(t,e){t.querySelectorAll(".glow-layer-1, .glow-layer-2, .glow-layer-3").forEach((s,a)=>{s.style.transition=`opacity ${this.config.transitionDuration} ease-out`,s.style.strokeDasharray="none",s.style.strokeDashoffset="0";const o=e==="selected"?["0.5","0.3","0.2"]:["0.4","0.2","0.1"];s.style.opacity=o[a]||"0"})}resetTransitions(t){const e=t.getElementsByTagName("path");for(let i of e)i.style.transition="none",i.offsetWidth}isExitingStaticMode(t,e){return parseFloat(t.getAttribute("data-last-zoom")||"0")>this.config.zoomThreshold&&e<=this.config.zoomThreshold}updateZoomTracking(t,e){t.setAttribute("data-last-zoom",e.toString())}}class Tt{constructor(t={}){this.viewer=t.viewer,this.svg=t.svg,this.isMobile=t.isMobile,this.debugMode=t.debugMode,this.state={active:!1,timer:null,duration:6e3,animations:new Map},this.config={breathingDuration:6e3,minOpacity:.3,maxOpacity:1,pulseScale:1.05,activationKeys:["h","H"],tripleTapThreshold:500},this.tapCount=0,this.lastTapTime=0}setupTriggers(){document.addEventListener("keydown",t=>{this.config.activationKeys.includes(t.key)&&(t.preventDefault(),this.toggle())}),this.svg.addEventListener("pointerdown",t=>{this.isMobile&&this.handleTripleTap(t)})}handleTripleTap(t){const e=Date.now();e-this.lastTapTime<this.config.tripleTapThreshold?(this.tapCount++,this.tapCount>=3&&(t.preventDefault(),this.toggle(),this.tapCount=0)):this.tapCount=1,this.lastTapTime=e}toggle(){this.state.active?this.deactivate():this.activate()}activate(){this.state.active||(console.log("Activating reveal mode"),this.state.active=!0,this.svg.classList.add("reveal-mode-active"),window.nativeHotspotRenderer&&window.nativeHotspotRenderer.stateManager&&window.nativeHotspotRenderer.stateManager.getAllOverlays().forEach(t=>{t.isVisible&&this.startBreathingAnimation(t)}),this.state.timer=setTimeout(()=>{this.deactivate()},this.state.duration))}deactivate(){this.state.active&&(console.log("Deactivating reveal mode"),this.state.active=!1,this.svg.classList.remove("reveal-mode-active"),this.state.timer&&(clearTimeout(this.state.timer),this.state.timer=null),this.state.animations.forEach((t,e)=>{this.stopBreathingAnimation({hotspot:{id:e}})}))}startBreathingAnimation(t){if(this.state.animations.has(t.hotspot.id))return;const e=t.element,i=e.querySelector(".main-path");if(!i)return;const s={element:e,mainPath:i,startTime:Date.now(),animationFrame:null},a=()=>{if(!this.state.active||!this.state.animations.has(t.hotspot.id))return;const n=(Date.now()-s.startTime)%this.config.breathingDuration/this.config.breathingDuration,l=this.config.minOpacity+(this.config.maxOpacity-this.config.minOpacity)*(.5+.5*Math.sin(n*Math.PI*2));e.style.opacity=l;const h=1+(this.config.pulseScale-1)*Math.sin(n*Math.PI*2);e.style.transform=`scale(${h})`,s.animationFrame=requestAnimationFrame(a)};this.state.animations.set(t.hotspot.id,s),a()}stopBreathingAnimation(t){const e=this.state.animations.get(t.hotspot.id);e&&(e.animationFrame&&cancelAnimationFrame(e.animationFrame),e.element.style.opacity="",e.element.style.transform="",this.state.animations.delete(t.hotspot.id))}isActive(){return this.state.active}updateVisibility(t){this.state.active&&t.forEach(e=>{e.isVisible&&!this.state.animations.has(e.hotspot.id)?this.startBreathingAnimation(e):!e.isVisible&&this.state.animations.has(e.hotspot.id)&&this.stopBreathingAnimation(e)})}destroy(){this.deactivate(),this.state.timer&&clearTimeout(this.state.timer),this.state.animations.clear()}}class St{constructor(t={}){this.viewer=t.viewer,this.modeStateManager=t.modeStateManager,this.stateManager=t.stateManager,this.temporalHandler=t.temporalHandler,this.temporalHandler&&(this.temporalHandler.onPhaseChange=(e,i)=>{this.handlePhaseChange(e,i)})}handlePhaseChange(t,e){if(!(this.detectionEngine?this.detectionEngine.isHolding():this.temporalHandler.state.isHolding)){console.log("[TEMPORAL_DEBUG] Ignoring phase change - not holding");return}console.log(`[TemporalRenderer] Phase: ${t} for hotspot ${e==null?void 0:e.id}`),t!==null&&this.modeStateManager.setTemporalState(!0,t);const s=this.stateManager.getOverlay(e.id);if(!s)return;const a=s.element;if(a.style.opacity="1",a.style.visibility="visible",a.classList.remove("hotspot-temporal-touchDown","hotspot-temporal-explore","hotspot-temporal-preview","hotspot-temporal-activate"),t==="initial"||t==="initiated"){a.style.opacity="1",a.style.visibility="visible";const o=a.querySelector(".main-path");o&&(o.style.stroke="rgba(255, 255, 255, 0.5)",o.style.strokeWidth="1.5px",o.style.opacity="1",o.style.transition="all 150ms ease-out");return}if(t==="discovery"){a.classList.add("hotspot-temporal-explore");return}t==="touchDown"?a.classList.add("hotspot-temporal-touchDown"):t==="explore"?a.classList.add("hotspot-temporal-explore"):t==="preview"?(a.classList.add("hotspot-temporal-preview"),this.stateManager.setSelectedHotspot(e)):t==="activate"?a.classList.add("hotspot-temporal-activate"):t==="activation"&&(a.classList.add("hotspot-temporal-activate"),this.stateManager.setSelectedHotspot(e))}handleRelease(t,e,i){const s=this.temporalHandler.thresholds;console.log("Temporal mode release:",{duration:t,thresholds:s,hotspotId:e.id}),this.cleanupVisuals(),this.modeStateManager.setTemporalState(!1,null),this.modeStateManager.modeStates.temporal.active=!1,this.modeStateManager.modeStates.temporal.phase=null,t<s.explore?console.log("Temporal: Exploration phase completed"):t>=s.explore&&t<s.activate?console.log("Temporal: Preview/Selection phase completed"):(console.log("Temporal: Activation phase completed"),i&&i(e)),setTimeout(()=>{this.modeStateManager.setTemporalState(!1,null),console.log("[TEMPORAL_FIX] Final temporal state cleanup")},150)}cleanupVisuals(){console.log("[TemporalRenderer] Starting synchronized cleanup"),this.modeStateManager&&(this.modeStateManager.setTemporalState(!1,null),this.modeStateManager.modeStates.temporal.active=!1,this.modeStateManager.modeStates.temporal.phase=null),this.stateManager&&this.stateManager.getAllOverlays().forEach(t=>{if(t&&t.element){t.element.classList.remove("hotspot-temporal-touchDown","hotspot-temporal-explore","hotspot-temporal-preview","hotspot-temporal-activate"),t.element.style.removeProperty("opacity"),t.element.style.removeProperty("visibility"),t.element.style.removeProperty("transition");const e=t.element.querySelector(".main-path");e&&(e.style.removeProperty("stroke"),e.style.removeProperty("stroke-width"),e.style.removeProperty("opacity"),e.style.removeProperty("filter"),e.style.removeProperty("transition"))}}),this.temporalHandler&&this.temporalHandler.cleanupTemporalVisuals(),console.log("[TemporalRenderer] Synchronized cleanup completed")}isActive(){return this.modeStateManager.getCurrentMode()==="temporal"}shouldDisableStrokeAnimation(){return this.isActive()}destroy(){this.cleanupVisuals(),this.temporalHandler&&(this.temporalHandler.onPhaseChange=null)}}class Mt{constructor(t=25){this.queue=[],this.running=new Set;const e=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window;this.maxConcurrent=e?3:t,this.isProcessing=!1,this.immediateExecutionThreshold=e?3:25,e&&console.log(`[MOBILE_OPTIMIZATION] Animation queue limited to ${this.maxConcurrent} concurrent animations`)}add(t,e){const i=t.getAttribute("data-hotspot-id");if(this.running.size<this.immediateExecutionThreshold){console.log(`QUICK WIN #4: Immediate animation execution for hotspot ${i}`),this.executeImmediately(i,e);return}this.queue.push({element:t,animationCallback:e}),this.scheduleProcess()}executeImmediately(t,e){this.running.add(t);try{const i=e();i&&i.then?i.finally(()=>{this.running.delete(t)}):this.running.delete(t)}catch(i){this.running.delete(t),console.warn("QUICK WIN #4: Animation callback error:",i)}}scheduleProcess(){this.isProcessing||(this.isProcessing=!0,requestAnimationFrame(()=>{this.processImmediate(),this.isProcessing=!1}))}processImmediate(){for(;this.running.size<this.maxConcurrent&&this.queue.length>0;){const{element:t,animationCallback:e}=this.queue.shift(),i=t.getAttribute("data-hotspot-id");this.running.add(i);try{const s=e();s&&s.then?s.then(()=>{this.running.delete(i),this.scheduleProcess()}).catch(()=>{this.running.delete(i),this.scheduleProcess()}):setTimeout(()=>{this.running.delete(i),this.scheduleProcess()},0)}catch(s){this.running.delete(i),console.warn("Animation callback error:",s)}}}clear(){this.queue=[],this.running.clear()}clearFinished(){const t=[];this.running.forEach(e=>{const i=document.querySelector(`[data-hotspot-id="${e}"]`);if(!i){t.push(e);return}const s=i.getElementsByTagName("path");for(let a of s)if(a.currentAnimation&&a.currentAnimation.playState==="finished"){a.currentAnimation=null,t.push(e);break}}),t.forEach(e=>this.running.delete(e))}}class Ct{constructor(t={}){this.isMobile=t.isMobile||!1,this.isSafari=t.isSafari||!1,this.animationRegistry=new Set,this.cleanupInterval=null,this.cleanupIntervalTime=t.cleanupIntervalTime||2e3,this.maxRegistrySize=t.maxRegistrySize||1e3}startCleanupCycle(t,e){this.cleanupInterval=setInterval(()=>{t&&t.clearFinished(),e().forEach(s=>{const a=s.element.getElementsByTagName("path");for(let o of a)o.currentAnimation&&o.currentAnimation.playState==="finished"&&(o.currentAnimation=null)}),this.animationRegistry.size>this.maxRegistrySize&&this.pruneRegistry()},this.cleanupIntervalTime)}stopCleanupCycle(){this.cleanupInterval&&(clearInterval(this.cleanupInterval),this.cleanupInterval=null)}hasAnimationBeenShown(t){return this.animationRegistry.has(t)}registerAnimation(t){this.animationRegistry.add(t)}clearAnimationEntries(t){this.animationRegistry.delete(`${t}-hover`),this.animationRegistry.delete(`${t}-selected`)}clearAnimationEntry(t){this.animationRegistry.delete(t)}clearAllAnimations(){this.animationRegistry.clear()}clearRegistryExcept(t){const e=[];this.animationRegistry.forEach(i=>{t.has(i)||e.push(i)}),e.forEach(i=>this.animationRegistry.delete(i))}pruneRegistry(){const t=Array.from(this.animationRegistry),e=Math.floor(this.maxRegistrySize/2),i=t.slice(-e);this.animationRegistry.clear(),i.forEach(s=>this.animationRegistry.add(s))}getStats(){return{registrySize:this.animationRegistry.size,maxRegistrySize:this.maxRegistrySize,cleanupActive:this.cleanupInterval!==null}}destroy(){this.stopCleanupCycle(),this.clearAllAnimations()}}class Z{constructor(t,e,i=50,s=200){this.createFn=t,this.resetFn=e,this.maxSize=s,this.pool=[],this.inUse=new Set,this.stats={created:0,reused:0,released:0};for(let a=0;a<i;a++)this.pool.push(t()),this.stats.created++}acquire(){let t=this.pool.pop();return t?this.stats.reused++:(t=this.createFn(),this.stats.created++),this.inUse.add(t),t}release(t){if(!this.inUse.has(t)){console.warn("ObjectPool: Attempting to release object not from this pool");return}this.inUse.delete(t),this.resetFn(t),this.pool.length<this.maxSize?(this.pool.push(t),this.stats.released++):console.debug("ObjectPool: Max size reached, allowing GC")}releaseAll(){Array.from(this.inUse).forEach(e=>this.release(e))}clear(){this.pool=[],this.inUse.clear()}getStats(){return{...this.stats,poolSize:this.pool.length,inUseSize:this.inUse.size,totalSize:this.pool.length+this.inUse.size,reuseRate:this.stats.created>0?(this.stats.reused/(this.stats.created+this.stats.reused)*100).toFixed(1)+"%":"0%"}}}const At=()=>new Z(()=>({element:null,opacity:""}),r=>{r.element=null,r.opacity=""},100,500),Ht=()=>new Z(()=>({x:0,y:0,width:0,height:0}),r=>{r.x=0,r.y=0,r.width=0,r.height=0},50,200),Et=()=>new Z(()=>({x:0,y:0}),r=>{r.x=0,r.y=0},100,300);class Dt{constructor(t={}){this.viewer=t.viewer,this.isMobile=t.isMobile||!1,this.batchSize=t.batchSize||50,this.renderDebounceTime=t.renderDebounceTime||16,this.visibilityCheckInterval=t.visibilityCheckInterval||100,this.significantChangeThreshold=t.significantChangeThreshold||.1,this.performanceMode=!1,this.highHotspotCountThreshold=t.highHotspotCountThreshold||100,this.lastViewportBounds=null,this.lastViewportZoom=null,this.updateTimer=null,this.lastUpdateTime=0,this.pendingVisibilityUpdate=!1,this.updatesPaused=!1,this.isAnimationInProgress=!1,this.rectPool=Ht()}async loadHotspotsInBatches(t,e){const i=Math.ceil(t.length/this.batchSize);for(let s=0;s<i;s++)t.slice(s*this.batchSize,(s+1)*this.batchSize).forEach(o=>e(o)),s<i-1&&await new Promise(o=>setTimeout(o,0));console.log(`Loaded ${t.length} hotspots in ${i} batches`)}hasViewportChangedSignificantly(t,e){if(!this.lastViewportBounds||!this.lastViewportZoom)return!0;const i=Math.abs(t.x-this.lastViewportBounds.x)>this.significantChangeThreshold||Math.abs(t.y-this.lastViewportBounds.y)>this.significantChangeThreshold||Math.abs(t.width-this.lastViewportBounds.width)>this.significantChangeThreshold||Math.abs(t.height-this.lastViewportBounds.height)>this.significantChangeThreshold,s=Math.abs(e-this.lastViewportZoom)>.1;return i||s}updateViewportTracking(t,e){this.lastViewportBounds&&this.lastViewportBounds._pooled&&this.rectPool.release(this.lastViewportBounds);const i=this.rectPool.acquire();i.x=t.x,i.y=t.y,i.width=t.width,i.height=t.height,i._pooled=!0,this.lastViewportBounds=i,this.lastViewportZoom=e}setAnimationInProgress(t){this.isAnimationInProgress=t}isAnimationInProgress(){return this.isAnimationInProgress}scheduleVisibilityUpdate(t){if(this.updateTimer&&clearTimeout(this.updateTimer),this.updatesPaused||this.viewer.isAnimating()){this.pendingVisibilityUpdate=!0;return}const i=Date.now()-this.lastUpdateTime,s=this.viewer.viewport.getZoom()<5?100:50;if(i<s){this.updateTimer=setTimeout(()=>{this.scheduleVisibilityUpdate(t)},s-i);return}this.updateTimer=setTimeout(()=>{this.lastUpdateTime=Date.now(),t()},this.renderDebounceTime)}checkPerformanceMode(t,e){const i=t>this.highHotspotCountThreshold,s=t<this.highHotspotCountThreshold*.8;return i&&!this.performanceMode?(this.performanceMode=!0,e&&e.classList.add("performance-mode"),console.log("Performance mode enabled - simplifying animations")):s&&this.performanceMode&&(this.performanceMode=!1,e&&e.classList.remove("performance-mode"),console.log("Performance mode disabled")),this.performanceMode}shouldQueueAnimations(t,e){return t>2&&e>20}pauseUpdates(){this.updatesPaused=!0,console.log("🔧 RenderOptimizer: Updates paused")}resumeUpdates(){return this.updatesPaused=!1,console.log("🔧 RenderOptimizer: Updates resumed"),this.pendingVisibilityUpdate?(this.pendingVisibilityUpdate=!1,!0):!1}areUpdatesPaused(){return this.updatesPaused}setPendingUpdate(){this.pendingVisibilityUpdate=!0}getStats(){return{performanceMode:this.performanceMode,updatesPaused:this.updatesPaused,pendingUpdate:this.pendingVisibilityUpdate,lastUpdateTime:this.lastUpdateTime}}setupVisibilityTracking(t){this.isMobile;const e=()=>{this.scheduleVisibilityUpdate(t)};this.viewer.addHandler("animation",e),this.viewer.addHandler("animation-finish",()=>{this.updatesPaused||t()}),this.isMobile||this.viewer.addHandler("viewport-change",e),t()}destroy(){this.updateTimer&&(clearTimeout(this.updateTimer),this.updateTimer=null),this.lastViewportBounds&&this.lastViewportBounds._pooled&&(this.rectPool.release(this.lastViewportBounds),this.lastViewportBounds=null),this.rectPool&&this.rectPool.clear()}}class xt{constructor(t){this.viewer=t.viewer,this.spatialIndex=t.spatialIndex,this.stateManager=t.stateManager,this.eventCoordinator=t.eventCoordinator,this.renderOptimizer=t.renderOptimizer,this.memoryManager=t.memoryManager,this.safariCompat=t.safariCompat,this.modeRenderers={static:t.staticRenderer,reveal:t.revealRenderer,temporal:t.temporalRenderer},this.currentMode="normal",this.svg=null,this.defs=null,this.pathDefs=null,this.clipDefs=null,this.maskCounter=0,this.hitDetectionCanvas=null,this.useHitDetectionCanvas=!0,this.lodManager=null,this.debugMode=t.debugMode||!1,this.colorScheme=t.colorScheme,this.isMobile=t.isMobile||!1,this.isSafari=t.isSafari||!1,this.onHotspotClick=t.onHotspotClick||(()=>{}),this.onHotspotHover=t.onHotspotHover||(()=>{}),console.log("[RendererEngine] Initialized with mode renderers:",Object.keys(this.modeRenderers))}async initialize(){if(console.log("[RendererEngine] Starting initialization..."),!this.viewer.world.getItemCount())return new Promise(t=>{this.viewer.addOnceHandler("open",async()=>{await this.initialize(),t()})});await this.createSVGStructure(),this.modeRenderers.reveal&&(this.modeRenderers.reveal.svg=this.svg),this.useHitDetectionCanvas&&await this.initializeHitDetectionCanvas(),this.initializeLODManager(),console.log("[RendererEngine] Initialization complete")}async createSVGStructure(){const e=this.viewer.world.getItemAt(0).getContentSize();this.svg=this.createSVG(e),this.viewer.addOverlay({element:this.svg,location:new x.Rect(0,0,1,e.y/e.x),placement:x.Placement.TOP_LEFT}),this.createMaskDefs(),this.pathDefs=document.createElementNS("http://www.w3.org/2000/svg","defs"),this.pathDefs.id="path-definitions",this.svg.insertBefore(this.pathDefs,this.svg.firstChild),this.createClipPathDefs(),this.createSVGFilters(),console.log("[RendererEngine] SVG structure created successfully")}createSVG(t){const e=`<svg xmlns="http://www.w3.org/2000/svg" 
           width="${t.x}" height="${t.y}" 
           viewBox="0 0 ${t.x} ${t.y}"
           style="position: absolute; width: 100%; height: 100%; pointer-events: auto;">
    </svg>`;return new DOMParser().parseFromString(e,"image/svg+xml").documentElement}createMaskDefs(){this.defs||(this.defs=document.createElementNS("http://www.w3.org/2000/svg","defs"),this.svg.insertBefore(this.defs,this.svg.firstChild),this.maskCounter=0)}createClipPathDefs(){this.defs||this.createMaskDefs();const t=document.createElementNS("http://www.w3.org/2000/svg","defs");t.id="clip-path-defs",this.svg.insertBefore(t,this.svg.firstChild),this.clipDefs=t}createSVGFilters(){const t=document.createElementNS("http://www.w3.org/2000/svg","defs"),e=document.createElementNS("http://www.w3.org/2000/svg","filter");e.setAttribute("id","hotspot-glow-selected"),e.setAttribute("x","-100%"),e.setAttribute("y","-100%"),e.setAttribute("width","300%"),e.setAttribute("height","300%"),e.setAttribute("filterUnits","objectBoundingBox"),e.setAttribute("primitiveUnits","userSpaceOnUse"),e.setAttribute("color-interpolation-filters","sRGB");const i=document.createElementNS("http://www.w3.org/2000/svg","feMorphology");i.setAttribute("operator","dilate"),i.setAttribute("radius","2"),i.setAttribute("in","SourceAlpha"),i.setAttribute("result","expanded");const s=document.createElementNS("http://www.w3.org/2000/svg","feGaussianBlur");s.setAttribute("in","expanded"),s.setAttribute("stdDeviation","3"),s.setAttribute("result","blur1");const a=document.createElementNS("http://www.w3.org/2000/svg","feGaussianBlur");a.setAttribute("in","expanded"),a.setAttribute("stdDeviation","8"),a.setAttribute("result","blur2");const o=document.createElementNS("http://www.w3.org/2000/svg","feGaussianBlur");o.setAttribute("in","expanded"),o.setAttribute("stdDeviation","15"),o.setAttribute("result","blur3");const n=document.createElementNS("http://www.w3.org/2000/svg","feComponentTransfer");n.setAttribute("in","blur1"),n.setAttribute("result","glow1");const l=document.createElementNS("http://www.w3.org/2000/svg","feFuncA");l.setAttribute("type","linear"),l.setAttribute("slope","0.8"),l.setAttribute("intercept","0"),n.appendChild(l);const h=document.createElementNS("http://www.w3.org/2000/svg","feComponentTransfer");h.setAttribute("in","blur2"),h.setAttribute("result","glow2");const c=document.createElementNS("http://www.w3.org/2000/svg","feFuncA");c.setAttribute("type","linear"),c.setAttribute("slope","0.5"),c.setAttribute("intercept","0"),h.appendChild(c);const m=document.createElementNS("http://www.w3.org/2000/svg","feComponentTransfer");m.setAttribute("in","blur3"),m.setAttribute("result","glow3");const d=document.createElementNS("http://www.w3.org/2000/svg","feFuncA");d.setAttribute("type","linear"),d.setAttribute("slope","0.3"),d.setAttribute("intercept","0"),m.appendChild(d);const u=document.createElementNS("http://www.w3.org/2000/svg","feFlood");u.setAttribute("flood-color",this.colorScheme.glow||"#87CEEB"),u.setAttribute("result","innerColor");const v=document.createElementNS("http://www.w3.org/2000/svg","feFlood");v.setAttribute("flood-color",this.colorScheme.glow2||"#4682B4"),v.setAttribute("result","outerColor");const p=document.createElementNS("http://www.w3.org/2000/svg","feComposite");p.setAttribute("in","innerColor"),p.setAttribute("in2","glow1"),p.setAttribute("operator","in"),p.setAttribute("result","innerGlow");const g=document.createElementNS("http://www.w3.org/2000/svg","feComposite");g.setAttribute("in","outerColor"),g.setAttribute("in2","glow3"),g.setAttribute("operator","in"),g.setAttribute("result","outerGlow");const w=document.createElementNS("http://www.w3.org/2000/svg","feFlood");w.setAttribute("flood-color",this.colorScheme.main||"#4682B4"),w.setAttribute("result","midColor");const S=document.createElementNS("http://www.w3.org/2000/svg","feComposite");S.setAttribute("in","midColor"),S.setAttribute("in2","glow2"),S.setAttribute("operator","in"),S.setAttribute("result","midGlow");const f=document.createElementNS("http://www.w3.org/2000/svg","feMerge"),T=document.createElementNS("http://www.w3.org/2000/svg","feMergeNode");T.setAttribute("in","outerGlow");const H=document.createElementNS("http://www.w3.org/2000/svg","feMergeNode");H.setAttribute("in","midGlow");const E=document.createElementNS("http://www.w3.org/2000/svg","feMergeNode");E.setAttribute("in","innerGlow");const D=document.createElementNS("http://www.w3.org/2000/svg","feMergeNode");D.setAttribute("in","SourceGraphic"),f.appendChild(T),f.appendChild(H),f.appendChild(E),f.appendChild(D),e.appendChild(i),e.appendChild(s),e.appendChild(a),e.appendChild(o),e.appendChild(n),e.appendChild(h),e.appendChild(m),e.appendChild(u),e.appendChild(v),e.appendChild(w),e.appendChild(p),e.appendChild(g),e.appendChild(S),e.appendChild(f);const y=document.createElementNS("http://www.w3.org/2000/svg","filter");y.setAttribute("id","hotspot-glow-hover"),y.setAttribute("x","-50%"),y.setAttribute("y","-50%"),y.setAttribute("width","200%"),y.setAttribute("height","200%"),y.setAttribute("filterUnits","objectBoundingBox"),y.setAttribute("primitiveUnits","userSpaceOnUse"),y.setAttribute("color-interpolation-filters","sRGB");const b=document.createElementNS("http://www.w3.org/2000/svg","feGaussianBlur");b.setAttribute("in","SourceAlpha"),b.setAttribute("stdDeviation","6"),b.setAttribute("result","blur");const C=document.createElementNS("http://www.w3.org/2000/svg","feFlood");C.setAttribute("flood-color",this.colorScheme.glow||"#87CEEB"),C.setAttribute("result","innerColor");const P=document.createElementNS("http://www.w3.org/2000/svg","feFlood");P.setAttribute("flood-color",this.colorScheme.main||"#4682B4"),P.setAttribute("result","outerColor");const A=document.createElementNS("http://www.w3.org/2000/svg","feComposite");A.setAttribute("in","innerColor"),A.setAttribute("in2","blur"),A.setAttribute("operator","in"),A.setAttribute("result","coloredBlur");const M=document.createElementNS("http://www.w3.org/2000/svg","feMerge"),V=document.createElementNS("http://www.w3.org/2000/svg","feMergeNode");V.setAttribute("in","coloredBlur");const N=document.createElementNS("http://www.w3.org/2000/svg","feMergeNode");N.setAttribute("in","SourceGraphic"),M.appendChild(V),M.appendChild(N),y.appendChild(b),y.appendChild(C),y.appendChild(P),y.appendChild(A),y.appendChild(M),t.appendChild(e),t.appendChild(y),this.svg.insertBefore(t,this.svg.firstChild)}setupOverlay(t){}createHotspotOverlay(t,e){const i=this.createGroup(t),s=t.shape==="multipolygon",a=gt(t.coordinates,s);this.isSafari&&this.safariCompat.createGlowLayers(i,a,this.colorScheme);const o=document.createElementNS("http://www.w3.org/2000/svg","path");o.setAttribute("d",a),o.setAttribute("fill","none"),o.setAttribute("stroke","transparent"),o.setAttribute("pathLength","100"),o.style.pointerEvents="fill",o.classList.add("main-path"),i.appendChild(o);const n=o.getTotalLength();if(i.removeChild(o),o.setAttribute("data-real-length",n),this.isSafari&&this.safariCompat.setGlowLayerLengths(i,n),s&&t.coordinates.length>1){const c=`mask-${t.id}-${this.maskCounter++}`,m=document.createElementNS("http://www.w3.org/2000/svg","mask");m.setAttribute("id",c);const d=document.createElementNS("http://www.w3.org/2000/svg","rect");d.setAttribute("x","0"),d.setAttribute("y","0"),d.setAttribute("width","100%"),d.setAttribute("height","100%"),d.setAttribute("fill","white"),m.appendChild(d),t.coordinates.forEach((u,v)=>{if(v>0){const p=document.createElementNS("http://www.w3.org/2000/svg","path"),g=u.reduce((w,[S,f],T)=>w+(T===0?"M":"L")+`${Math.round(S)},${Math.round(f)}`,"")+"Z";p.setAttribute("d",g),p.setAttribute("fill","black"),p.setAttribute("stroke","black"),p.setAttribute("stroke-width","10"),m.appendChild(p)}}),this.defs.appendChild(m),o.setAttribute("mask",`url(#${c})`)}e&&e(i,t.type,"normal"),i.appendChild(o);const l=et(t.coordinates),h=ut(l);return{element:i,bounds:l,area:h}}createGroup(t){const e=document.createElementNS("http://www.w3.org/2000/svg","g");return Object.assign(e.style,{cursor:"pointer",pointerEvents:"fill",opacity:this.debugMode?"1":"0",transition:"opacity 0.2s ease-out","-webkit-tap-highlight-color":"transparent",transform:"translateZ(0)","-webkit-transform":"translateZ(0)","will-change":"transform, opacity"}),e.setAttribute("data-hotspot-id",t.id),this.colorScheme&&this.colorScheme.main==="#FFFFFF"&&(e.style.mixBlendMode="screen"),e}createHotspotWrapper(t){const e=document.createElement("div");return e.className="hotspot-wrapper",e.setAttribute("data-hotspot-wrapper-id",t),this.isSafari&&(e.style.position="absolute",e.style.transform="translateZ(0)",e.style.webkitTransform="translateZ(0)",e.style.willChange="filter",e.style.contain="layout style paint",this.isMobile?e.classList.add("hotspot-wrapper-ios"):e.classList.add("hotspot-wrapper-desktop")),e}async initializeHitDetectionCanvas(){try{console.log("[HIT_DETECTION] Initializing canvas-based hit detection..."),this.hitDetectionCanvas=new dt({viewer:this.viewer,spatialIndex:this.spatialIndex,debug:this.debugMode}),await this.hitDetectionCanvas.initialize(),window.hitDetectionCanvas=this.hitDetectionCanvas,console.log("[HIT_DETECTION] Canvas-based hit detection initialized successfully")}catch(t){console.error("[HIT_DETECTION] Failed to initialize hit detection canvas:",t),console.warn("[HIT_DETECTION] Falling back to SVG-based detection"),this.useHitDetectionCanvas=!1}}initializeLODManager(){this.lodManager=new mt({maxVisibleHotspots:{low:this.isMobile?30:50,medium:this.isMobile?75:100,high:this.isMobile?100:150,critical:this.isMobile?150:200}}),console.log("[RendererEngine] LOD Manager initialized")}findSmallestHotspotAtPoint(t){if(this.useHitDetectionCanvas&&this.hitDetectionCanvas){const i=this.findHotspotUsingCanvas(t);if(i)return console.log(`[HIT_DETECTION] Canvas hit: ${i.id}`),i}const e=[];return this.stateManager.getAllOverlays().forEach((i,s)=>{this.isPointInHotspot(t,i)&&e.push({hotspot:i.hotspot,area:i.area})}),e.length===0?null:(e.sort((i,s)=>i.area-s.area),e[0].hotspot)}findHotspotUsingCanvas(t){try{const e=this.viewer.viewport.imageToViewportCoordinates(t.x,t.y),i=this.viewer.viewport.viewportToWindowCoordinates(e),s=this.viewer.container.getBoundingClientRect(),a=i.x-s.left,o=i.y-s.top,n=this.hitDetectionCanvas.hitTest(a,o);return n&&this.stateManager.getOverlay(n.id)?n:null}catch(e){return console.warn("[HIT_DETECTION] Canvas hit test failed:",e),null}}isPointInHotspot(t,e){const i=e.hotspot,s=e.bounds;return t.x<s.minX||t.x>s.maxX||t.y<s.minY||t.y>s.maxY?!1:i.shape==="polygon"?j(t.x,t.y,i.coordinates):i.shape==="multipolygon"?i.coordinates.some(a=>j(t.x,t.y,a)):!1}render(){this.renderOptimizer.areUpdatesPaused()||this.updateVisibility()}updateVisibility(){}setRenderMode(t){this.modeRenderers[t]&&(console.log(`[RendererEngine] Switching render mode: ${this.currentMode} → ${t}`),this.currentMode=t)}applyColorScheme(t){this.colorScheme=t,Object.values(this.modeRenderers).forEach(e=>{e&&e.setColorScheme&&e.setColorScheme(t)})}pause(){this.renderOptimizer.pauseUpdates(),console.log("[RendererEngine] Rendering paused")}resume(){const t=this.renderOptimizer.resumeUpdates();console.log("[RendererEngine] Rendering resumed"),t&&setTimeout(()=>this.render(),50)}destroy(){console.log("[RendererEngine] Destroying..."),this.hitDetectionCanvas&&typeof this.hitDetectionCanvas.destroy=="function"&&this.hitDetectionCanvas.destroy(),this.svg&&this.svg.parentNode&&this.svg.parentNode.removeChild(this.svg),this.svg=null,this.defs=null,this.pathDefs=null,this.clipDefs=null,this.lodManager=null,console.log("[RendererEngine] Destroyed")}}class Pt{constructor(t){this.viewer=t.viewer,this.memoryManager=t.memoryManager,this.staticRenderer=t.staticRenderer,this.safariCompat=t.safariCompat,this.renderOptimizer=t.renderOptimizer,this.stateManager=t.stateManager,this.animationQueue=t.animationQueue,this.revealRenderer=t.revealRenderer,this.temporalRenderer=t.temporalRenderer,this.isSafari=t.isSafari||!1,this.colorScheme=t.colorScheme,this.timingEasing=t.timingEasing,this.currentEasingName=t.currentEasingName,this.getAnimationDuration=t.getAnimationDuration,this.animationsPaused=!1,this.allowHoverDuringSpotlight=!0}areAnimationsPaused(){return this.animationsPaused===!0}pauseAllAnimations(){console.log("[StyleManager] ⏸️ pauseAllAnimations called, was:",this.animationsPaused),this.animationsPaused=!0}resumeAllAnimations(){console.log("[StyleManager] 🎬 resumeAllAnimations called, was:",this.animationsPaused),this.animationsPaused,this.animationsPaused=!1,console.log("[StyleManager] 🎬 After setting to false, animationsPaused is now:",this.animationsPaused),this.animationsPaused===!0&&(console.error("[StyleManager] ❌ CRITICAL: animationsPaused is still true after setting to false!"),this.animationsPaused=!1);const t=document.querySelectorAll('g[data-animation-active="true"]');console.log(`[StyleManager] Clearing ${t.length} stuck animation-active flags`),t.forEach(e=>{const i=e.querySelector(".main-path");(!i||!i.currentAnimation)&&e.setAttribute("data-animation-active","false")}),setTimeout(()=>{this.animationsPaused===!0?console.error("[StyleManager] ❌ animationsPaused reverted to true after resumeAllAnimations!"):console.log("[StyleManager] ✅ Animations successfully resumed (confirmed after delay)")},100)}setColorScheme(t){this.colorScheme=t}applyStyle(t,e,i,s={}){var S,f,T,H,E,D;const a=t.getAttribute("data-hotspot-id");if(i!=="normal"){const y=t.getAttribute("data-current-state"),b=t.getAttribute("data-animation-completed")==="true",C=t.getAttribute("data-animation-active")==="true";console.log("[StyleManager] applyStyle called:",{hotspotId:a,state:i,currentState:y,animationCompleted:b,animationActive:C,isAutoDeselecting:(S=window.nativeHotspotRenderer)==null?void 0:S.isAutoDeselecting,caller:((f=new Error().stack.split(`
`)[2])==null?void 0:f.trim())||"unknown"})}if(window.nativeHotspotRenderer&&window.nativeHotspotRenderer.isAutoDeselecting&&i==="hover"){console.log("[StyleManager] Skipping hover animation during auto-deselect");return}if(this.revealRenderer.isActive()&&i!=="normal")return;if(i==="hover"&&t.getAttribute("data-hover-maintained")==="true"&&t.getAttribute("data-current-state")==="hover"){console.log(`[StyleManager] Skipping hover re-animation for maintained hotspot ${a}`);return}t.getElementsByTagName("path");const o=t.querySelector(".main-path"),n=`${a}-${i}`,l=this.memoryManager.hasAnimationBeenShown(n),h=this.viewer.viewport.getZoom(),c=this.areAnimationsPaused()&&i==="hover"&&this.allowHoverDuringSpotlight,m=h>8&&!c;c&&h>8&&console.log("[StyleManager] 🎯 Spotlight hover detected - bypassing static mode to allow animation at zoom:",h.toFixed(2));const d=t.getAttribute("data-current-state"),u=d!==i,v=i!=="normal"&&u;d==="selected"&&i==="hover"&&(console.log("[StyleManager] Transition selected → hover, preserving animation state"),t.setAttribute("data-was-selected","true"));const p=this.temporalRenderer.shouldDisableStrokeAnimation(),g=this.staticRenderer.isExitingStaticMode(t,h);if(this.staticRenderer.updateZoomTracking(t,h),(g||u)&&this.memoryManager.clearAnimationEntry(n),!u&&l&&!g&&!v)return;if((i==="hover"||i==="selected")&&m&&!this.temporalRenderer.isActive()){console.log("[StyleManager] Using static mode at zoom:",h.toFixed(2),"for state:",i,"(spotlight check:",c,")"),this.staticRenderer.applyStaticStyle(t,e,i,this.colorScheme);return}if(i==="hover"||i==="selected"){const y=t.getAttribute("data-animation-active"),b=t.getAttribute("data-animation-completed")==="true";if(i==="selected"&&d==="hover"){if(console.log(`[StyleManager] Transition hover → selected for ${a}, animationActive=${y}, animationCompleted=${b}`),t.setAttribute("data-current-state","selected"),o){o.currentAnimation&&(o.currentAnimation.cancel(),o.currentAnimation=null),o.style.strokeWidth="4px",o.style.strokeDasharray!=="none"&&(o.style.strokeDasharray="none",o.style.strokeDashoffset="0"),t.setAttribute("data-animation-active","false"),t.setAttribute("data-animation-completed","true");return}}else if(i==="selected"){const C=t.getAttribute("data-was-selected")==="true";console.log(`[StyleManager] Direct to selected for ${a}, wasSelected=${C}, animationCompleted=${b}`),(C||b)&&(console.log(`[StyleManager] Preventing animation for selected state (wasSelected=${C}, completed=${b})`),t.setAttribute("data-current-state","selected"),t.removeAttribute("data-was-selected"))}else if(y==="true"&&i===d)return;if(i==="hover"&&t.getAttribute("data-hover-preserved")==="true"){t.removeAttribute("data-hover-preserved");return}if(i==="hover"&&t.getAttribute("data-hover-maintained")==="true"){t.removeAttribute("data-hover-maintained");return}}if(t.setAttribute("class",`hotspot-${e} hotspot-${i}`),t.setAttribute("data-current-state",i),i==="hover"||i==="selected"){if(this.isSafari&&!p){const y=this.getAnimationDuration(a);this.safariCompat.animateSafariGlowLayers(t,i,y,this.colorScheme,this.timingEasing),t.setAttribute("data-animation-active","true"),this.memoryManager.registerAnimation(n)}else if(this.isSafari&&p){const y=t.querySelectorAll(".glow-layer-1, .glow-layer-2, .glow-layer-3"),b=t.querySelector(".main-path"),C={mainPath:"1",layer1:i==="selected"?"0.7":"0.6",layer2:i==="selected"?"0.5":"0.4",layer3:i==="selected"?"0.3":"0.2"};b&&(b.style.opacity=C.mainPath),y.forEach((P,A)=>{const M=[C.layer1,C.layer2,C.layer3][A];P&&M&&(P.style.strokeDasharray="none",P.style.strokeDashoffset="0",P.style.opacity=M)})}if(o&&!this.isSafari){o.currentAnimation&&(o.currentAnimation.cancel(),o.currentAnimation=null);const y=window.overlayManager||((T=this.viewer)==null?void 0:T.overlayManager),b=y&&y.constructor.name==="Canvas2DOverlayManager",C={animation:"none",strokeDasharray:"none",strokeDashoffset:"0",fill:"none",stroke:b?"transparent":this.colorScheme.main,strokeWidth:b?"0":i==="selected"?"4px":"3px",opacity:b?"0":"1.0"};if(i==="selected"&&console.log("[StyleManager] Initial style config for selected:",C),Object.assign(o.style,C),o.offsetWidth,b)o.style.boxShadow="none";else{const A=i==="selected"?.5:.4,M=i==="selected"?"20px":"15px";o.style.boxShadow=`
                        0 0 ${M} rgba(11, 18, 21, ${A*2}),
                        0 0 ${M*2} rgba(255, 255, 255, 0.25),
                        0 0 ${M*3} rgba(255, 255, 255, 0.2),
                        0 0 ${M*1.5} rgba(11, 18, 21, ${A*1.5}),
                        inset 0 0 3px rgba(11, 18, 21, 0.15)
                    `}if(b)o.style.filter="none";else{const M=h/10*100;M<50?o.style.filter=`
                            blur(0.1px) 
                            contrast(1.5) 
                            drop-shadow(0 0 6px rgba(11, 18, 21, 0.8))
                            drop-shadow(0 0 15px rgba(11, 18, 21, 0.6))
                            drop-shadow(0 0 25px rgba(255, 255, 255, 0.4))
                            drop-shadow(0 0 40px rgba(255, 255, 255, 0.3))
                            drop-shadow(2px 3px 8px rgba(11, 18, 21, 0.5))
                        `:M<200?o.style.filter=`
                            blur(0.05px) 
                            contrast(1.45) 
                            drop-shadow(0 0 5px rgba(11, 18, 21, 0.75))
                            drop-shadow(0 0 12px rgba(11, 18, 21, 0.55))
                            drop-shadow(0 0 20px rgba(255, 255, 255, 0.35))
                            drop-shadow(0 0 35px rgba(255, 255, 255, 0.25))
                            drop-shadow(1px 2px 6px rgba(11, 18, 21, 0.45))
                        `:o.style.filter=`
                            blur(0px) 
                            contrast(1.4) 
                            drop-shadow(0 0 4px rgba(11, 18, 21, 0.7))
                            drop-shadow(0 0 10px rgba(11, 18, 21, 0.5))
                            drop-shadow(0 0 18px rgba(255, 255, 255, 0.3))
                            drop-shadow(0 0 30px rgba(255, 255, 255, 0.2))
                            drop-shadow(1px 1px 4px rgba(11, 18, 21, 0.4))
                        `}const P=parseFloat(o.getAttribute("data-real-length"))||100;if(o.animate&&!p&&!s.skipAnimation){const A=(H=this.stateManager)==null?void 0:H.getSelectedHotspot(),M=A&&A.id===a,V=t.getAttribute("data-animation-completed")==="true";console.log(`[StyleManager] Animation check for ${a}:`,{state:i,isCurrentlySelected:M,animationCompleted:V,currentState:d,skipAnimation:s.skipAnimation,disableStrokeAnimation:p});let N=!1;if(i==="selected")console.log(`[StyleManager] Selected state - showing stroke immediately for ${a}`),console.log("[StyleManager] BLOCKING animation for selected state"),o.style.strokeDasharray="none",o.style.strokeDashoffset="0",o.style.opacity="1.0",o.style.strokeWidth="4px",t.setAttribute("data-animation-completed","true"),t.setAttribute("data-animation-active","false"),t.removeAttribute("data-was-selected"),s.skipAnimation=!0;else if(i==="hover"&&!M){console.log(`[StyleManager] Starting hover animation for ${a} (not in spotlight)`),N=!0,t.setAttribute("data-animation-active","true");const R=this.currentEasingName&&this.currentEasingName.toLowerCase().includes("organic")||this.timingEasing&&this.timingEasing.includes("organic");window.DEBUG_ANIMATIONS&&console.log("[Micro-Variations] Animation setup check:",{hotspotId:a,isOrganicAnimation:R,currentEasingName:this.currentEasingName,timingEasing:this.timingEasing,pathLength:P}),o.style.strokeDasharray="100",o.style.strokeDashoffset="100",R&&a&&window.DEBUG_ANIMATIONS&&console.log("[Random Start] Organic animation will use random starting point")}else console.log(`[StyleManager] Skipping animation for ${a} - isCurrentlySelected=${M}, state=${i}`),o.style.strokeDasharray="none",o.style.strokeDashoffset="0",o.style.opacity=b?"0":"1.0",o.style.strokeWidth=i==="selected"?"4px":"3px";let O=this.getAnimationDuration(a);if(window.DEBUG_ANIMATIONS&&console.log("[DEBUG] Checking for organic animation:",{currentEasingName:this.currentEasingName,timingEasing:this.timingEasing,hotspotId:a,hasOrganic:this.currentEasingName&&this.currentEasingName.toLowerCase().includes("organic")||this.timingEasing&&this.timingEasing.includes("organic")}),(this.currentEasingName&&this.currentEasingName.toLowerCase().includes("organic")||this.timingEasing&&this.timingEasing.includes("organic"))&&a){const R=O;O=J.applyDurationVariation(O,a);const U=((O-R)/R*100).toFixed(1);window.DEBUG_ANIMATIONS&&console.log(`[Micro-Variations] ⏱️ Duration variation for ${a}: ${R.toFixed(3)}s → ${O.toFixed(3)}s (${U}%)`)}const G=((D=(E=this.viewer)==null?void 0:E.viewport)==null?void 0:D.getZoom())||1,it=this.renderOptimizer.shouldQueueAnimations(G,this.stateManager.getVisibleCount()),q=()=>{var Q;if(i==="selected"){console.log("[StyleManager] ANIMATION FUNCTION: Blocking animation for selected state");return}console.log(`[StyleManager] ANIMATION FUNCTION: Starting animation for ${a} in ${i} state`);const R=window.overlayManager||((Q=this.viewer)==null?void 0:Q.overlayManager),U=R&&R.constructor.name==="Canvas2DOverlayManager",W=G/10*100;let L;U?L="0":W<50?L=i==="selected"?"1.0":"0.95":W<200?L=i==="selected"?"1.0":"0.98":L="1.0";let X=this.timingEasing;if((this.currentEasingName&&this.currentEasingName.toLowerCase().includes("organic")||this.timingEasing&&this.timingEasing.includes("organic"))&&a){const B=this.timingEasing;X=J.applyEasingVariation(this.timingEasing,a),window.DEBUG_ANIMATIONS&&console.log(`[Micro-Variations] 🎨 Easing variation for ${a}:`,{original:B,varied:X})}const z=100,$=Math.random()*z;window.DEBUG_ANIMATIONS&&console.log(`[Random Start] Rotating dash animation for ${a}: starting at ${$.toFixed(1)}% of path`),o.currentAnimation=o.animate([{strokeDasharray:`0 ${z}`,strokeDashoffset:`${-$}`,opacity:"0.75",offset:0},{strokeDasharray:`${z*.1} ${z*.9}`,strokeDashoffset:`${-$}`,opacity:"0.85",offset:.1},{strokeDasharray:`${z*.5} ${z*.5}`,strokeDashoffset:`${-$}`,opacity:"0.92",offset:.5},{strokeDasharray:`${z*.95} ${z*.05}`,strokeDashoffset:`${-$}`,opacity:L,offset:.95},{strokeDasharray:`${z} 0`,strokeDashoffset:`${-$}`,opacity:L,offset:1}],{duration:O*1e3,easing:X,fill:"forwards"});const K=performance.now();return window.DEBUG_ANIMATIONS&&console.log(`[Animation] Stroke animation STARTED for ${t.getAttribute("data-hotspot-id")} at ${K.toFixed(0)}ms`),o.currentAnimation.onfinish=()=>{const B=performance.now(),st=B-K;window.DEBUG_ANIMATIONS&&console.log(`[Animation] Stroke animation FINISHED for ${t.getAttribute("data-hotspot-id")} at ${B.toFixed(0)}ms (actual duration: ${st.toFixed(0)}ms, expected: ${(O*1e3).toFixed(0)}ms)`),o.currentAnimation=null,t.setAttribute("data-animation-active","false"),t.setAttribute("data-animation-completed","true"),o.style.strokeDasharray="none",o.style.strokeDashoffset="0",o.style.opacity=L},o.currentAnimation.finished};N?(console.log(`[StyleManager] Animation should be executed for ${a}`),it?(console.log(`[StyleManager] 🎭 Adding animation to queue for hotspot ${a}`),this.animationQueue.add(t,q)):(console.log(`[StyleManager] ⚡ QUICK WIN #4: Immediate animation execution for hotspot ${a}`),q()),t.setAttribute("data-animation-active","true"),this.memoryManager.registerAnimation(n)):console.log(`[StyleManager] Animation execution SKIPPED for ${a} - shouldExecuteAnimation=${N}`)}else o.style.strokeDasharray="none",o.style.strokeDashoffset="0",o.style.opacity=b?"0":"1.0",o.style.strokeWidth=b?"0":i==="selected"?"4px":"3px"}}else this.memoryManager.clearAnimationEntries(a),t.setAttribute("data-animation-active","false"),t.removeAttribute("data-animation-completed"),this.isSafari&&this.safariCompat.resetSafariGlowLayers(t),o&&(o.currentAnimation&&(o.currentAnimation.cancel(),o.currentAnimation=null),o.getAnimations().forEach(y=>y.cancel()),Object.assign(o.style,{animation:"none",strokeDasharray:"none",strokeDashoffset:"0",transition:"opacity 0.1s ease-out",fill:"none",stroke:"transparent",strokeWidth:"0",filter:"none",opacity:"0",boxShadow:"none"}));const w=i==="hover"||i==="selected"?"1":"0";i==="selected"&&console.log("[StyleManager] END OF applyStyle for selected:",{strokeWidth:o==null?void 0:o.style.strokeWidth,stroke:o==null?void 0:o.style.stroke,opacity:o==null?void 0:o.style.opacity,strokeDasharray:o==null?void 0:o.style.strokeDasharray,groupOpacity:w}),t.style.opacity=w}destroy(){this.viewer=null,this.memoryManager=null,this.staticRenderer=null,this.safariCompat=null,this.renderOptimizer=null,this.stateManager=null,this.animationQueue=null,this.revealRenderer=null,this.temporalRenderer=null}}class It{constructor(){this.activeHotspots=new Map,this.visibleIds=new Set,this.allHotspots=new Map,this.stats={totalHotspots:0,activeHotspots:0,domOperations:0,lastUpdateTime:0}}initialize(t){this.allHotspots.clear(),t.forEach((e,i)=>{this.allHotspots.set(i,{id:i,hotspot:e.hotspot,element:e.element,bounds:e.bounds}),e.element.classList.add("hotspot-hidden"),e.element.style.willChange||(e.element.style.willChange="transform, opacity, visibility")}),this.stats.totalHotspots=this.allHotspots.size}updateActiveSet(t){const e=performance.now(),i=new Set(t),s=[],a=[];this.allHotspots.forEach((o,n)=>{const l=i.has(n),h=this.activeHotspots.has(n);l&&!h?s.push(o):!l&&h&&a.push(o)}),s.length>0||a.length>0?requestAnimationFrame(()=>{this.cachedContainer||(this.cachedContainer=document.querySelector(".openseadragon-svg"));const o=this.cachedContainer;o&&(o.style.pointerEvents="none"),a.forEach(n=>{n.element&&typeof n.element.className=="string"?n.element.className=n.element.className.replace("hotspot-visible","").trim()+" hotspot-hidden":n.element&&n.element.classList&&(n.element.classList.remove("hotspot-visible"),n.element.classList.add("hotspot-hidden"))}),s.forEach(n=>{n.element&&typeof n.element.className=="string"?n.element.className=n.element.className.replace("hotspot-hidden","").trim()+" hotspot-visible":n.element&&n.element.classList&&(n.element.classList.remove("hotspot-hidden"),n.element.classList.add("hotspot-visible"))}),a.forEach(n=>this.activeHotspots.delete(n.id)),s.forEach(n=>this.activeHotspots.set(n.id,n)),o&&setTimeout(()=>{o.style.pointerEvents=""},0),this.visibleIds=i,this.stats.activeHotspots=this.activeHotspots.size,this.stats.domOperations=s.length+a.length,this.stats.lastUpdateTime=performance.now()-e,this.stats.lastUpdateTime>50&&console.log(`[ActiveHotspotManager] Slow update: ${this.stats.activeHotspots} active, ${this.stats.domOperations} DOM ops in ${this.stats.lastUpdateTime.toFixed(2)}ms`)}):this.stats.lastUpdateTime=performance.now()-e}getActiveHotspots(){return this.activeHotspots}isActive(t){return this.activeHotspots.has(t)}forceShowHotspots(t,e={}){const i=[],s=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,a=e.maxForceShow||(s?15:50);t.slice(0,a).forEach(n=>{if(!this.activeHotspots.has(n)){const l=this.allHotspots.get(n);l&&i.push(l)}}),i.length>0&&requestAnimationFrame(()=>{i.forEach(n=>{n.element.classList.remove("hotspot-hidden"),n.element.classList.add("hotspot-visible"),this.activeHotspots.set(n.id,n)})}),t.length>a&&console.log(`[ActiveHotspotManager] Limited forced hotspots from ${t.length} to ${a} for performance`)}clearActive(){requestAnimationFrame(()=>{this.activeHotspots.forEach(t=>{t.element.classList.add("hotspot-hidden"),t.element.classList.remove("hotspot-visible")}),this.activeHotspots.clear(),this.visibleIds.clear(),this.stats.activeHotspots=0})}getStats(){return{...this.stats,reductionPercent:((1-this.stats.activeHotspots/this.stats.totalHotspots)*100).toFixed(1)}}}class kt{constructor(t={}){this.spatialIndex=t.spatialIndex,this.viewer=t.viewer,this.isMobile=t.isMobile||!1,this.lastHitTestResult=null,this.pendingHitTest=null,this.hitTestInProgress=!1,this.hitTestThrottle=this.isMobile?50:16,this.lastHitTestTime=0,this.viewportCache={bounds:null,zoom:null,timestamp:0},this.visibleHotspots=new Map,this.stats={hitTests:0,avgTime:0,cacheHits:0}}updateVisibleHotspots(t){this.visibleHotspots.clear(),t.forEach((e,i)=>{this.visibleHotspots.set(i,{id:i,bounds:e.bounds,hotspot:e.hotspot})})}async performHitTest(t,e=!0){const i=performance.now();if(i-this.lastHitTestTime<this.hitTestThrottle)return this.lastHitTestResult;if(e&&this.lastHitTestResult&&this.pendingHitTest){const s=this.pendingHitTest.point;if(Math.sqrt(Math.pow(t.x-s.x,2)+Math.pow(t.y-s.y,2))<5)return this.stats.cacheHits++,this.lastHitTestResult}return this.hitTestInProgress?this.lastHitTestResult:(this.hitTestInProgress=!0,this.pendingHitTest={point:t,timestamp:i},new Promise(s=>{const a=()=>{const o=performance.now(),n=this.viewer.viewport.viewerElementToImageCoordinates(t);let l=null,h=1/0;this.visibleHotspots.forEach(m=>{if(m.bounds&&n.x>=m.bounds.minX&&n.x<=m.bounds.maxX&&n.y>=m.bounds.minY&&n.y<=m.bounds.maxY)if(this.isMobile)l=m.hotspot;else{const d=this.getDistanceToHotspot(n,m);d<h&&(h=d,l=m.hotspot)}});const c=performance.now()-o;this.stats.hitTests++,this.stats.avgTime=(this.stats.avgTime*(this.stats.hitTests-1)+c)/this.stats.hitTests,this.lastHitTestResult=l,this.lastHitTestTime=i,this.hitTestInProgress=!1,s(l)};"requestIdleCallback"in window&&!this.isMobile?requestIdleCallback(a,{timeout:50}):setTimeout(a,0)}))}getDistanceToHotspot(t,e){const i=e.bounds,s=(i.minX+i.maxX)/2,a=(i.minY+i.maxY)/2;return Math.sqrt(Math.pow(t.x-s,2)+Math.pow(t.y-a,2))}updateViewportCache(){const t=Date.now();if(t-this.viewportCache.timestamp<100)return this.viewportCache;const e=this.viewer.viewport;return this.viewportCache={bounds:e.getBounds(),zoom:e.getZoom(),timestamp:t},this.viewportCache}clearCache(){this.lastHitTestResult=null,this.pendingHitTest=null,this.viewportCache.timestamp=0}getStats(){return{...this.stats,visibleHotspots:this.visibleHotspots.size,cacheHitRate:(this.stats.cacheHits/Math.max(1,this.stats.hitTests)*100).toFixed(1)+"%"}}}class Ot{constructor(t){this.viewer=t,this.isInteracting=!1,this.lastInteractionTime=0,this.frameSkipCount=0,this.maxFrameSkip=2,this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent),this.isMobile&&(this.maxFrameSkip=3),this.setupEventListeners()}setupEventListeners(){this.viewer.addHandler("canvas-press",()=>{this.isInteracting=!0,this.lastInteractionTime=performance.now()}),this.viewer.addHandler("canvas-drag",()=>{this.isInteracting=!0,this.lastInteractionTime=performance.now()}),this.viewer.addHandler("canvas-pinch",()=>{this.isInteracting=!0,this.lastInteractionTime=performance.now()}),this.viewer.addHandler("canvas-release",()=>{this.isInteracting=!1,this.frameSkipCount=0}),this.viewer.addHandler("canvas-drag-end",()=>{this.isInteracting=!1,this.frameSkipCount=0}),setInterval(()=>{this.isInteracting&&performance.now()-this.lastInteractionTime>200&&(this.isInteracting=!1,this.frameSkipCount=0)},100)}shouldSkipFrame(){return this.isInteracting?this.frameSkipCount<this.maxFrameSkip?(this.frameSkipCount++,!0):(this.frameSkipCount=0,!1):(this.frameSkipCount=0,!1)}isUserInteracting(){return this.isInteracting}getStats(){return{isInteracting:this.isInteracting,frameSkipCount:this.frameSkipCount,maxFrameSkip:this.maxFrameSkip}}}const k=class k{constructor(t={}){this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,this.isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),this.isWebKit="WebkitAppearance"in document.documentElement.style&&!window.chrome,this.isSafariOrWebKit=this.isSafari||this.isWebKit,Object.assign(this,{viewer:t.viewer,spatialIndex:t.spatialIndex,onHotspotHover:t.onHotspotHover||(()=>{}),onHotspotClick:t.onHotspotClick||(()=>{}),visibilityCheckInterval:t.visibilityCheckInterval||100,batchSize:t.batchSize||50,renderDebounceTime:t.renderDebounceTime||16,debugMode:t.debugMode||!1}),this.updatePool=At(),this.pointPool=Et(),this.enabled=!0,this.stateManager=new ft,this.stateManager.setCallbacks({onHoverChange:(e,i)=>{this.eventCoordinator&&this.eventCoordinator.emitHotspotHover(e,i),this.onHotspotHover&&this.onHotspotHover(e)},onSelectionChange:(e,i)=>{this.eventCoordinator&&this.eventCoordinator.emitHotspotSelect(e,i)}}),this.animationQueue=new Mt(this.isMobile?k.MAX_CONCURRENT_ANIMATIONS_MOBILE:k.MAX_CONCURRENT_ANIMATIONS),this.activeHotspotManager=new It,this.asyncHitDetector=new kt({spatialIndex:this.spatialIndex,viewer:this.viewer,isMobile:this.isMobile}),this.interactionThrottler=new Ot(this.viewer),this.memoryManager=new Ct({isMobile:this.isMobile,isSafari:this.isSafari,cleanupIntervalTime:2e3}),this.renderOptimizer=new Dt({viewer:this.viewer,isMobile:this.isMobile,batchSize:this.batchSize,renderDebounceTime:this.renderDebounceTime,visibilityCheckInterval:this.visibilityCheckInterval,significantChangeThreshold:.1,highHotspotCountThreshold:k.HIGH_HOTSPOT_COUNT_THRESHOLD}),this.modeStateManager=new ct,this.modeStateManager.on("modeChange",e=>{e.from==="temporal"&&e.to!=="temporal"&&(this.temporalHandler&&this.temporalHandler.endHold(),this.temporalRenderer&&this.temporalRenderer.cleanupVisuals()),this.eventCoordinator&&this.eventCoordinator.setMode(e.to)}),window.modeStateManager=this.modeStateManager,this.temporalRenderer=new St({viewer:this.viewer,modeStateManager:this.modeStateManager,stateManager:this.stateManager,temporalHandler:null}),this.temporalDetectionEngine=new ht({audioEngine:window.audioEngine,onStateChange:(e,i,s)=>{this.modeStateManager&&this.modeStateManager.setTemporalState(e==="discovery"||e==="activation",e==="ended"?null:e)},onDiscovery:(e,i)=>{this.temporalRenderer.handlePhaseChange("discovery",e)},onActivation:(e,i)=>{this.temporalRenderer.handlePhaseChange("activation",e),setTimeout(()=>{this.onHotspotClick&&this.onHotspotClick(e)},50)}}),this.temporalHandler=new lt({audioEngine:window.audioEngine,modeStateManager:this.modeStateManager,onPhaseChange:(e,i)=>{this.temporalRenderer.handlePhaseChange(e,i)}}),this.temporalRenderer.temporalHandler=this.temporalHandler,this.temporalRenderer.detectionEngine=this.temporalDetectionEngine,this.colorPalettes={tech:{shadow:"rgba(0, 0, 0, 0.3)",glow:"#00cccc",contrast:"rgba(0, 0, 0, 1)",main:"#ffffff"},enchantedJournal:{shadow:"rgba(47, 79, 79, 0.4)",glow:"#FFD700",glow2:"#DDA0DD",contrast:"rgba(160, 82, 45, 0.8)",main:"#A0522D"},moonlitManuscript:{shadow:"rgba(47, 79, 79, 0.5)",glow:"#87CEEB",glow2:"#4682B4",contrast:"rgba(70, 130, 180, 0.9)",main:"#4682B4"},pureWhiteHigh:{shadow:"rgba(0, 0, 0, 0.4)",glow:"rgba(255, 255, 255, 0.9)",glow2:"rgba(255, 255, 255, 0.7)",contrast:"rgba(255, 255, 255, 1)",main:"#FFFFFF"},pureWhiteBalanced:{shadow:"rgba(0, 0, 0, 0.3)",glow:"rgba(255, 255, 255, 0.8)",glow2:"rgba(255, 255, 255, 0.6)",contrast:"rgba(255, 255, 255, 0.3)",main:"#FFFFFF"},blackOnBlack:{shadow:"rgba(255, 255, 255, 0.1)",glow:"rgba(0, 0, 0, 0.8)",glow2:"rgba(0, 0, 0, 0.6)",contrast:"rgba(255, 255, 255, 0.2)",main:"#000000"},pigmentLinerNeutral:{shadow:"rgba(11, 18, 21, 0.15)",glow:"rgba(11, 18, 21, 0.85)",glow2:"rgba(11, 18, 21, 0.92)",contrast:"rgba(255, 255, 255, 0.1)",main:"#0B1215"},pigmentLinerWarm:{shadow:"rgba(26, 22, 20, 0.15)",glow:"rgba(26, 22, 20, 0.85)",glow2:"rgba(26, 22, 20, 0.92)",contrast:"rgba(255, 255, 255, 0.1)",main:"#1A1614"},pigmentLinerCool:{shadow:"rgba(16, 21, 32, 0.15)",glow:"rgba(16, 21, 32, 0.85)",glow2:"rgba(16, 21, 32, 0.92)",contrast:"rgba(255, 255, 255, 0.1)",main:"#101520"}},this.currentEasingName="consciousnessOrganic",this.timingEasing="cubic-bezier(0.25, 0.40, 0.40, 0.90)",tt(()=>import("./main-B8qGZPYw.js").then(e=>e.E),__vite__mapDeps([0,1])).then(e=>{this.easingOptions=e.getAllEasingOptions(),console.log("[Easing] Loaded variations:",Object.keys(this.easingOptions)),this.easingOptions[this.currentEasingName]&&(this.timingEasing=this.easingOptions[this.currentEasingName],console.log(`[Easing] Updated to ${this.currentEasingName}: ${this.timingEasing}`),this.styleManager&&(this.styleManager.timingEasing=this.timingEasing,this.styleManager.currentEasingName=this.currentEasingName))}),this.easingOptions={organic:"cubic-bezier(0.15, 0.40, 0.32, 0.88)",organicMeditative:"cubic-bezier(0.18, 0.35, 0.35, 0.90)",organicDynamic:"cubic-bezier(0.22, 0.25, 0.38, 0.85)",consciousnessOrganic:"cubic-bezier(0.25, 0.40, 0.40, 0.90)"},window.hotspotEasing={current:this.currentEasingName,options:Object.keys(this.easingOptions),set:e=>this.easingOptions[e]?(this.currentEasingName=e,this.timingEasing=this.easingOptions[e],console.log(`[Easing] Switched to ${e}: ${this.timingEasing}`),this.styleManager&&(this.styleManager.timingEasing=this.timingEasing,this.styleManager.currentEasingName=this.currentEasingName),this.memoryManager&&this.memoryManager.clearAllAnimations(),document.querySelectorAll('[data-animation-completed="true"], [data-animation-active="true"]').forEach(s=>{s.removeAttribute("data-animation-completed"),s.removeAttribute("data-animation-active")}),window.organicVariations&&window.organicVariations.clearAllVariations(),`Now using ${e} easing`):`Unknown easing: ${e}. Options: ${Object.keys(this.easingOptions).join(", ")}`,test:()=>(console.log("Testing all easing curves. Hover over different hotspots to compare."),Object.keys(this.easingOptions))},this.currentPalette="pigmentLinerNeutral",this.colorScheme=this.colorPalettes[this.currentPalette],console.log("[PigmentLiner] Using authentic pigment liner palette:",this.currentPalette,this.colorScheme),window.hotspotColorScheme=this.colorScheme,window.setPigmentLinerVariant=e=>{const i=["pigmentLinerNeutral","pigmentLinerWarm","pigmentLinerCool"];i.includes(e)?(console.log(`[PigmentLiner] Switching to variant: ${e}`),this.currentPalette=e,this.colorScheme=this.colorPalettes[e],window.hotspotColorScheme=this.colorScheme,this.styleManager&&this.styleManager.setColorScheme(this.colorScheme),this.refreshAllHotspotStyles()):console.log("[PigmentLiner] Available variants:",i)},console.log("[PigmentLiner] Available variants: neutral (default), warm, cool"),console.log('[PigmentLiner] Switch with: window.setPigmentLinerVariant("pigmentLinerWarm") or "pigmentLinerCool"'),this.staticRenderer&&(this.staticRenderer.colorScheme=this.colorScheme),this.safariCompat=new pt({colorScheme:this.colorScheme,isMobile:this.isMobile}),this.staticRenderer=new bt({viewer:this.viewer,colorScheme:this.colorScheme,isSafari:this.isSafari,isMobile:this.isMobile}),window.hotspotPalettes=this.colorPalettes,window.setHotspotPalette=e=>{this.colorPalettes[e]&&(this.currentPalette=e,this.colorScheme=this.colorPalettes[e],window.hotspotColorScheme=this.colorScheme,this.styleManager.setColorScheme(this.colorScheme),this.refreshAllHotspotStyles())},this.eventCoordinator=new wt({isMobile:this.isMobile,isSafari:this.isSafari,clickTimeThreshold:this.clickTimeThreshold,clickDistThreshold:this.clickDistThreshold,mobileDragThreshold:this.mobileDragThreshold}),window.eventCoordinator=this.eventCoordinator,this.eventCoordinator.setMode(this.modeStateManager.getCurrentMode()),this.isDragging=!1,this.dragStartTime=0,this.dragStartPoint=null,this.mobileDragThreshold=this.isMobile?15:8,this.clickTimeThreshold=300,this.clickDistThreshold=this.isMobile?12:8,this.activePointers=new Map,this.primaryPointerId=null,this.lastPointerDownTime=0,this.lastPointerDownPoint=null,this.isPinching=!1,this.revealRenderer=new Tt({viewer:this.viewer,svg:null,isMobile:this.isMobile,debugMode:this.debugMode}),this.engine=new xt({viewer:this.viewer,spatialIndex:this.spatialIndex,stateManager:this.stateManager,eventCoordinator:this.eventCoordinator,renderOptimizer:this.renderOptimizer,memoryManager:this.memoryManager,safariCompat:this.safariCompat,staticRenderer:this.staticRenderer,revealRenderer:this.revealRenderer,temporalRenderer:this.temporalRenderer,debugMode:this.debugMode,colorScheme:this.colorScheme,isMobile:this.isMobile,isSafari:this.isSafari,onHotspotClick:this.onHotspotClick,onHotspotHover:this.onHotspotHover}),this.styleManager=new Pt({viewer:this.viewer,memoryManager:this.memoryManager,staticRenderer:this.staticRenderer,safariCompat:this.safariCompat,renderOptimizer:this.renderOptimizer,stateManager:this.stateManager,animationQueue:this.animationQueue,revealRenderer:this.revealRenderer,temporalRenderer:this.temporalRenderer,isSafari:this.isSafari,colorScheme:this.colorScheme,timingEasing:this.timingEasing,currentEasingName:this.currentEasingName,getAnimationDuration:e=>this.getAnimationDuration(e)}),this.initStyles(),t.skipInit||this.init()}initStyles(){}async init(){if(!this.viewer.world.getItemCount()){this.viewer.addOnceHandler("open",()=>this.init());return}if(!document.getElementById("hotspot-animations-fix")){const i=document.createElement("style");i.id="hotspot-animations-fix",i.textContent=`
        .hotspot-hover path,
        .hotspot-selected path {
            animation-play-state: running !important;
        }
    `,document.head.appendChild(i)}if(!document.getElementById("reveal-mode-styles")){const i=document.createElement("style");i.id="reveal-mode-styles",i.textContent=`
        .reveal-mode-active .hotspot-wrapper {
            will-change: opacity, transform;
        }
        
        @keyframes revealPulse {
            0% { opacity: 0.3; transform: scale(1); }
            50% { opacity: 1; transform: scale(1.05); }
            100% { opacity: 0.3; transform: scale(1); }
        }
    `,document.head.appendChild(i)}if(!document.getElementById("pigment-liner-animations")){const i=document.createElement("style");i.id="pigment-liner-animations",i.textContent=`
        @keyframes organicBreathing {
            0% { 
                opacity: 0.98;
            }
            50% { 
                opacity: 1.0;
            }
            100% { 
                opacity: 0.98;
            }
        }
        
        /* Enhanced organic scintillation for selected states */
        @keyframes inkScintillation {
            0%, 90%, 100% { 
                opacity: 1.0;
            }
            95% { 
                opacity: 1.0;
            }
        }
    `,document.head.appendChild(i)}await this.engine.initialize(),this.svg=this.engine.svg,this.defs=this.engine.defs,this.pathDefs=this.engine.pathDefs,this.maskCounter=this.engine.maskCounter;const t=localStorage.getItem("revealStyle")||"invert";this.svg.classList.add(`reveal-style-${t}`);const e=document.createElement("style");e.textContent=`
    @keyframes revealWidth {
        from { width: 0%; }
        to { width: 110%; }
    }
`,document.head.appendChild(e),await this.renderOptimizer.loadHotspotsInBatches(this.spatialIndex.getAllHotspots(),i=>this.createHotspotOverlay(i)),this.activeHotspotManager.initialize(this.stateManager.getAllOverlays()),this.engine.useHitDetectionCanvas&&await this.engine.initializeHitDetectionCanvas(),this.stateManager.getAllOverlays().forEach(i=>{this.safariCompat.optimizePathsForGPU(i)}),this.safariCompat.optimizeLayers(this.stateManager.getAllOverlays()),this.memoryManager.startCleanupCycle(this.animationQueue,()=>this.stateManager.getAllOverlays()),this.setupMouseTracking(),this.setupDragDetection(),this.setupRevealMode(),this.viewer.addHandler("zoom",()=>{this.currentZoom=this.viewer.viewport.getZoom();const i=this.renderOptimizer.lastViewportZoom||0;(i<=8&&this.currentZoom>8||i>8&&this.currentZoom<=8)&&(this.clearAnimationRegistryForZoomChange(),i>8&&this.currentZoom<=8&&this.stateManager.getAllOverlays().forEach(n=>{this.resetStaticTransitions(n.element)}));const s=this.stateManager.getHoveredHotspot(),a=this.stateManager.getSelectedHotspot(),o=i<=8&&this.currentZoom>8||i>8&&this.currentZoom<=8;if(s){const n=this.stateManager.getOverlay(s.id);if(n){const l=n.element.getAttribute("data-current-state"),h=n.element.getAttribute("data-animation-completed")==="true";(l!=="hover"||o)&&(console.log("[Zoom] Reapplying hover style:",{hotspotId:s.id,currentState:l,animationCompleted:h,crossingThreshold:o,previousZoom:i.toFixed(2),currentZoom:this.currentZoom.toFixed(2)}),this.applyStyle(n.element,s.type,"hover",{skipAnimation:h}))}}if(a&&a!==s){const n=this.stateManager.getOverlay(a.id);if(n){const l=n.element.getAttribute("data-current-state"),h=n.element.getAttribute("data-animation-completed")==="true";(l!=="selected"||o)&&(console.log("[Zoom] Reapplying selected style:",{hotspotId:a.id,currentState:l,animationCompleted:h,crossingThreshold:o,previousZoom:i.toFixed(2),currentZoom:this.currentZoom.toFixed(2)}),this.applyStyle(n.element,a.type,"selected",{skipAnimation:!0}))}}}),this.startVisibilityTracking(),window.nativeHotspotRenderer=this,window.temporalDetectionEngine=this.temporalDetectionEngine}getResetAnimationState(){return()=>this.resetAnimationState()}createHotspotOverlay(t){const e=this.engine.createHotspotOverlay(t,(i,s,a)=>this.applyStyle(i,s,a));this.svg.appendChild(e.element),this.stateManager.addOverlay(t.id,{element:e.element,hotspot:t,bounds:e.bounds,area:e.area,isVisible:!1})}setupDragDetection(){this.viewer.addHandler("canvas-drag",()=>{this.eventCoordinator.isDragging=!0}),this.viewer.addHandler("canvas-drag-end",()=>{this.eventCoordinator.resetDragState()}),this.viewer.addHandler("pan",()=>{this.eventCoordinator.isDragging=!0})}setupMouseTracking(){this.eventCoordinator.initialize(this.viewer.container,this.svg),this.eventCoordinator.on(this.eventCoordinator.eventTypes.MOUSE_MOVE,t=>{if(window.lastKnownMouseX=t.x,window.lastKnownMouseY=t.y,this.eventCoordinator.isCurrentlyDragging()||this.temporalRenderer.isActive()){this.svg.style.cursor="default";return}const e=this.viewer.element.getBoundingClientRect(),i=new x.Point(t.x-e.left,t.y-e.top),s=this.viewer.viewport.pointFromPixel(i),a=this.viewer.viewport.viewportToImageCoordinates(s),o=this.engine.findSmallestHotspotAtPoint(a),n=this.stateManager.getHoveredHotspot();if(!this.isAutoDeselecting){if(t.forceHover&&o&&o===n){const l=this.stateManager.getOverlay(o.id);if(l){const h=l.element;h.setAttribute("data-animation-active","false"),h.removeAttribute("data-animation-completed"),h.removeAttribute("data-hover-preserved");const c=`${o.id}-hover`;this.memoryManager.clearAnimationEntry(c),h.getAttribute("data-current-state")!=="hover"&&this.applyStyle(l.element,o.type,"hover")}}else if(o!==n){if(n){const l=this.stateManager.getOverlay(n.id);l&&(l.element.removeAttribute("data-hover-preserved"),l.element.removeAttribute("data-hover-maintained"),this.applyStyle(l.element,n.type,n===this.stateManager.getSelectedHotspot()?"selected":"normal"))}if(this.stateManager.setHoveredHotspot(o),o){const l=this.stateManager.getOverlay(o.id);l&&this.applyStyle(l.element,o.type,"hover")}}this.svg.style.cursor=o?"pointer":"default"}}),this.safariCompat.setupIOSClickHandler(this.svg,t=>{const e=this.viewer.element.getBoundingClientRect(),i=new x.Point(t.clientX-e.left,t.clientY-e.top),s=this.viewer.viewport.pointFromPixel(i),a=this.viewer.viewport.viewportToImageCoordinates(s);return this.engine.findSmallestHotspotAtPoint(a)},t=>this.activateHotspot(t)),this.setupPointerEvents()}setupPointerEvents(){this.eventCoordinator.on(this.eventCoordinator.eventTypes.CLICK,t=>{if(console.log("EventCoordinator CLICK detected",t),t.event.target.closest(".openseadragon-controls"))return;const e=this.viewer.element.getBoundingClientRect(),i=new x.Point(t.x-e.left,t.y-e.top),s=this.viewer.viewport.pointFromPixel(i),a=this.viewer.viewport.viewportToImageCoordinates(s),o=this.engine.findSmallestHotspotAtPoint(a);if(o){if(t.event.stopPropagation(),t.event.preventDefault(),this.modeStateManager.getCurrentMode()==="temporal"){t.event.stopPropagation(),t.event.preventDefault();return}this.activateHotspot(o)}else this.stateManager.getSelectedHotspot()&&(this.deselectHotspot(),this.onHotspotClick&&this.onHotspotClick(null))}),this.eventCoordinator.on(this.eventCoordinator.eventTypes.POINTER_DOWN,t=>{this.modeStateManager.getCurrentMode()==="temporal"&&(t.event.target.closest(".openseadragon-controls")||(this.pendingTemporalHold={data:t,timestamp:Date.now()},this.temporalHoldTimer&&clearTimeout(this.temporalHoldTimer),this.temporalHoldTimer=setTimeout(()=>{if(this.pendingTemporalHold){const e=this.viewer.element.getBoundingClientRect(),i=new x.Point(t.x-e.left,t.y-e.top),s=this.viewer.viewport.pointFromPixel(i),a=this.viewer.viewport.viewportToImageCoordinates(s),o=this.engine.findSmallestHotspotAtPoint(a);o&&this.temporalDetectionEngine.startHold(o,t.x,t.y)}},200)))}),this.eventCoordinator.on(this.eventCoordinator.eventTypes.POINTER_UP,t=>{if(this.pendingTemporalHold=null,this.temporalHoldTimer&&(clearTimeout(this.temporalHoldTimer),this.temporalHoldTimer=null),this.modeStateManager.getCurrentMode()!=="temporal")return;const e=this.temporalDetectionEngine.endHold("released");e&&e.hotspot&&e.duration>0?this.temporalRenderer.cleanupVisuals():this.temporalRenderer.cleanupVisuals()}),this.eventCoordinator.on(this.eventCoordinator.eventTypes.POINTER_MOVE,t=>{this.modeStateManager.getCurrentMode()==="temporal"&&this.temporalDetectionEngine.isHolding()&&this.temporalDetectionEngine.updatePosition(t.x,t.y)}),this.eventCoordinator.on(this.eventCoordinator.eventTypes.DRAG_START,()=>{this.pendingTemporalHold=null,this.temporalHoldTimer&&(clearTimeout(this.temporalHoldTimer),this.temporalHoldTimer=null),this.modeStateManager.getCurrentMode()==="temporal"&&(this.temporalDetectionEngine.endHold("navigation_detected"),this.temporalRenderer.cleanupVisuals());const t=this.stateManager.getHoveredHotspot();if(t){const e=this.stateManager.getOverlay(t.id);e&&this.applyStyle(e.element,t.type,t===this.stateManager.getSelectedHotspot()?"selected":"normal"),this.stateManager.setHoveredHotspot(null)}})}handleClick(t){var l;if(console.log("handleClick called",{isDragging:this.isDragging,isPinching:this.isPinching,activePointers:this.activePointers.size,targetTag:t.target.tagName,targetClass:((l=t.target.className)==null?void 0:l.baseVal)||t.target.className,timestamp:Date.now()}),t.target.closest(".openseadragon-controls"))return;const e=this.stateManager.getHoveredHotspot();if(this.isMobile&&e){console.log("Using cached hover hotspot for mobile click"),t.stopPropagation(),t.preventDefault(),this.activateHotspot(e);return}const i=this.viewer.element.getBoundingClientRect(),s=new x.Point(t.clientX-i.left,t.clientY-i.top),a=this.viewer.viewport.pointFromPixel(s),o=this.viewer.viewport.viewportToImageCoordinates(a),n=this.engine.findSmallestHotspotAtPoint(o);n?(t.stopPropagation(),t.preventDefault(),this.activateHotspot(n)):this.stateManager.getSelectedHotspot()&&(this.deselectHotspot(),this.onHotspotClick&&this.onHotspotClick(null))}activateHotspot(t){console.log("🎯 iOS DEBUG: activateHotspot called:",{hotspotId:t.id,timestamp:Date.now(),isSafari:this.isSafari,isMobile:this.isMobile}),this.eventCoordinator&&(console.log("🔄 Resetting drag state when activating hotspot"),this.eventCoordinator.resetDragState(),this.eventCoordinator.forceReactivateMouseTracking());const e=this.stateManager.getSelectedHotspot();if(e&&e.id!==t.id){console.log("🔄 Clearing previous selection:",e.id);const s=this.stateManager.getOverlay(e.id);s&&this.applyStyle(s.element,e.type,"normal")}this.stateManager.setSelectedHotspot(t),this.engine.lodManager&&this.engine.lodManager.recordInteraction(t.id);const i=this.stateManager.getOverlay(t.id);i&&(console.log("🎯 Applying selected state BEFORE onHotspotClick for:",t.id),this.applyStyle(i.element,t.type,"selected")),this.onHotspotClick(t),this.stateManager.getAllOverlays().forEach((s,a)=>{var n;if(a===t.id)return;const o=a===((n=this.stateManager.getHoveredHotspot())==null?void 0:n.id)?"hover":"normal";if(a===t.id){const l=this.viewer.viewport.getZoom();console.log("🎯 iOS DEBUG: Applying selected style to:",a),console.log("🎯 Current zoom level:",l.toFixed(2)),console.log("🎯 Is in static mode (>8.0)?",l>8);const h=s.element.getAttribute("data-current-state"),c=s.element.getAttribute("data-animation-completed")==="true";console.log("🎯 Transition to selected:",{currentState:h,animationCompleted:c})}this.applyStyle(s.element,s.hotspot.type,o)})}deselectHotspot(){console.log("Deselecting hotspot"),this.stateManager.setSelectedHotspot(null),this.stateManager.getAllOverlays().forEach((t,e)=>{var s;if(e===this.recentlyAutoDeselected&&t.element.getAttribute("data-maintain-visual")==="true"){console.log("🎨 Skipping state change for auto-deselected hotspot:",e);return}const i=e===((s=this.stateManager.getHoveredHotspot())==null?void 0:s.id)?"hover":"normal";this.applyStyle(t.element,t.hotspot.type,i)})}resetAnimationState(){console.log("🔄 Resetting animation state after cinematic zoom"),this.memoryManager.clearAllAnimations(),this.stateManager.getAllOverlays().forEach(t=>{var i;const e=t.element;if(e){e.setAttribute("data-animation-active","false"),e.removeAttribute("data-current-state"),e.removeAttribute("data-animation-completed");const s=e.getElementsByTagName("path");for(let a of s)a.currentAnimation&&(a.currentAnimation.cancel(),a.currentAnimation=null),(i=a.getAnimations)==null||i.call(a).forEach(o=>o.cancel())}}),this.stateManager.getHoveredHotspot(),this.stateManager.setHoveredHotspot(null),setTimeout(()=>{if(window.lastKnownMouseX!==void 0&&window.lastKnownMouseY!==void 0){console.log("🔄 Re-evaluating mouse position after zoom");const t=this.viewer.element.getBoundingClientRect(),e=new x.Point(window.lastKnownMouseX-t.left,window.lastKnownMouseY-t.top),i=this.viewer.viewport.pointFromPixel(e),s=this.viewer.viewport.viewportToImageCoordinates(i),a=this.engine.findSmallestHotspotAtPoint(s);if(a){console.log("🎯 Found hotspot under cursor:",a.id),this.stateManager.setHoveredHotspot(a);const o=this.stateManager.getOverlay(a.id);o&&(console.log("🎨 Applying hover animation to:",a.id),this.applyStyle(o.element,a.type,"hover"))}}},100),console.log("✅ Animation state reset complete")}instantDeselect(){console.log("Instant deselecting hotspot"),this.isAutoDeselecting=!0;const t=this.stateManager.getSelectedHotspot(),e=this.stateManager.getHoveredHotspot();if(t){const i=this.stateManager.getOverlay(t.id);if(i&&i.element){console.log("🔄 Transitioning from selected to hover during auto-deselect"),this.applyStyle(i.element,t.type,"hover",{skipAnimation:!0}),i.element.setAttribute("data-animation-active","false"),i.element.removeAttribute("data-animation-completed"),i.element.removeAttribute("data-current-state");const s=t.id;this.memoryManager.clearAnimationEntry(`${s}-selected`),this.applyStyle(i.element,t.type,"normal")}t&&e&&e.id===t.id&&(console.log("✅ Preserving hoveredHotspot after auto-deselect (was selected):",e.id),this.recentlyAutoDeselected=e.id,console.log("🔒 Marked hotspot as recently auto-deselected:",this.recentlyAutoDeselected),i.element.setAttribute("data-maintain-visual","true"))}this.stateManager.setSelectedHotspot(null),this.eventCoordinator&&(console.log("🔄 Resetting drag state after auto-deselect"),this.eventCoordinator.resetDragState()),setTimeout(()=>{var i;if(console.log("🔓 Auto-deselect timeout reached, clearing flags"),console.log("  - recentlyAutoDeselected:",this.recentlyAutoDeselected),console.log("  - currentHovered:",(i=this.stateManager.getHoveredHotspot())==null?void 0:i.id),this.isAutoDeselecting=!1,this.recentlyAutoDeselected){const s=this.stateManager.getOverlay(this.recentlyAutoDeselected);s&&s.element&&s.element.removeAttribute("data-maintain-visual")}console.log("Auto-deselect completed, animations can resume")},500)}applyStyle(t,e,i,s={}){const a=t.getAttribute("data-hotspot-id");if(console.log(`🎨 applyStyle called for hotspot ${a}: state=${i}, recentlyAutoDeselected=${this.recentlyAutoDeselected}`),i==="hover"&&a!==this.recentlyAutoDeselected&&this.recentlyAutoDeselected&&(console.log("🔄 Hovering different hotspot, clearing recentlyAutoDeselected:",this.recentlyAutoDeselected),this.recentlyAutoDeselected=null,this._recentlyAutoDeselectedClearTimeout&&(clearTimeout(this._recentlyAutoDeselectedClearTimeout),this._recentlyAutoDeselectedClearTimeout=null)),i==="hover"&&a===this.recentlyAutoDeselected&&!this.isAutoDeselecting){console.log("⛔ Blocking hover animation on recently auto-deselected hotspot:",a),this._recentlyAutoDeselectedClearTimeout||(this._recentlyAutoDeselectedClearTimeout=setTimeout(()=>{console.log("🗳️ Clearing recentlyAutoDeselected flag for:",this.recentlyAutoDeselected),this.recentlyAutoDeselected=null,this._recentlyAutoDeselectedClearTimeout=null},1e3));return}this.styleManager.applyStyle(t,e,i,s)}maintainHoverVisual(t){var i;const e=this.stateManager.getOverlay(t.id);if(e&&e.element){const s=e.element,a=s.querySelector(".main-path");if(console.log("🎨 Maintaining hover visual for hotspot:",t.id),a){a.style.strokeDasharray="none",a.style.strokeDashoffset="0",a.style.opacity="1.0",a.style.stroke=this.styleManager.colorScheme.main,a.style.strokeWidth="3px";const o=window.overlayManager||((i=this.viewer)==null?void 0:i.overlayManager),n=o&&o.constructor.name==="Canvas2DOverlayManager";n||(a.style.filter=`
                        blur(0.05px) 
                        contrast(1.45) 
                        drop-shadow(0 0 5px rgba(11, 18, 21, 0.75))
                        drop-shadow(0 0 12px rgba(11, 18, 21, 0.55))
                        drop-shadow(0 0 20px rgba(255, 255, 255, 0.35))
                        drop-shadow(0 0 35px rgba(255, 255, 255, 0.25))
                        drop-shadow(1px 2px 6px rgba(11, 18, 21, 0.45))
                    `),s.setAttribute("data-current-state","hover"),s.setAttribute("data-hover-maintained","true"),s.setAttribute("data-hover-preserved","true"),s.setAttribute("data-animation-completed","true"),s.setAttribute("data-animation-active","false"),s.style.opacity="1",n||(a.style.boxShadow=`
                        0 0 15px rgba(11, 18, 21, 0.8),
                        0 0 30px rgba(255, 255, 255, 0.25),
                        0 0 45px rgba(255, 255, 255, 0.2),
                        0 0 22.5px rgba(11, 18, 21, 0.6),
                        inset 0 0 3px rgba(11, 18, 21, 0.15)
                    `),this.memoryManager.registerAnimation(`${t.id}-hover`),console.log("🏁 Added hover maintenance flags and registered animation as completed for hotspot:",t.id)}}}resetStaticTransitions(t){this.staticRenderer.resetTransitions(t)}clearAnimationRegistryForZoomChange(){const t=new Set,e=this.stateManager.getHoveredHotspot(),i=this.stateManager.getSelectedHotspot();e&&t.add(`${e.id}-hover`),i&&t.add(`${i.id}-selected`),this.memoryManager.clearRegistryExcept(t)}hideOverlay(){this.svg&&(this.svg.style.opacity="0",this.svg.style.visibility="hidden",this.svg.style.pointerEvents="none")}showOverlay(){this.svg&&(this.svg.style.opacity="1",this.svg.style.visibility="visible",this.svg.style.pointerEvents="auto")}pauseUpdates(){console.log("🔧 NativeHotspotRenderer: pauseUpdates called"),this.renderOptimizer.pauseUpdates()}resumeUpdates(){console.log("🔧 NativeHotspotRenderer: resumeUpdates called");const t=this.renderOptimizer.resumeUpdates();console.log("🔧 NativeHotspotRenderer: Updates resumed after cinematic zoom"),t&&setTimeout(()=>this.updateVisibility(),50),setTimeout(()=>{if(this.viewer&&this.viewer.tracking&&(console.log("🔄 Re-enabling viewer mouse tracking"),this.viewer.setMouseNavEnabled(!0),this.eventCoordinator&&this.eventCoordinator.forceReactivateMouseTracking&&this.eventCoordinator.forceReactivateMouseTracking(),this.svg&&window.lastKnownMouseX!==void 0)){const e=new MouseEvent("mousemove",{view:window,bubbles:!0,cancelable:!0,clientX:window.lastKnownMouseX,clientY:window.lastKnownMouseY});console.log("🔄 Dispatching synthetic mousemove to SVG"),this.svg.dispatchEvent(e)}},200)}refreshAllHotspotStyles(){console.log("Refreshing all hotspot styles with palette:",this.currentPalette),this.stateManager.getAllOverlays().forEach((t,e)=>{if(t.isVisible){const i=this.stateManager.getSelectedHotspot(),s=this.stateManager.getHoveredHotspot(),a=e===(i==null?void 0:i.id)?"selected":e===(s==null?void 0:s.id)?"hover":"normal";a!=="normal"&&(this.applyStyle(t.element,t.hotspot.type,"normal"),setTimeout(()=>{this.applyStyle(t.element,t.hotspot.type,a)},50))}}),this.updateFilterColors(),this.updateWrapperStyles()}updateWrapperStyles(){this.isSafari}updateFilterColors(){const t=this.svg.querySelector('#hotspot-glow-selected feFlood[result="innerColor"]'),e=this.svg.querySelector('#hotspot-glow-selected feFlood[result="outerColor"]'),i=this.svg.querySelector('#hotspot-glow-selected feFlood[result="midColor"]'),s=this.svg.querySelector('#hotspot-glow-hover feFlood[result="innerColor"]'),a=this.svg.querySelector('#hotspot-glow-hover feFlood[result="outerColor"]');t&&t.setAttribute("flood-color",this.colorScheme.glow||"#87CEEB"),e&&e.setAttribute("flood-color",this.colorScheme.glow2||"#4682B4"),i&&i.setAttribute("flood-color",this.colorScheme.main||"#4682B4"),s&&s.setAttribute("flood-color",this.colorScheme.glow||"#87CEEB"),a&&a.setAttribute("flood-color",this.colorScheme.main||"#4682B4")}getHotspotBounds(t){const e=this.stateManager.getOverlay(t.id);return e&&e.bounds?e.bounds:et(t.coordinates)}getAnimationDuration(t){var g,w,S;console.log("[NativeHotspotRenderer] getAnimationDuration called for:",t);const e=this.currentEasingName&&this.currentEasingName.toLowerCase().includes("organic");let i=1;if(t&&this.stateManager){const f=this.stateManager.getOverlay(t);if(f&&f.element){const T=f.element.querySelector("path");if(T)try{const H=T.getTotalLength();i=Math.min(Math.max(H/400,.8),1.5)}catch{}}}const o=(((w=(g=this.viewer)==null?void 0:g.viewport)==null?void 0:w.getZoom())||1)/10*100;let n,l;o<50?(n=e?.8:.6,l="exploration"):o<200?(n=e?1.2:.9,l="navigation"):(n=e?1.8:1.2,l="detail");const h=(f,T,H)=>{const E=Math.max(0,Math.min(1,(H-f)/(T-f)));return E*E*(3-2*E)};let c=1;o>=40&&o<=60?c=1+h(40,60,o)*.2:o>=180&&o<=220&&(c=1+h(180,220,o)*.2);const m=((S=this.stateManager)==null?void 0:S.getVisibleCount())||0,d=Math.max(.7,1-m/200*.3),u=window.animationSpeedMultiplier||1,v=n*c*i*d*u,p=Math.max(.4,Math.min(2.5,v));return console.log(`[Animation Duration] Mode: ${l}, Zoom: ${o.toFixed(0)}%, Duration: ${(p*1e3).toFixed(0)}ms, Base: ${(n*1e3).toFixed(0)}ms`),p}calculateGlowIntensity(){return 1}optimizeForSafari(){/^((?!chrome|android).)*safari/i.test(navigator.userAgent)&&this.stateManager.getAllOverlays().forEach(e=>{const i=e.element.getElementsByTagName("path");for(let s of i)s.style.transform="translateZ(0)",s.style.webkitBackfaceVisibility="hidden"})}startVisibilityTracking(){this.renderOptimizer.setupVisibilityTracking(()=>this.updateVisibility())}updateVisibility(){if(this.renderOptimizer.areUpdatesPaused()){this.renderOptimizer.setPendingUpdate();return}if(this.interactionThrottler&&this.interactionThrottler.shouldSkipFrame()){this.renderOptimizer.setPendingUpdate();return}const t=this.viewer.viewport.getZoom(),e=this.viewer.viewport.zoomSpring.target.value;if(Math.abs(t-e)>.001){this.renderOptimizer.setPendingUpdate();return}if(this.viewer.isAnimating()){this.renderOptimizer.setPendingUpdate();return}const s=this.viewer.viewport.getBounds();if(!this.renderOptimizer.hasViewportChangedSignificantly(s,t))return;this.renderOptimizer.updateViewportTracking(s,t),this.engine.eventCoordinator&&this.engine.eventCoordinator.updateHoverDelayForZoom(t);const a=this.viewer.viewport,o=a.getZoom();if(this.engine.lodManager&&window.performanceMonitor){const f=window.performanceMonitor.currentFPS,T=window.performanceMonitor.memoryUsage||0;this.engine.lodManager.updatePerformanceMode(f,T)}if(o<1.5){const f=this.stateManager.getSelectedHotspot(),T=this.stateManager.getHoveredHotspot(),H=f==null?void 0:f.id,E=T==null?void 0:T.id,D=[];H&&D.push(H),E&&E!==H&&D.push(E),this.activeHotspotManager.updateActiveSet(D);const y=D.map(b=>({id:b,isVisible:!0}));y.length>0&&this.stateManager.batchUpdateVisibility(y);return}const n=Array.from(this.stateManager.getAllOverlays().values()).map(f=>({...f.hotspot,overlay:f})),l=this.stateManager.getSelectedHotspot(),h=!!l;let c;if(h){console.log("🎯 Spotlight mode active - overriding LOD to show nearby hotspots");const f=this.stateManager.getOverlay(l.id);if(f){const T=f.bounds,H=(T.left+T.right)/2,E=(T.top+T.bottom)/2,D=n.filter(y=>{if(y.id===l.id)return!0;const b=y.overlay.bounds,C=(b.left+b.right)/2,P=(b.top+b.bottom)/2,A=C-H,M=P-E,V=Math.sqrt(A*A+M*M),O=2e3/Math.max(1,o);return V<O}).slice(0,50);c=D,console.log(`🎯 Spotlight mode: showing ${D.length} nearby hotspots for hover interaction`)}else c=this.engine.lodManager.selectVisibleHotspots(n,a,o,l,this.stateManager.getHoveredHotspot())}else c=this.engine.lodManager.selectVisibleHotspots(n,a,o,this.stateManager.getSelectedHotspot(),this.stateManager.getHoveredHotspot());console.log(`[NativeHotspotRenderer] Active: ${c.length} | Total: ${n.length} | Zoom: ${o.toFixed(2)} | Spotlight: ${h}`);const m=c.map(f=>f.id);this.activeHotspotManager.updateActiveSet(m);const d=this.activeHotspotManager.getActiveHotspots(),u=[];d.forEach((f,T)=>{u.push({id:T,isVisible:!0})}),u.length>0&&this.stateManager.batchUpdateVisibility(u),this.asyncHitDetector.updateVisibleHotspots(d),this.revealRenderer.isActive()&&this.revealRenderer.updateVisibility(d);const v=d.size;Math.abs(t-this.renderOptimizer.lastViewportZoom)>.5&&requestAnimationFrame(()=>{this.viewer.world.getItemCount()>0&&this.viewer.updateOverlay(this.svg)});const p=this.stateManager.getSelectedHotspot(),g=this.stateManager.getHoveredHotspot(),w=[];p!=null&&p.id&&w.push(p.id),g!=null&&g.id&&g.id!==(p==null?void 0:p.id)&&w.push(g.id),w.length>0&&this.activeHotspotManager.forceShowHotspots(w);const S=Date.now();if(!this._lastStatsLog||S-this._lastStatsLog>2e3){this._lastStatsLog=S;const f=this.activeHotspotManager.getStats();console.log(`[LOD+Active] Active: ${f.activeHotspots} | Total: ${f.totalHotspots} | Zoom: ${t.toFixed(2)} | Visible: ${v}`)}v>k.HIGH_HOTSPOT_COUNT_THRESHOLD&&this.animationQueue&&(this.animationQueue.clearFinished(),this.animationQueue.running.size>k.MAX_CONCURRENT_ANIMATIONS&&(this.animationQueue.clear(),console.log("Animation queue cleared due to high hotspot count"))),this.checkPerformanceMode()}forceIOSRedraw(){this.isMobile&&this.viewer&&this.svg&&(this.svg.style.display="none",this.svg.offsetHeight,this.svg.style.display="",this.viewer.updateOverlay(this.svg))}checkPerformanceMode(){const t=this.stateManager.getVisibleCount();this.renderOptimizer.checkPerformanceMode(t,this.svg)}updateVisibilityLazy(){if(this.renderOptimizer.areUpdatesPaused())return;const t=this.viewer.viewport;if(t.getZoom(),this.viewer.isAnimating()){setTimeout(()=>this.updateVisibilityLazy(),100);return}const e=t.getBounds(),i=t.viewportToImageCoordinates(e.getTopLeft()),s=t.viewportToImageCoordinates(e.getBottomRight()),a={minX:i.x,minY:i.y,maxX:s.x,maxY:s.y},o=(a.maxX-a.minX)*.2;Object.keys(a).forEach(u=>{a[u]+=u.startsWith("min")?-o:o});const n=Array.from(this.stateManager.getAllOverlays().entries());let l=0,h=0;const c=30,m=[],d=()=>{const u=performance.now();for(h=0;l<n.length&&h<c&&performance.now()-u<8;){const[v,p]=n[l],g=this.boundsIntersect(p.bounds,a);g!==p.isVisible&&(p.element.style.opacity=g?"1":"0",m.push({id:v,isVisible:g})),l++,h++}l<n.length?"requestIdleCallback"in window?requestIdleCallback(()=>d(),{timeout:50}):requestAnimationFrame(d):(m.length>0&&this.stateManager.batchUpdateVisibility(m),this.viewer.world.getItemCount()>0&&requestAnimationFrame(()=>{this.viewer.updateOverlay(this.svg)}))};"requestIdleCallback"in window?requestIdleCallback(()=>d(),{timeout:100}):setTimeout(()=>requestAnimationFrame(d),50)}boundsIntersect(t,e){return!(t.maxX<e.minX||t.minX>e.maxX||t.maxY<e.minY||t.minY>e.maxY)}setupRevealMode(){this.revealRenderer.setupTriggers()}toggleRevealMode(){this.revealRenderer.isActive()?this.revealRenderer.deactivate():this.revealRenderer.activate()}enable(){this.enabled=!0,console.log("NativeHotspotRenderer enabled"),this.stateManager.getAllOverlays().forEach(t=>{t.element&&(t.element.style.display="")}),this.renderOptimizer&&this.renderOptimizer.resumeUpdates()}disable(){this.enabled=!1,console.log("NativeHotspotRenderer disabled"),this.stateManager.getAllOverlays().forEach(t=>{t.element&&(t.element.style.display="none")}),this.renderOptimizer&&this.renderOptimizer.pauseUpdates()}setVisualSelectedState(t){if(!t)return;console.log("🎨 Setting visual selected state for:",t.id);const e=this.stateManager.getOverlay(t.id);if(!e||!e.element){console.warn("🚨 Cannot set visual state - overlay not found for:",t.id);return}this.styleManager&&this.styleManager.applyStyle(e.element,t.type,"selected"),this.stateManager.setSelectedHotspot(t),console.log("✅ Visual selected state applied for:",t.id)}destroy(){console.log("Destroying NativeHotspotRenderer"),this.animationQueue&&this.animationQueue.clear(),this.revealRenderer&&this.revealRenderer.destroy(),this.temporalRenderer&&this.temporalRenderer.destroy(),this.memoryManager&&this.memoryManager.destroy(),this.renderOptimizer&&this.renderOptimizer.destroy(),this.stateManager.getAllOverlays().forEach(t=>{const e=t.element.getElementsByTagName("path");for(let i of e)i.currentAnimation&&i.currentAnimation.cancel(),i.getAnimations().forEach(s=>s.cancel())}),this.hitDetectionCanvas&&typeof this.hitDetectionCanvas.destroy=="function"&&this.hitDetectionCanvas.destroy(),this.engine&&this.engine.destroy(),this.styleManager&&this.styleManager.destroy(),this.modeStateManager&&this.modeStateManager.destroy(),this.eventCoordinator&&this.eventCoordinator.destroy(),this.stateManager&&this.stateManager.clear(),window.debugNativeRenderer&&delete window.debugNativeRenderer,window.nativeHotspotRenderer===this&&delete window.nativeHotspotRenderer}};_(k,"MAX_CONCURRENT_ANIMATIONS",15),_(k,"MAX_CONCURRENT_ANIMATIONS_MOBILE",8),_(k,"HIGH_HOTSPOT_COUNT_THRESHOLD",100);let Y=k;function Xt(r,t,e,i,s){r.drawer&&r.drawer.getType&&r.drawer.getType()!=="webgl"&&r.addHandler("tile-drawing",n=>{r.drawer&&r.drawer.context&&(r.drawer.context.imageSmoothingEnabled=!0);const l=r.viewport.getZoom();n.tile;const h=n.tile.size;if(n.tile.level,l<1&&h*l<16){n.preventDefaultAction=!0;return}}),r.addHandler("open",()=>{if(F()){let h=0;const c=33;r.addHandler("update-viewport",m=>{const d=performance.now();if(r.isAnimating()&&d-h<c){m.preventDefaultAction=!0;return}h=d})}r.viewport.minZoomLevel=.8,r.viewport.minZoomImageRatio=.5,F()&&(r.viewport.minZoomLevel=.5,r.viewport.minZoomImageRatio=.3),zt(r),Nt(r,I),r.viewport.minZoomLevel=.8,r.viewport.minZoomImageRatio=.5,console.log("Viewer ready - initializing systems"),console.log("Using drawer:",r.drawer.getType?r.drawer.getType():"canvas");const l=r.world.getItemAt(0).getBounds();r.viewport.fitBounds(l,!0),r.viewport.applyConstraints(!0),F()&&setTimeout(()=>{const h=r.world.getItemAt(0);if(h){const c=h.getBounds();r.viewport.fitBoundsWithConstraints(c,!1)}},100),setTimeout(()=>Lt(r,t,e,i),100)}),r.addHandler("zoom",()=>{e.tileCleanupManager&&e.tileCleanupManager.setPressure("normal"),t.isZoomingToHotspot()&&r.imageLoader&&r.imageLoader.clear()}),r.addHandler("pan",()=>{e.tileCleanupManager&&e.tileCleanupManager.setPressure("normal")}),r.addHandler("tile-loaded",n=>{var l;if(n.tile&&e.tileOptimizer){const h=n.tile.loadTime||((l=n.tiledImage)==null?void 0:l.lastResetTime)||100;e.tileOptimizer.trackLoadTime(h);const c=`${n.tile.level||0}_${n.tile.x||0}_${n.tile.y||0}`;e.tileOptimizer.loadingTiles.delete(c)}}),r.addHandler("animation",()=>{if(e.performanceMonitor){const n=e.performanceMonitor.getMetrics();if(n.averageFPS<I.debug.warnThreshold.fps){const l=rt(n.averageFPS,n.memoryUsage);if(e.tileCleanupManager){const h={emergency:"critical",critical:"critical",reduced:"high","memory-limited":"high",normal:"normal"};e.tileCleanupManager.setPressure(h[l]||"normal")}}}}),r.addHandler("animation-finish",()=>{console.log("animation-finish fired",{isZoomingToHotspot:t.isZoomingToHotspot(),isExpandingToFullView:t.isExpandingToFullView()}),t.isZoomingToHotspot()&&(console.log("animation-finish: Setting isZoomingToHotspot to false"),t.setIsZoomingToHotspot(!1),e.renderer&&(console.log("animation-finish: Calling resumeUpdates"),e.renderer.resumeUpdates(),e.renderer.updateVisibility()),e.renderOptimizer&&e.renderOptimizer.endCinematicZoom(),setTimeout(()=>{window.lastKnownMouseX!==void 0&&e.renderer&&(console.log("Forcing hover re-evaluation after zoom animation"),e.renderer.eventCoordinator&&e.renderer.eventCoordinator.forceReactivateMouseTracking&&e.renderer.eventCoordinator.forceReactivateMouseTracking())},300))}),r.addHandler("animation-start",n=>{t.isZoomingToHotspot()&&e.tileCleanupManager&&e.tileCleanupManager.pauseCleanup(3e3)});const a=()=>{let n;n&&clearTimeout(n),n=setTimeout(()=>{Rt(()=>{const{viewportManager:l,spatialIndex:h,audioEngine:c}=e;if(!l||!h||!c)return;const m=l.getCurrentViewport(),d=h.queryViewport(m.bounds,m.zoom);c.preloadHotspots(d)})},I.viewport.updateDebounce)};r.addHandler("viewport-change",a);let o=!1;r.addHandler("animation-start",()=>{F()&&(t.isZoomingToHotspot()||t.isExpandingToFullView())&&(o=!0,r.removeHandler("viewport-change",a))}),r.addHandler("animation-finish",()=>{o&&(o=!1,r.addHandler("viewport-change",a),setTimeout(a,100))}),r.addHandler("canvas-click",n=>{!n.preventDefaultAction&&e.renderer&&n.quick&&(e.renderer&&e.renderer.stateManager&&(e.renderer.stateManager.getAllOverlays().forEach(l=>{if(l.element){l.element.removeAttribute("data-hover-preserved"),l.element.removeAttribute("data-hover-maintained");const h=l.element.getAttribute("data-current-state"),c=e.renderer.stateManager.getHoveredHotspot(),m=l.element.getAttribute("data-hotspot-id");h==="hover"&&(!c||c.id!==m)&&e.renderer.styleManager&&e.renderer.styleManager.applyStyle(l.element,"standard","normal")}}),e.renderer.isAutoDeselecting&&(e.renderer.isAutoDeselecting=!1),e.renderer.recentlyAutoDeselected&&(console.log("🗑️ Clearing recentlyAutoDeselected on canvas click:",e.renderer.recentlyAutoDeselected),e.renderer.recentlyAutoDeselected=null,e.renderer._recentlyAutoDeselectedClearTimeout&&(clearTimeout(e.renderer._recentlyAutoDeselectedClearTimeout),e.renderer._recentlyAutoDeselectedClearTimeout=null))),e.renderer.selectedHotspot&&(e.renderer.selectedHotspot=null,t.setSelectedHotspot(null),e.overlayManager&&e.overlayManager.selectHotspot(null)))}),F()&&r.addHandler("canvas-click",n=>{const l=r.container.clientWidth,h=r.container.clientHeight,c=100,m=n.position.x<c&&n.position.y<c,d=n.position.x>l-c&&n.position.y<c,u=n.position.x<c&&n.position.y>h-c,v=n.position.x>l-c&&n.position.y>h-c;if(m||d||u||v){const p=t.tapCount()+1;if(t.setTapCount(p),t.tapTimeout()&&clearTimeout(t.tapTimeout()),p>=3){const w=t.debugLevel()===0?1:0;t.setDebugLevel(w),localStorage.setItem("debugLevel",w.toString()),e.performanceMonitor&&e.performanceMonitor.disableDebugOverlay(),console.log(`Debug mode: ${w===1?"ON":"OFF"}`),t.setTapCount(0)}else t.setTapTimeout(setTimeout(()=>{t.setTapCount(0)},1e3))}})}function Yt(r,t){const e={centerX:r.viewport.centerSpringX.springStiffness,centerY:r.viewport.centerSpringY.springStiffness,zoom:r.viewport.zoomSpring.springStiffness};r.addHandler("zoom-click",i=>{if(i.quick)return;const s=r.viewport.getZoom(),a=i.zoom,o=Math.abs(Math.log2(a)-Math.log2(s)),n=Math.min(.8,.3+o*.15);r.viewport.zoomSpring.animationTime=n;const l=Math.max(4,8-o);r.viewport.zoomSpring.springStiffness=l,setTimeout(()=>{r.viewport.zoomSpring.animationTime=t.viewer.animationTime,r.viewport.zoomSpring.springStiffness=e.zoom},n*1e3+100)})}function Zt(r,t,e){const i={"+":()=>r.viewport.zoomBy(I.viewer.zoomPerScroll),"=":()=>r.viewport.zoomBy(I.viewer.zoomPerScroll),"-":()=>r.viewport.zoomBy(1/I.viewer.zoomPerScroll),_:()=>r.viewport.zoomBy(1/I.viewer.zoomPerScroll),0:()=>{var a;(a=window.animations)!=null&&a.expandToFullView&&window.animations.expandToFullView()},f:()=>r.viewport.fitBounds(r.world.getHomeBounds()),F:()=>r.viewport.fitBounds(r.world.getHomeBounds()),c:()=>{if(F())return;const o=t.debugLevel()===0?1:0;t.setDebugLevel(o),localStorage.setItem("debugLevel",o.toString()),e.performanceMonitor&&e.performanceMonitor.disableDebugOverlay(),e.renderer&&e.renderer.setDebugMode(o===1),console.log(`Debug mode: ${o===1?"ON":"OFF"}`)},h:()=>{e.renderer&&e.renderer.toggleRevealMode()},H:()=>{e.renderer&&e.renderer.toggleRevealMode()},e:()=>{e.echoController&&(e.echoController.config.enabled?(e.echoController.disable(),console.log("Temporal Echo mode: OFF")):(e.echoController.enable(),console.log("Temporal Echo mode: ON")))},E:()=>{e.echoController&&(e.echoController.config.enabled?(e.echoController.disable(),console.log("Temporal Echo mode: OFF")):(e.echoController.enable(),console.log("Temporal Echo mode: ON")))}},s=a=>{const o=document.activeElement;if(o&&(o.tagName==="INPUT"||o.tagName==="TEXTAREA"||o.contentEditable==="true"))return;const n=i[a.key];n&&r&&(a.preventDefault(),n(),r.viewport.applyConstraints())};return window.addEventListener("keydown",s),s}function Gt(r,t,e){const i=new ResizeObserver(s=>{if(!(!(t!=null&&t.viewport)||!t.isOpen()))for(let a of s){const{width:o,height:n}=a.contentRect;o>0&&n>0&&requestAnimationFrame(()=>{try{t&&t.viewport&&t.isOpen()&&(t.viewport.resize(),t.viewport.applyConstraints(),t.forceRedraw())}catch(l){l.message&&!l.message.includes("undefined")&&console.warn("Resize error:",l)}})}});i.observe(r),e.setComponents(s=>({...s,resizeObserver:i}))}function Rt(r){"requestIdleCallback"in window?requestIdleCallback(r,{timeout:200}):setTimeout(r,50)}function zt(r){r.addHandler("zoom",t=>{r.drawer&&r.drawer.context&&(r.drawer.context.imageSmoothingEnabled=!0,r.drawer.imageSmoothingEnabled=!0)}),r.addHandler("pan",()=>{r.drawer&&r.drawer.context&&(r.drawer.context.imageSmoothingEnabled=!0,r.drawer.imageSmoothingEnabled=!0)}),r.addHandler("viewport-change",()=>{r.drawer&&r.drawer.context&&(r.drawer.context.imageSmoothingEnabled=!0,r.drawer.imageSmoothingEnabled=!0)})}function Nt(r,t,e){let i=null,s=null,a="idle",o=0,n=null;r.addHandler("zoom",l=>{const h=r.viewport.getZoom();o++,n&&clearTimeout(n),(!s||Math.abs(h-s)>.01)&&(a==="idle"?(a="accelerating",i=performance.now(),r.viewport.centerSpringX.animationTime=.4,r.viewport.centerSpringY.animationTime=.4,r.viewport.zoomSpring.animationTime=.4,r.imageLoader&&o>3&&(r.imageLoader.jobLimit=Math.max(2,r.imageLoader.jobLimit-1))):a==="accelerating"&&o>5&&(a="cruising",r.viewport.zoomSpring.animationTime=.2,r.imageLoader&&(r.imageLoader.jobLimit=2)),s=h),n=setTimeout(()=>{a!=="idle"&&(a="decelerating",r.viewport.centerSpringX.animationTime=.3,r.viewport.centerSpringY.animationTime=.3,r.viewport.zoomSpring.animationTime=.3,r.imageLoader&&(r.imageLoader.jobLimit=3),setTimeout(()=>{a="idle",o=0,r.imageLoader&&(r.imageLoader.jobLimit=t.viewer.imageLoaderLimit),r.forceRedraw(),i&&(performance.now()-i,i=null)},200))},100)})}async function Lt(r,t,e,i,s){if(!r)return;const a={viewer:r,OpenSeadragon:x,spatialIndex:e.spatialIndex,onHotspotHover:t.setHoveredHotspot,onHotspotClick:i,visibilityCheckInterval:I.hotspots.visibilityCheckInterval,batchSize:I.hotspots.batchSize,renderDebounceTime:I.hotspots.renderDebounceTime,maxVisibleHotspots:I.hotspots.maxVisibleHotspots,minZoomForHotspots:I.hotspots.minZoomForHotspots,debugMode:t.debugLevel()===2},o=new Y(a);if(window.nativeHotspotRenderer=o,t.setModeStateManager(o.modeStateManager),o.eventCoordinator){const h=(await tt(async()=>{const{default:m}=await import("./TemporalEchoController-CmlR_R3t.js");return{default:m}},__vite__mapDeps([2,0,1]))).default,c=new h({viewer:r,eventCoordinator:o.eventCoordinator,hotspotRenderer:o,stateManager:o.stateManager,enabled:!0});e.echoController=c,o.echoController=c,window.temporalEchoController=c,console.log("[ViewerEventHandlers] Temporal Echo Controller initialized")}const n=nt.createWithOverride(r);n.initialize(),window.overlayManager=n;const l=o.onHotspotClick;o.onHotspotClick=h=>{l(h),n&&n.selectHotspot&&n.selectHotspot(h)},window.nativeHotspotRenderer=o,t.setComponents(h=>({...h,renderer:o,overlayManager:n})),console.log("Using NativeHotspotRenderer for hotspot rendering"),console.log(`Using ${n.constructor.name} for overlay effects`)}export{Yt as setupAdaptiveSprings,Zt as setupKeyboardHandler,Gt as setupResizeObserver,Xt as setupViewerEventHandlers};
