import{O as k,i as Y,f as V,c as W}from"./main-BPt6hLMl.js";const M={IDLE:"idle",UNDETERMINED:"undetermined",DOUBLE_TAP_WAIT:"double_tap_wait",HOLD:"hold",PAN:"pan",PINCH:"pinch",CANCELLED:"cancelled"};class j{constructor(e={}){this.config={quickTapThreshold:e.quickTapThreshold||50,doubleTapThreshold:e.doubleTapThreshold||300,holdThreshold:e.holdThreshold||400,movementThreshold:e.movementThreshold||10,mobileMovementThreshold:e.mobileMovementThreshold||20,velocityThreshold:e.velocityThreshold||5,debug:e.debug||!1},this.state=M.IDLE,this.previousState=null,this.gestureData=null,this.activePointers=new Map,this.gestureStartTime=0,this.lastTapTime=0,this.lastTapPosition=null,this.quickTapTimer=null,this.holdTimer=null,this.doubleTapTimer=null,this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,this.callbacks={onQuickTap:e.onQuickTap||(()=>{}),onDoubleTap:e.onDoubleTap||(()=>{}),onHoldStart:e.onHoldStart||(()=>{}),onHoldEnd:e.onHoldEnd||(()=>{}),onPanStart:e.onPanStart||(()=>{}),onPinchStart:e.onPinchStart||(()=>{}),onGestureCancel:e.onGestureCancel||(()=>{})},this.startGesture=this.startGesture.bind(this),this.updateGesture=this.updateGesture.bind(this),this.endGesture=this.endGesture.bind(this),this.cancelGesture=this.cancelGesture.bind(this)}startGesture(e){const t=e.pointerId||0,o=performance.now();if(this.activePointers.set(t,{startX:e.x,startY:e.y,currentX:e.x,currentY:e.y,startTime:o}),this.activePointers.size>=2){this.transitionTo(M.PINCH),this.callbacks.onPinchStart(this.getGestureData());return}this.gestureStartTime=o,this.gestureData={startX:e.x,startY:e.y,currentX:e.x,currentY:e.y,pointerId:t},this.transitionTo(M.UNDETERMINED),this.startDetectionTimers(),this.log("Gesture started",this.gestureData)}updateGesture(e){const t=e.pointerId||0,o=this.activePointers.get(t);if(!o||this.state===M.IDLE)return;o.currentX=e.x,o.currentY=e.y,this.gestureData&&this.gestureData.pointerId===t&&(this.gestureData.currentX=e.x,this.gestureData.currentY=e.y);const i=e.x-o.startX,s=e.y-o.startY,n=Math.sqrt(i*i+s*s),a=this.isMobile?this.config.mobileMovementThreshold:this.config.movementThreshold;n>a&&this.state===M.UNDETERMINED&&(this.clearDetectionTimers(),this.transitionTo(M.PAN),this.callbacks.onPanStart(this.getGestureData()))}endGesture(e){const t=e.pointerId||0,o=this.activePointers.get(t);if(!o)return;const i=performance.now()-o.startTime;switch(performance.now(),this.activePointers.delete(t),this.state){case M.UNDETERMINED:i<this.config.quickTapThreshold?this.handleQuickTap(e,i):this.cancelGesture("duration_exceeded");break;case M.HOLD:this.callbacks.onHoldEnd({...this.getGestureData(),duration:i}),this.transitionTo(M.IDLE);break;case M.DOUBLE_TAP_WAIT:break;default:this.transitionTo(M.IDLE)}this.activePointers.size===0&&this.state!==M.DOUBLE_TAP_WAIT&&this.resetGesture()}cancelGesture(e="unknown"){this.clearDetectionTimers();const t=this.state;this.transitionTo(M.CANCELLED),this.callbacks.onGestureCancel({previousState:t,reason:e,gestureData:this.getGestureData()}),this.reset()}handleQuickTap(e,t){const o=performance.now(),i={x:e.x,y:e.y};if(this.lastTapTime&&this.lastTapPosition){const s=o-this.lastTapTime,n=this.calculateDistance(i.x,i.y,this.lastTapPosition.x,this.lastTapPosition.y);if(s<this.config.doubleTapThreshold&&n<50){this.clearDetectionTimers(),this.callbacks.onDoubleTap({...this.getGestureData(),duration:t,timeBetweenTaps:s}),this.lastTapTime=0,this.lastTapPosition=null,this.transitionTo(M.IDLE);return}}this.callbacks.onQuickTap({...this.getGestureData(),duration:t,originalEvent:e.originalEvent}),this.lastTapTime=o,this.lastTapPosition=i,this.transitionTo(M.DOUBLE_TAP_WAIT),this.doubleTapTimer=setTimeout(()=>{this.transitionTo(M.IDLE),this.resetGesture()},this.config.doubleTapThreshold)}startDetectionTimers(){this.quickTapTimer=setTimeout(()=>{this.state===M.UNDETERMINED&&this.startHoldDetection()},this.config.quickTapThreshold)}startHoldDetection(){const e=this.config.holdThreshold-this.config.quickTapThreshold;this.holdTimer=setTimeout(()=>{this.state===M.UNDETERMINED&&(this.transitionTo(M.HOLD),this.callbacks.onHoldStart(this.getGestureData()))},e)}clearDetectionTimers(){this.quickTapTimer&&(clearTimeout(this.quickTapTimer),this.quickTapTimer=null),this.holdTimer&&(clearTimeout(this.holdTimer),this.holdTimer=null),this.doubleTapTimer&&(clearTimeout(this.doubleTapTimer),this.doubleTapTimer=null)}transitionTo(e){this.state!==e&&(this.previousState=this.state,this.state=e,this.log(`State transition: ${this.previousState} â†’ ${e}`))}getGestureData(){return this.gestureData?{...this.gestureData,state:this.state,duration:performance.now()-this.gestureStartTime,distance:this.calculateDistance(this.gestureData.currentX,this.gestureData.currentY,this.gestureData.startX,this.gestureData.startY)}:null}calculateDistance(e,t,o,i){const s=o-e,n=i-t;return Math.sqrt(s*s+n*n)}reset(){this.state=M.IDLE,this.previousState=null,this.gestureData=null,this.gestureStartTime=0,this.clearDetectionTimers()}resetGesture(){this.gestureData=null,this.gestureStartTime=0,this.activePointers.clear(),this.clearDetectionTimers()}log(...e){this.config.debug&&console.log("[GestureStateMachine]",...e)}getState(){return this.state}isActive(){return this.state!==M.IDLE&&this.state!==M.CANCELLED}destroy(){this.clearDetectionTimers(),this.activePointers.clear(),this.reset()}}class U{constructor(e={}){this.eventCoordinator=e.eventCoordinator,this.viewer=e.viewer,this.onQuickTap=e.onQuickTap||(()=>{}),this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,this.gestureStateMachine=new j({quickTapThreshold:200,movementThreshold:this.isMobile?20:10,debug:window.DEBUG_GESTURES||!1,onQuickTap:this.handleQuickTap.bind(this),onDoubleTap:this.handleDoubleTap.bind(this),onHoldStart:this.handleHoldStart.bind(this),onHoldEnd:this.handleHoldEnd.bind(this),onPanStart:this.handlePanStart.bind(this),onPinchStart:this.handlePinchStart.bind(this)}),this.isIntercepting=!1,this.originalHandlers={},this.lastEventTime=0,this.eventThrottle=16,this.enabled=!1,this.setupEventListeners()}setupEventListeners(){if(!this.eventCoordinator){console.warn("[TemporalEchoAdapter] No EventCoordinator provided");return}this.eventCoordinator.on(this.eventCoordinator.eventTypes.POINTER_DOWN,this.handlePointerDown.bind(this)),this.eventCoordinator.on(this.eventCoordinator.eventTypes.POINTER_MOVE,this.handlePointerMove.bind(this)),this.eventCoordinator.on(this.eventCoordinator.eventTypes.POINTER_UP,this.handlePointerUp.bind(this))}handlePointerDown(e){if(e.activePointers>1){this.gestureStateMachine.cancelGesture("multi_touch");return}this.enabled&&(this.gestureStateMachine.startGesture({x:e.x,y:e.y,pointerId:e.pointerId,originalEvent:e.event}),this.isIntercepting=!1)}handlePointerMove(e){const t=performance.now();t-this.lastEventTime<this.eventThrottle||(this.lastEventTime=t,this.gestureStateMachine.updateGesture({x:e.x,y:e.y,pointerId:e.pointerId}),this.gestureStateMachine.getState()==="pan"&&(this.isIntercepting=!1))}handlePointerUp(e){this.gestureStateMachine.endGesture({x:e.x,y:e.y,pointerId:e.pointerId,originalEvent:e.event}),this.isIntercepting=!1}handleQuickTap(e){const t=this.viewer.viewport.pointFromPixel(new k.Point(e.startX,e.startY)),o=this.onQuickTap({x:e.startX,y:e.startY,viewportX:t.x,viewportY:t.y,duration:e.duration});return o?(this.isIntercepting=!0,e.originalEvent&&(e.originalEvent.preventDefault(),e.originalEvent.stopPropagation()),this.handledQuickTap=!0,this.lastQuickTapTime=performance.now(),setTimeout(()=>{this.isIntercepting=!1,this.handledQuickTap=!1},100)):(this.isIntercepting=!1,this.gestureStateMachine.cancelGesture("not_handled")),o}handleDoubleTap(e){}handleHoldStart(e){this.isIntercepting=!1,this.gestureStateMachine.cancelGesture("hold_detected")}handleHoldEnd(e){}handlePanStart(e){this.isIntercepting=!1}handlePinchStart(e){this.isIntercepting=!1}shouldIntercept(){return this.isIntercepting&&this.gestureStateMachine.isActive()&&this.gestureStateMachine.getState()!=="pan"&&this.gestureStateMachine.getState()!=="pinch"}enable(){this.enabled=!0}disable(){this.enabled=!1,this.gestureStateMachine.cancelGesture("disabled"),this.isIntercepting=!1}updateConfig(e){e.quickTapThreshold!==void 0&&(this.gestureStateMachine.config.quickTapThreshold=e.quickTapThreshold),e.movementThreshold!==void 0&&(this.gestureStateMachine.config.movementThreshold=e.movementThreshold)}destroy(){this.gestureStateMachine.destroy(),this.isIntercepting=!1}}class Z{constructor(e={}){this.targetFPS=e.targetFPS||30,this.sampleRate=e.sampleRate||100,this.warningThreshold=e.warningThreshold||25,this.criticalThreshold=e.criticalThreshold||20,this.metrics={fps:{current:60,average:60,min:60,max:60,samples:[]},frameTime:{current:16.67,average:16.67,max:16.67,samples:[]},memory:{used:0,limit:0,percentage:0},ripples:{active:0,created:0,completed:0}},this.performanceState="optimal",this.lastFrameTime=performance.now(),this.frameCount=0,this.isMonitoring=!1,this.onPerformanceChange=e.onPerformanceChange||(()=>{}),this.onCriticalPerformance=e.onCriticalPerformance||(()=>{}),console.log("[PerformanceMonitor] Initialized with target FPS:",this.targetFPS)}start(){this.isMonitoring||(this.isMonitoring=!0,this.lastFrameTime=performance.now(),this.rafLoop(),this.startSampling(),console.log("[PerformanceMonitor] Started monitoring"))}rafLoop(){if(!this.isMonitoring)return;const e=performance.now(),t=e-this.lastFrameTime;this.metrics.frameTime.current=t,this.frameCount++,t>0&&(this.metrics.fps.current=Math.round(1e3/t)),this.lastFrameTime=e,requestAnimationFrame(()=>this.rafLoop())}startSampling(){this.samplingInterval=setInterval(()=>{this.sampleMetrics(),this.evaluatePerformance()},this.sampleRate)}sampleMetrics(){performance.now();const e=this.metrics.fps.samples;e.push(this.metrics.fps.current),e.length>10&&e.shift(),this.metrics.fps.average=Math.round(e.reduce((o,i)=>o+i,0)/e.length),this.metrics.fps.min=Math.min(...e),this.metrics.fps.max=Math.max(...e);const t=this.metrics.frameTime.samples;t.push(this.metrics.frameTime.current),t.length>10&&t.shift(),this.metrics.frameTime.average=t.reduce((o,i)=>o+i,0)/t.length,this.metrics.frameTime.max=Math.max(...t),performance.memory&&(this.metrics.memory.used=Math.round(performance.memory.usedJSHeapSize/1048576),this.metrics.memory.limit=Math.round(performance.memory.jsHeapSizeLimit/1048576),this.metrics.memory.percentage=Math.round(performance.memory.usedJSHeapSize/performance.memory.jsHeapSizeLimit*100))}evaluatePerformance(){const e=this.metrics.fps.average,t=this.performanceState;e>=this.targetFPS?this.performanceState="optimal":e>=this.warningThreshold?this.performanceState="degraded":this.performanceState="critical",t!==this.performanceState&&(console.log(`[PerformanceMonitor] State changed: ${t} â†’ ${this.performanceState}`),this.onPerformanceChange(this.performanceState,this.metrics),this.performanceState==="critical"&&this.onCriticalPerformance(this.metrics)),this.performanceState!=="optimal"&&this.frameCount%60===0&&console.warn("[PerformanceMonitor] Performance below target:",{state:this.performanceState,avgFPS:e,targetFPS:this.targetFPS})}rippleCreated(){this.metrics.ripples.created++,this.metrics.ripples.active++}rippleCompleted(){this.metrics.ripples.completed++,this.metrics.ripples.active=Math.max(0,this.metrics.ripples.active-1)}getMetrics(){return{...this.metrics,performanceState:this.performanceState,isTargetMet:this.metrics.fps.average>=this.targetFPS}}getRecommendations(){const e=[];return this.performanceState==="critical"?(e.push("Reduce animation complexity"),e.push("Disable visual effects"),e.push("Limit concurrent ripples to 1")):this.performanceState==="degraded"&&(e.push("Consider reducing ripple radius"),e.push("Simplify animation easing")),this.metrics.memory.percentage>80&&(e.push("High memory usage detected"),e.push("Clear completed animations")),e}stop(){this.isMonitoring=!1,this.samplingInterval&&(clearInterval(this.samplingInterval),this.samplingInterval=null),console.log("[PerformanceMonitor] Stopped monitoring")}reset(){this.metrics.fps.samples=[],this.metrics.frameTime.samples=[],this.metrics.ripples={active:0,created:0,completed:0},this.frameCount=0}destroy(){this.stop(),this.reset()}}class Q{constructor(e={}){this.viewer=e.viewer,this.radius=e.radius||200,this.duration=e.duration||800,this.maxRipples=e.maxRipples||3,this.onRippleComplete=e.onRippleComplete||(()=>{}),this.safariOptimizations={useWillChange:!0,use3DTransform:!0,useWebkitPrefix:!0,compositeLayerHints:!0,useContainment:!0,usePassiveListeners:!0,reduceCompositeLayersOnMobile:Y()},this.container=null,this.activeRipples=new Map,this.rippleIdCounter=0,this.performanceMonitor=new Z({targetFPS:30,warningThreshold:25,criticalThreshold:20,onPerformanceChange:this.handlePerformanceChange.bind(this),onCriticalPerformance:this.handleCriticalPerformance.bind(this)}),this.isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),this.isIOS=/iPad|iPhone|iPod/.test(navigator.userAgent)||navigator.platform==="MacIntel"&&navigator.maxTouchPoints>1,console.log("[CSSRippleRenderer] Initialized",{safari:this.isSafari,iOS:this.isIOS,mobile:Y()})}initialize(){this.createContainer(),this.injectStyles(),this.performanceMonitor.start(),console.log("[CSSRippleRenderer] Initialized container and styles")}createContainer(){this.container||(this.container=document.createElement("div"),this.container.className="css-ripple-container",this.container.style.cssText=`
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 9999;
            overflow: hidden;
            ${this.safariOptimizations.use3DTransform?"transform: translate3d(0, 0, 0);":""}
            ${this.safariOptimizations.useWillChange?"will-change: transform;":""}
            ${this.safariOptimizations.compositeLayerHints?"-webkit-transform: translateZ(0);":""}
            ${this.safariOptimizations.useContainment?"contain: layout style paint;":""}
        `,document.body.appendChild(this.container))}injectStyles(){if(document.getElementById("css-ripple-styles"))return;const e=document.createElement("style");e.id="css-ripple-styles";const t=`
            @keyframes ripple-expand {
                0% {
                    transform: translate3d(-50%, -50%, 0) scale(0);
                    opacity: 1;
                }
                50% {
                    opacity: 0.8;
                }
                100% {
                    transform: translate3d(-50%, -50%, 0) scale(1);
                    opacity: 0;
                }
            }
            
            /* Simplified mobile version for better performance */
            @media (max-width: 768px) {
                @keyframes ripple-expand {
                    0% {
                        transform: translate3d(-50%, -50%, 0) scale(0);
                        opacity: 0.6;
                    }
                    100% {
                        transform: translate3d(-50%, -50%, 0) scale(1);
                        opacity: 0;
                    }
                }
            }
            
            @-webkit-keyframes ripple-expand {
                0% {
                    -webkit-transform: translate3d(-50%, -50%, 0) scale(0);
                    opacity: 1;
                }
                50% {
                    opacity: 0.8;
                }
                100% {
                    -webkit-transform: translate3d(-50%, -50%, 0) scale(1);
                    opacity: 0;
                }
            }
        `,o=`
            @keyframes ripple-outer {
                0% {
                    transform: translate3d(-50%, -50%, 0) scale(0.5);
                    opacity: 0.25;
                }
                100% {
                    transform: translate3d(-50%, -50%, 0) scale(1.2);
                    opacity: 0;
                }
            }
            
            @keyframes ripple-inner {
                0% {
                    transform: translate3d(-50%, -50%, 0) scale(0);
                    opacity: 0.5;
                }
                100% {
                    transform: translate3d(-50%, -50%, 0) scale(1);
                    opacity: 0;
                }
            }
            
            @keyframes ripple-core {
                0% {
                    transform: translate3d(-50%, -50%, 0) scale(0);
                    opacity: 0.9;
                }
                50% {
                    opacity: 0.8;
                }
                100% {
                    transform: translate3d(-50%, -50%, 0) scale(0.8);
                    opacity: 0;
                }
            }
        `,i=`
            .css-ripple {
                position: absolute;
                border-radius: 50%;
                background: transparent;
                border: 2px solid rgba(255, 255, 255, 0.8);
                /* Simplified box-shadow for better mobile performance */
                box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
                pointer-events: none;
                ${this.safariOptimizations.use3DTransform?"transform: translate3d(-50%, -50%, 0) scale(0);":"transform: translate(-50%, -50%) scale(0);"}
                ${this.safariOptimizations.useWillChange?"will-change: transform, opacity;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-transform: translate3d(-50%, -50%, 0) scale(0);":""}
                ${this.safariOptimizations.useContainment?"contain: layout;":""}
                /* GPU acceleration hints */
                backface-visibility: hidden;
                -webkit-backface-visibility: hidden;
                perspective: 1000px;
                -webkit-perspective: 1000px;
                animation: ripple-expand ${this.duration}ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation: ripple-expand "+this.duration+"ms cubic-bezier(0.4, 0, 0.2, 1) forwards;":""}
            }
            
            .css-ripple.low-performance {
                box-shadow: none;
                background: rgba(255, 255, 255, 0.3);
                animation-duration: ${this.duration*.7}ms;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-duration: "+this.duration*.7+"ms;":""}
            }
            
            /* Multi-layer ripple structure */
            .css-ripple-multi {
                position: absolute;
                pointer-events: none;
                ${this.safariOptimizations.use3DTransform?"transform: translate3d(-50%, -50%, 0);":"transform: translate(-50%, -50%);"}
            }
            
            .ripple-layer {
                position: absolute;
                top: 50%;
                left: 50%;
                border-radius: 50%;
                pointer-events: none;
            }
            
            .ripple-layer-outer {
                border: 1px solid rgba(255, 255, 255, 0.15);
                background: radial-gradient(circle, transparent 60%, rgba(255, 255, 255, 0.1) 100%);
                animation: ripple-outer ${this.duration}ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
            }
            
            .ripple-layer-inner {
                border: 2px solid rgba(255, 255, 255, 0.4);
                background: transparent;
                animation: ripple-inner ${this.duration*.85}ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
            }
            
            .ripple-layer-core {
                border: 3px solid rgba(255, 255, 255, 0.8);
                background: rgba(255, 255, 255, 0.1);
                animation: ripple-core ${this.duration*.7}ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
            }
        `,s=`
            /* Override any LOD or visibility class during reveal */
            .hotspot-echo-reveal.hotspot-hidden,
            .hotspot-hidden.hotspot-echo-reveal,
            .hotspot-echo-reveal.hotspot-visible,
            .hotspot-visible.hotspot-echo-reveal {
                opacity: 0 !important;
                visibility: visible !important;
                pointer-events: none !important;
                display: block !important;
            }
            
            /* Default reveal style (white/visible) - optimized duration */
            .hotspot-echo-reveal {
                visibility: visible !important;
                display: block !important;
                z-index: 1000 !important;
                pointer-events: none !important;
                /* CRITICAL: Set transform-origin to prevent position shifting */
                transform-origin: center center !important;
                -webkit-transform-origin: center center !important;
                /* GPU acceleration for mobile - removed translateZ to avoid conflicts with scale */
                backface-visibility: hidden;
                -webkit-backface-visibility: hidden;
                perspective: 1000px;
                -webkit-perspective: 1000px;
                /* Optimized animation */
                animation-name: hotspot-simple-fade-in !important;
                animation-duration: 0.3s !important;
                animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
                animation-fill-mode: both !important;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-name: hotspot-simple-fade-in !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-duration: 0.3s !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-fill-mode: both !important;":""}
                ${this.safariOptimizations.useContainment?"contain: layout style;":""}
            }
            
            /* Black mode specific styling - optimized for mobile */
            .hotspot-echo-reveal.black-mode {
                visibility: visible !important;
            }
            
            .hotspot-echo-reveal.black-mode path,
            .hotspot-echo-reveal.black-mode polygon,
            .hotspot-echo-reveal.black-mode polyline {
                stroke: #000000 !important;
                fill: none !important;
                stroke-width: 6 !important;
                /* Reduced filter complexity for better mobile performance */
                filter: drop-shadow(0 0 15px rgba(0, 0, 0, 0.7));
                animation-name: hotspot-simple-fade-in !important;
                animation-duration: 0.4s !important;
                animation-timing-function: ease-out !important;
                animation-fill-mode: both !important;
                animation-delay: inherit !important;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-name: hotspot-simple-fade-in !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-duration: 0.4s !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-timing-function: ease-out !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-fill-mode: both !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-delay: inherit !important;":""}
            }
            
            /* Removed multiple glow layers for better performance on mobile */
            
            /* Ensure g elements are visible and override LOD */
            g.hotspot-echo-reveal,
            g.hotspot-echo-reveal.hotspot-hidden,
            g.hotspot-echo-reveal.hotspot-visible {
                opacity: 1 !important;
                visibility: visible !important;
                display: block !important;
                z-index: 1000 !important;
            }
            
            /* Override any LOD hiding during reveal */
            .hotspot-echo-reveal.hotspot-visible,
            .hotspot-visible.hotspot-echo-reveal {
                opacity: 0 !important;
                animation-name: hotspot-simple-fade-in !important;
                animation-duration: 0.6s !important;
                animation-fill-mode: forwards !important;
            }
            
            /* Force visibility for all child elements */
            .hotspot-echo-reveal path,
            .hotspot-echo-reveal polygon,
            .hotspot-echo-reveal polyline {
                visibility: visible !important;
            }
            
            /* Simple fade for default mode - with forced start from 0 */
            @keyframes hotspot-simple-fade-in {
                0% { 
                    opacity: 0 !important;
                    visibility: visible;
                }
                1% {
                    opacity: 0 !important;
                    visibility: visible;
                }
                100% { 
                    opacity: 1;
                    visibility: visible;
                }
            }
            
            @-webkit-keyframes hotspot-simple-fade-in {
                0% { 
                    opacity: 0 !important;
                    visibility: visible;
                }
                1% {
                    opacity: 0 !important;
                    visibility: visible;
                }
                100% { 
                    opacity: 1;
                    visibility: visible;
                }
            }
            
            /* Removed complex black mode animation - using simple fade for performance */
            
            /* Fade-out animation - simplified */
            .hotspot-echo-fade-out {
                animation: hotspot-simple-fade-out 0.3s ease-out forwards !important;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation: hotspot-simple-fade-out 0.3s ease-out forwards !important;":""}
            }
            
            .hotspot-echo-fade-out.black-mode path {
                animation: hotspot-simple-fade-out 0.3s ease-out forwards !important;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation: hotspot-simple-fade-out 0.3s ease-out forwards !important;":""}
            }
            
            @keyframes hotspot-simple-fade-out {
                from { opacity: 1; }
                to { opacity: 0; }
            }
            
            @-webkit-keyframes hotspot-simple-fade-out {
                from { opacity: 1; }
                to { opacity: 0; }
            }
        `,n=`
            /* Adaptive contrast styles based on background luminance */
            .hotspot-echo-reveal.contrast-adaptive-dark path {
                stroke: rgba(255, 255, 255, 0.95) !important;
                stroke-width: 2px !important;
                filter: drop-shadow(0 0 6px rgba(255, 255, 255, 0.9)) !important;
            }
            
            .hotspot-echo-reveal.contrast-adaptive-light path {
                stroke: rgba(0, 0, 0, 0.95) !important;
                stroke-width: 2px !important;
                filter: drop-shadow(0 0 6px rgba(0, 0, 0, 0.9)) !important;
            }
            
            .hotspot-echo-reveal.contrast-adaptive-medium path {
                stroke: rgba(255, 255, 255, 1) !important;
                stroke-width: 2.5px !important;
                filter: 
                    drop-shadow(0 0 2px rgba(0, 0, 0, 1))
                    drop-shadow(0 0 6px rgba(255, 255, 255, 0.9)) !important;
            }
            
            .hotspot-echo-reveal.contrast-adaptive-complex path {
                stroke: rgba(255, 255, 255, 1) !important;
                stroke-width: 3px !important;
                filter: 
                    drop-shadow(1px 1px 1px rgba(0, 0, 0, 1))
                    drop-shadow(-1px -1px 1px rgba(0, 0, 0, 1))
                    drop-shadow(0 0 8px rgba(255, 255, 255, 1)) !important;
            }
            
            /* Mobile optimizations */
            @media (max-width: 768px) {
                .hotspot-echo-reveal.contrast-adaptive-complex path {
                    filter: drop-shadow(0 0 6px rgba(255, 255, 255, 1)) !important;
                }
                
                /* Reduce animation complexity on mobile */
                .css-ripple {
                    animation-duration: ${this.duration*.8}ms !important;
                }
                
                .hotspot-echo-reveal {
                    animation-duration: 0.25s !important;
                    ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-duration: 0.25s !important;":""}
                }
                
                /* Force layer creation for smoother animations */
                .css-ripple {
                    transform: translate3d(0, 0, 0);
                    -webkit-transform: translate3d(0, 0, 0);
                }
                
                /* Hotspots use will-change instead to avoid transform conflicts */
                .hotspot-echo-reveal {
                    will-change: transform, opacity;
                    transform-origin: center center !important;
                    -webkit-transform-origin: center center !important;
                }
            }
        `;e.textContent=t+o+i+s+n,document.head.appendChild(e)}createRipple(e,t,o=!1){if(o)return this.createMultiLayerRipple(e,t);if(this.activeRipples.size>=this.maxRipples){const r=this.activeRipples.values().next().value;r&&this.removeRipple(r.id)}const i=`ripple-${this.rippleIdCounter++}`,s=document.createElement("div");s.className="css-ripple",s.id=i,this.performanceMonitor.getMetrics().performanceState!=="optimal"&&s.classList.add("low-performance");const a=this.radius*2;return s.style.width=`${a}px`,s.style.height=`${a}px`,s.style.left=`${e}px`,s.style.top=`${t}px`,this.container.appendChild(s),this.activeRipples.set(i,{id:i,element:s,startTime:performance.now()}),setTimeout(()=>{this.removeRipple(i)},this.duration),this.performanceMonitor.rippleCreated(),console.log("[CSSRippleRenderer] Created ripple at",{x:e,y:t},"id:",i),i}createMultiLayerRipple(e,t){if(this.activeRipples.size>=this.maxRipples){const n=this.activeRipples.values().next().value;n&&this.removeRipple(n.id)}const o=`ripple-multi-${this.rippleIdCounter++}`,i=document.createElement("div");return i.className="css-ripple-multi",i.id=o,[{class:"ripple-layer ripple-layer-outer",size:this.radius*2.2},{class:"ripple-layer ripple-layer-inner",size:this.radius*2},{class:"ripple-layer ripple-layer-core",size:this.radius*1.5}].forEach(n=>{const a=document.createElement("div");a.className=n.class,a.style.width=`${n.size}px`,a.style.height=`${n.size}px`,i.appendChild(a)}),i.style.left=`${e}px`,i.style.top=`${t}px`,this.container.appendChild(i),this.activeRipples.set(o,{id:o,element:i,startTime:performance.now()}),setTimeout(()=>{this.removeRipple(o)},this.duration),this.performanceMonitor.rippleCreated(),console.log("[CSSRippleRenderer] Created multi-layer ripple at",{x:e,y:t},"id:",o),o}removeRipple(e){const t=this.activeRipples.get(e);t&&(t.element&&t.element.parentNode&&t.element.remove(),this.activeRipples.delete(e),this.performanceMonitor.rippleCompleted(),this.onRippleComplete(e))}handlePerformanceChange(e,t){console.log(`[CSSRippleRenderer] Performance state: ${e}`,t.fps),e==="critical"?(this.maxRipples=1,this.duration=600):e==="degraded"?(this.maxRipples=2,this.duration=700):(this.maxRipples=3,this.duration=800)}handleCriticalPerformance(e){console.warn("[CSSRippleRenderer] Critical performance detected!",e),this.activeRipples.size>1&&Array.from(this.activeRipples.keys()).slice(0,-1).forEach(o=>this.removeRipple(o))}getFPS(){return this.performanceMonitor.getMetrics().fps.current}getPerformanceMetrics(){return this.performanceMonitor.getMetrics()}cleanup(){this.activeRipples.forEach(e=>{e.element&&e.element.parentNode&&e.element.remove()}),this.activeRipples.clear(),this.performanceMonitor.stop()}destroy(){this.cleanup(),this.performanceMonitor.destroy(),this.container&&this.container.parentNode&&(this.container.remove(),this.container=null);const e=document.getElementById("css-ripple-styles");e&&e.remove(),console.log("[CSSRippleRenderer] Destroyed")}}class _{constructor(e={}){this.viewer=e.viewer,this.container=e.container||this.viewer.container,this.config={animationDuration:600,rippleDuration:400,fadeInDuration:300,staggerDelay:30,maxHotspots:8,dpr:Math.min(window.devicePixelRatio||1,2)},this.canvas=null,this.ctx=null,this.isAnimating=!1,this.animations=[],this.animationFrame=null,this.viewportHandler=null,this.initialize()}initialize(){this.canvas=document.createElement("canvas"),this.canvas.className="temporal-echo-canvas",this.canvas.id="temporal-echo-canvas",this.ctx=this.canvas.getContext("2d",{alpha:!0,desynchronized:!0,willReadFrequently:!1}),this.updateCanvasSize(),Object.assign(this.canvas.style,{position:"fixed",top:"0",left:"0",pointerEvents:"none",zIndex:"2147483647",opacity:"0",display:"block",transform:"translateZ(0)",willChange:"opacity"}),document.body.appendChild(this.canvas),this.setupViewportSync(),this.resizeHandler=()=>this.updateCanvasSize(),window.addEventListener("resize",this.resizeHandler);const e=this.canvas.getBoundingClientRect();console.log("[CanvasHotspotRenderer] Initialized with size:",e.width,"x",e.height,"DPR:",this.config.dpr),console.log("[CanvasHotspotRenderer] Canvas attached to:",this.canvas.parentElement.tagName)}updateCanvasSize(){const e=document.documentElement.clientWidth||window.innerWidth,t=document.documentElement.clientHeight||window.innerHeight;this.canvas.width=e*this.config.dpr,this.canvas.height=t*this.config.dpr,this.canvas.style.width=e+"px",this.canvas.style.height=t+"px",this.ctx.scale(this.config.dpr,this.config.dpr),console.log("[CanvasHotspotRenderer] Canvas resized to:",e,"x",t)}setupViewportSync(){this.viewer&&(this.viewportHandler=()=>{this.isAnimating&&this.updateCanvasTransform()},this.viewer.addHandler("update-viewport",this.viewportHandler))}updateCanvasTransform(){}startRevealAnimation(e,t){var i;if(this.isAnimating){console.warn("[CanvasHotspotRenderer] Animation already in progress");return}console.log("[CanvasHotspotRenderer] Starting reveal for",e.length,"hotspots"),console.log("[CanvasHotspotRenderer] Tap point:",t),console.log("[CanvasHotspotRenderer] Canvas visibility check:",{display:this.canvas.style.display,opacity:this.canvas.style.opacity,zIndex:this.canvas.style.zIndex,parentElement:(i=this.canvas.parentElement)==null?void 0:i.tagName,canvasRect:this.canvas.getBoundingClientRect(),computed:window.getComputedStyle(this.canvas)}),this.isAnimating=!0,this.animations=[],this.canvas.style.opacity="1",this.canvas.style.display="block",console.log("[CanvasHotspotRenderer] Starting animation for",e.length,"hotspots at tap point:",t);const o=performance.now();this.animations.push({type:"ripple",center:this.imageToCanvas(t),startTime:o,duration:this.config.rippleDuration,maxRadius:200}),e.forEach((s,n)=>{const a=this.calculateCenter(s);this.animations.push({type:"hotspot",center:this.imageToCanvas(a),startTime:o+n*this.config.staggerDelay,duration:this.config.fadeInDuration,hotspot:s,radius:20})}),this.animate(),setTimeout(()=>{this.transitionToSVG(e)},this.config.animationDuration)}animate(){const e=performance.now();this.ctx.clearRect(0,0,this.canvas.width/this.config.dpr,this.canvas.height/this.config.dpr);let t=!1;this.animations.forEach(o=>{const i=e-o.startTime;if(i<0){t=!0;return}if(i>o.duration)return;t=!0;const s=i/o.duration;o.type==="ripple"?this.drawRipple(o,s):o.type==="hotspot"&&this.drawHotspot(o,s)}),t&&(this.animationFrame=requestAnimationFrame(()=>this.animate()))}drawRipple(e,t){const o=e.maxRadius*this.easeOutCubic(t),i=.3*(1-t);this.ctx.save(),this.ctx.strokeStyle=`rgba(255, 255, 255, ${i})`,this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(e.center.x,e.center.y,o,0,Math.PI*2),this.ctx.stroke(),this.ctx.restore()}drawHotspot(e,t){const o=.8+.2*this.easeOutBack(t),i=this.easeInOutCubic(t);this.ctx.save(),this.ctx.strokeStyle=`rgba(255, 255, 255, ${i})`,this.ctx.lineWidth=2;const s=e.radius*o;if(this.ctx.beginPath(),this.ctx.arc(e.center.x,e.center.y,s,0,Math.PI*2),this.ctx.stroke(),t>.3){const n=i*.3;this.ctx.fillStyle=`rgba(255, 255, 255, ${n})`,this.ctx.beginPath(),this.ctx.arc(e.center.x,e.center.y,s*.7,0,Math.PI*2),this.ctx.fill()}this.ctx.restore()}transitionToSVG(e){console.log("[CanvasHotspotRenderer] Transitioning to SVG for interaction"),setTimeout(()=>{this.cleanup(),this.canvas.style.opacity="0"},2e3)}cleanup(){this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null);const e=this.canvas.width/this.config.dpr,t=this.canvas.height/this.config.dpr;this.ctx.clearRect(0,0,e,t),this.isAnimating=!1,this.animations=[],console.log("[CanvasHotspotRenderer] Cleanup complete")}imageToCanvas(e){if(!this.viewer||!e)return console.warn("[CanvasHotspotRenderer] Invalid viewer or imagePoint"),{x:200,y:200};try{const t=e.x!==void 0?e:{x:e,y:0},o=this.viewer.viewport.imageToViewportCoordinates(t.x,t.y),i=this.viewer.viewport.pixelFromPoint(o),s=this.viewer.container.getBoundingClientRect(),n=i.x+s.left,a=i.y+s.top;return console.log("[CanvasHotspotRenderer] Coordinate conversion:",{imagePoint:t,viewportPoint:o,pixelPoint:i,viewerRect:{left:s.left,top:s.top},canvasCoords:{x:n,y:a}}),{x:n,y:a}}catch(t){return console.error("[CanvasHotspotRenderer] Conversion error:",t),{x:200,y:200}}}calculateCenter(e){const t=e.hotspot||e;if(t.center)return t.center;if(t.coordinates&&Array.isArray(t.coordinates)){let i=0,s=0,n=0;for(const a of t.coordinates)Array.isArray(a)&&a.length>=2&&(i+=a[0],s+=a[1],n++);if(n>0)return{x:i/n,y:s/n}}const o=t.bbox||t.bounds;if(o){if(o.minX!==void 0)return{x:(o.minX+o.maxX)/2,y:(o.minY+o.maxY)/2};if(o.x!==void 0)return{x:o.x+(o.width||0)/2,y:o.y+(o.height||0)/2}}return t.x!==void 0&&t.y!==void 0?{x:t.x,y:t.y}:(console.warn("[CanvasHotspotRenderer] Could not calculate center for hotspot:",e),{x:200,y:200})}easeOutCubic(e){return 1-Math.pow(1-e,3)}easeOutBack(e){return 1+2.70158*Math.pow(e-1,3)+1.70158*Math.pow(e-1,2)}easeInOutCubic(e){return e<.5?4*e*e*e:1-Math.pow(-2*e+2,3)/2}destroy(){this.viewer&&this.viewportHandler&&this.viewer.removeHandler("update-viewport",this.viewportHandler),this.resizeHandler&&window.removeEventListener("resize",this.resizeHandler),this.cleanup(),this.canvas&&this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas),this.canvas=null,this.ctx=null,console.log("[CanvasHotspotRenderer] Destroyed")}}class J{constructor(e={}){this.viewer=e.viewer,this.spatialIndex=e.spatialIndex,this.config={canvasSize:512,updateThreshold:100,enabled:e.enabled!==!1,dpr:1},this.hitCanvas=null,this.hitCtx=null,this.colorMap=new Map,this.lastUpdate=0,this.isDirty=!0,this.currentBounds=null,this.metrics={lastHitTime:0,averageHitTime:0,hitCount:0,lastRenderTime:0},this.config.enabled&&this.initialize()}initialize(){this.hitCanvas=document.createElement("canvas"),this.hitCanvas.width=this.config.canvasSize,this.hitCanvas.height=this.config.canvasSize,this.hitCtx=this.hitCanvas.getContext("2d",{alpha:!1,willReadFrequently:!0,desynchronized:!1}),this.hitCtx.fillStyle="#000000",this.hitCtx.fillRect(0,0,this.config.canvasSize,this.config.canvasSize),this.viewer&&(this.viewportHandler=()=>{this.markDirty()},this.viewer.addHandler("viewport-change",this.viewportHandler)),console.log("[CanvasHitDetector] Initialized with",this.config.canvasSize,"px canvas")}markDirty(){this.isDirty=!0}updateHitCanvas(e){const t=performance.now();if(!this.isDirty&&this.currentBounds&&this.boundsEqual(e,this.currentBounds)&&t-this.lastUpdate<this.config.updateThreshold)return;const o=performance.now();if(this.hitCtx.fillStyle="#000000",this.hitCtx.fillRect(0,0,this.config.canvasSize,this.config.canvasSize),this.colorMap.clear(),!this.spatialIndex){console.warn("[CanvasHitDetector] No spatial index available");return}const i=this.spatialIndex.queryViewport(e);let s=1;for(const a of i){if(!a.coordinates)continue;const r=this.indexToColor(s);if(this.colorMap.set(r,a.id),this.drawHotspot(a,r,e),s++,s>16777215)break}this.isDirty=!1,this.currentBounds={...e},this.lastUpdate=t;const n=performance.now()-o;this.metrics.lastRenderTime=n,n>10?console.warn(`[CanvasHitDetector] Slow render: ${n.toFixed(2)}ms for ${i.length} hotspots`):console.log(`[CanvasHitDetector] Canvas updated in ${n.toFixed(2)}ms for ${i.length} hotspots`)}drawHotspot(e,t,o){const i=this.hitCtx,s=this.config.canvasSize;i.fillStyle=t,i.beginPath();const n=e.coordinates;if(e.shape==="polygon")for(let a=0;a<n.length;a++){const r=(n[a][0]-o.minX)/(o.maxX-o.minX)*s,l=(n[a][1]-o.minY)/(o.maxY-o.minY)*s;a===0?i.moveTo(r,l):i.lineTo(r,l)}else if(e.shape==="multipolygon"){const a=n[0];for(let r=0;r<a.length;r++){const l=(a[r][0]-o.minX)/(o.maxX-o.minX)*s,c=(a[r][1]-o.minY)/(o.maxY-o.minY)*s;r===0?i.moveTo(l,c):i.lineTo(l,c)}}i.closePath(),i.fill()}detectHit(e,t,o){const i=performance.now();this.updateHitCanvas(o);const s=this.config.canvasSize,n=Math.floor((e-o.minX)/(o.maxX-o.minX)*s),a=Math.floor((t-o.minY)/(o.maxY-o.minY)*s);if(n<0||n>=s||a<0||a>=s)return null;const r=this.hitCtx.getImageData(n,a,1,1).data,l=this.rgbToColor(r[0],r[1],r[2]),c=this.colorMap.get(l),h=performance.now()-i;return this.metrics.lastHitTime=h,this.metrics.hitCount++,this.metrics.averageHitTime=(this.metrics.averageHitTime*(this.metrics.hitCount-1)+h)/this.metrics.hitCount,h>2&&console.warn(`[CanvasHitDetector] Slow hit detection: ${h.toFixed(2)}ms`),c||null}findNearbyHits(e,t,o,i,s=10){const n=performance.now();this.updateHitCanvas(i);const a=this.config.canvasSize,r=(e-i.minX)/(i.maxX-i.minX)*a,l=(t-i.minY)/(i.maxY-i.minY)*a,c=o/(i.maxX-i.minX)*a,h=new Map,d=this.generateSpiralSamples(r,l,c,32);for(const[v,y]of d){if(v<0||v>=a||y<0||y>=a)continue;const C=this.hitCtx.getImageData(v,y,1,1).data,E=this.rgbToColor(C[0],C[1],C[2]),A=this.colorMap.get(E);if(A&&!h.has(A)){const w=v-r,p=y-l,f=Math.sqrt(w*w+p*p);h.set(A,f)}if(h.size>=s)break}const m=Array.from(h.entries()).sort((v,y)=>v[1]-y[1]).slice(0,s).map(v=>v[0]),u=performance.now()-n;return console.log(`[CanvasHitDetector] Found ${m.length} nearby hotspots in ${u.toFixed(2)}ms`),m}generateSpiralSamples(e,t,o,i){const s=[],n=2*Math.PI/8,a=o/4;s.push([Math.floor(e),Math.floor(t)]);for(let r=a;r<=o;r+=a)for(let l=0;l<2*Math.PI;l+=n){const c=Math.floor(e+r*Math.cos(l)),h=Math.floor(t+r*Math.sin(l));s.push([c,h])}return s}indexToColor(e){const t=e>>16&255,o=e>>8&255,i=e&255;return`#${t.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}${i.toString(16).padStart(2,"0")}`}rgbToColor(e,t,o){return`#${e.toString(16).padStart(2,"0")}${t.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}`}boundsEqual(e,t){return e.minX===t.minX&&e.minY===t.minY&&e.maxX===t.maxX&&e.maxY===t.maxY}getMetrics(){return{...this.metrics,colorMapSize:this.colorMap.size,canvasSize:this.config.canvasSize}}getDebugCanvas(){return this.hitCanvas.toDataURL()}setEnabled(e){this.config.enabled=e,e&&!this.hitCanvas&&this.initialize()}destroy(){this.viewer&&this.viewportHandler&&this.viewer.removeHandler("viewport-change",this.viewportHandler),this.hitCanvas&&(this.hitCanvas.width=0,this.hitCanvas.height=0,this.hitCanvas=null,this.hitCtx=null),this.colorMap.clear(),console.log("[CanvasHitDetector] Destroyed")}}var G={exports:{}};(function(b){(function(e){var t=function(){},o=e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.msRequestAnimationFrame||function(c){return setTimeout(c,16)};function i(){var c=this;c.reads=[],c.writes=[],c.raf=o.bind(e)}i.prototype={constructor:i,runTasks:function(c){for(var h;h=c.shift();)h()},measure:function(c,h){var d=h?c.bind(h):c;return this.reads.push(d),s(this),d},mutate:function(c,h){var d=h?c.bind(h):c;return this.writes.push(d),s(this),d},clear:function(c){return a(this.reads,c)||a(this.writes,c)},extend:function(c){if(typeof c!="object")throw new Error("expected object");var h=Object.create(this);return r(h,c),h.fastdom=this,h.initialize&&h.initialize(),h},catch:null};function s(c){c.scheduled||(c.scheduled=!0,c.raf(n.bind(null,c)))}function n(c){var h=c.writes,d=c.reads,m;try{t("flushing reads",d.length),c.runTasks(d),t("flushing writes",h.length),c.runTasks(h)}catch(u){m=u}if(c.scheduled=!1,(d.length||h.length)&&s(c),m)if(t("task errored",m.message),c.catch)c.catch(m);else throw m}function a(c,h){var d=c.indexOf(h);return!!~d&&!!c.splice(d,1)}function r(c,h){for(var d in h)h.hasOwnProperty(d)&&(c[d]=h[d])}var l=e.fastdom=e.fastdom||new i;b.exports=l})(typeof window<"u"?window:typeof W<"u"?W:globalThis)})(G);var K=G.exports;const I=V(K);class ee{constructor(){this.pendingReads=[],this.pendingWrites=[],this.activeOperations=new Set,this.metrics={lastBatchTime:0,averageBatchTime:0,batchCount:0},console.log("[BatchDOMManager] Initialized for Phase 3 optimization")}batchRevealHotspots(e,t={}){const o=performance.now(),{staggerDelay:i=30,revealDuration:s=2e3,borderStyle:n="default"}=t;console.log(`[BatchDOMManager] Batching reveal for ${e.length} hotspots`);const a=new Array(e.length);e.forEach((r,l)=>{I.measure(()=>{a[l]={element:r,originalOpacity:r.style.opacity||"",originalVisibility:r.style.visibility||"",wasHidden:r.classList.contains("hotspot-hidden"),wasVisible:r.classList.contains("hotspot-visible"),currentTransform:window.getComputedStyle(r).transform,rect:r.getBoundingClientRect()}})}),I.mutate(()=>{e.forEach((l,c)=>{const d=`
                    opacity: 1;
                    visibility: visible;
                    display: block;
                    animation-delay: ${c*i}ms;
                    transform-origin: center center;
                    will-change: transform, opacity;
                `;l.style.cssText+=d,l.classList.remove("hotspot-hidden"),l.classList.add("hotspot-visible","hotspot-echo-reveal"),n!=="default"&&l.classList.add(`border-${n}`),l.setAttribute("data-hotspot-revealed","true"),this.activeOperations.add({element:l,measurement:a[c],borderStyle:n})});const r=performance.now()-o;this.updateMetrics(r),console.log(`[BatchDOMManager] Batch reveal completed in ${r.toFixed(2)}ms`),this.scheduleBatchHide(s)})}scheduleBatchHide(e){setTimeout(()=>{this.batchHideHotspots()},e)}batchHideHotspots(){if(this.activeOperations.size===0)return;const e=performance.now(),t=Array.from(this.activeOperations);console.log(`[BatchDOMManager] Batching hide for ${t.length} hotspots`),I.mutate(()=>{t.forEach(({element:i,measurement:s,borderStyle:n})=>{i.classList.remove("hotspot-echo-reveal","hotspot-echo-active","hotspot-echo-fade-out"),n!=="default"&&i.classList.remove(`border-${n}`),i.style.opacity=s.originalOpacity,i.style.visibility=s.originalVisibility,i.style.display="",i.style.animationDelay="",i.style.willChange="auto",s.wasHidden&&i.classList.add("hotspot-hidden"),s.wasVisible||i.classList.remove("hotspot-visible"),i.removeAttribute("data-hotspot-revealed")}),this.activeOperations.clear();const o=performance.now()-e;console.log(`[BatchDOMManager] Batch hide completed in ${o.toFixed(2)}ms`)})}batchUpdateVisibility(e){const t=performance.now();I.mutate(()=>{e.forEach(({element:i,visible:s})=>{s?(i.style.opacity="1",i.style.visibility="visible",i.classList.remove("hotspot-hidden"),i.classList.add("hotspot-visible")):(i.style.opacity="0",i.style.visibility="hidden",i.classList.add("hotspot-hidden"),i.classList.remove("hotspot-visible"))});const o=performance.now()-t;console.log(`[BatchDOMManager] Visibility update for ${e.length} elements in ${o.toFixed(2)}ms`)})}batchApplyTransforms(e){I.mutate(()=>{e.forEach(({element:t,transform:o})=>{t.style.transform=o,t.style.webkitTransform=o})})}batchMeasure(e,t){const o=new Array(e.length);e.forEach((i,s)=>{I.measure(()=>{o[s]={element:i,rect:i.getBoundingClientRect(),computed:window.getComputedStyle(i)}})}),I.mutate(()=>{t(o)})}updateMetrics(e){this.metrics.lastBatchTime=e,this.metrics.batchCount++,this.metrics.averageBatchTime=(this.metrics.averageBatchTime*(this.metrics.batchCount-1)+e)/this.metrics.batchCount,e>5&&console.warn(`[BatchDOMManager] Batch operation exceeded 5ms target: ${e.toFixed(2)}ms`)}getMetrics(){return{...this.metrics,activeOperations:this.activeOperations.size}}clear(){I.clear(),this.activeOperations.size>0&&this.batchHideHotspots(),this.pendingReads=[],this.pendingWrites=[]}destroy(){this.clear(),this.activeOperations.clear(),console.log("[BatchDOMManager] Destroyed")}}class te{constructor(e){this.viewer=e,this.canvas=null,this.context=null,this.cache=new Map,this.initializeCanvas()}initializeCanvas(){this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d",{willReadFrequently:!0})}calculateLuminance(e,t,o){const[i,s,n]=[e,t,o].map(a=>(a/=255,a<=.03928?a/12.92:Math.pow((a+.055)/1.055,2.4)));return i*.2126+s*.7152+n*.0722}calculateContrastRatio(e,t){const o=Math.max(e,t),i=Math.min(e,t);return(o+.05)/(i+.05)}async sampleBackgroundLuminance(e,t,o=50){const i=`${Math.round(e)}_${Math.round(t)}_${o}`;if(this.cache.has(i))return this.cache.get(i);try{if(!await this.captureViewportArea(e,t,o))return this.getDefaultLuminanceData();const n=this.getSamplePoints(o),a=[];for(const m of n){const u=o+m.x,v=o+m.y,y=this.context.getImageData(u,v,1,1).data,C=this.calculateLuminance(y[0],y[1],y[2]);a.push(C)}const r=a.reduce((m,u)=>m+u,0)/a.length,l=Math.min(...a),c=Math.max(...a),h=this.calculateVariance(a,r),d={averageLuminance:r,minLuminance:l,maxLuminance:c,variance:h,isDark:r<.5,isHighContrast:c-l>.5,recommendedEffect:this.selectHotspotEffect(r,h)};return this.cache.set(i,d),d}catch(s){return console.error("Error sampling background luminance:",s),this.getDefaultLuminanceData()}}async captureViewportArea(e,t,o){return null}getSamplePoints(e){const t=[];t.push({x:0,y:0});for(let s=1;s<=3;s++){const n=e*s/3;for(let a=0;a<8;a++){const r=a/8*Math.PI*2;t.push({x:Math.cos(r)*n,y:Math.sin(r)*n})}}return t}calculateVariance(e,t){return e.map(i=>Math.pow(i-t,2)).reduce((i,s)=>i+s,0)/e.length}selectHotspotEffect(e,t){return t>.1?"contrast-adaptive-complex":e<.3?"contrast-adaptive-dark":e>.7?"contrast-adaptive-light":"contrast-adaptive-medium"}getDefaultLuminanceData(){return{averageLuminance:.5,minLuminance:0,maxLuminance:1,variance:.1,isDark:!1,isHighContrast:!0,recommendedEffect:"contrast-adaptive-medium"}}clearCache(){this.cache.clear()}getCacheSize(){return this.cache.size}}class ie{constructor(){this.shadowCache=new Map,this.svgNamespace="http://www.w3.org/2000/svg",this.initialized=!1,this.shadowConfigs={echoReveal:{blur:4,color:"rgba(255, 255, 255, 0.8)",id:"echo-reveal-shadow"},echoIntense:{blur:10,color:"rgba(255, 255, 255, 0.8)",id:"echo-intense-shadow"},hover:{blur:8,color:"rgba(255, 255, 255, 0.6)",id:"hover-shadow"}}}initialize(){this.initialized||(console.log("[ShadowSpriteManager] Initializing pre-rendered shadows"),this.createShadowContainer(),Object.entries(this.shadowConfigs).forEach(([e,t])=>{this.createShadowFilter(t),this.shadowCache.set(e,t.id)}),this.initialized=!0,console.log("[ShadowSpriteManager] Shadow sprites initialized"))}createShadowContainer(){if(document.getElementById("shadow-sprite-defs"))return;const e=document.createElementNS(this.svgNamespace,"svg");e.id="shadow-sprite-defs",e.style.position="absolute",e.style.width="0",e.style.height="0",e.style.visibility="hidden",e.setAttribute("aria-hidden","true");const t=document.createElementNS(this.svgNamespace,"defs");e.appendChild(t),document.body.appendChild(e),this.defsContainer=t}createShadowFilter(e){const t=document.createElementNS(this.svgNamespace,"filter");t.id=e.id,t.setAttribute("x","-50%"),t.setAttribute("y","-50%"),t.setAttribute("width","200%"),t.setAttribute("height","200%");const o=document.createElementNS(this.svgNamespace,"feGaussianBlur");o.setAttribute("in","SourceAlpha"),o.setAttribute("stdDeviation",e.blur),o.setAttribute("result","blur");const i=document.createElementNS(this.svgNamespace,"feColorMatrix");i.setAttribute("in","blur"),i.setAttribute("type","matrix");const s=this.parseRGBA(e.color),n=`0 0 0 0 ${s.r} 
                       0 0 0 0 ${s.g} 
                       0 0 0 0 ${s.b} 
                       0 0 0 ${s.a} 0`;i.setAttribute("values",n),i.setAttribute("result","coloredBlur");const a=document.createElementNS(this.svgNamespace,"feMerge"),r=document.createElementNS(this.svgNamespace,"feMergeNode");r.setAttribute("in","coloredBlur");const l=document.createElementNS(this.svgNamespace,"feMergeNode");l.setAttribute("in","SourceGraphic"),a.appendChild(r),a.appendChild(l),t.appendChild(o),t.appendChild(i),t.appendChild(a),this.defsContainer.appendChild(t)}parseRGBA(e){const t=e.match(/rgba?\((\d+),\s*(\d+),\s*(\d+),?\s*([0-9.]+)?\)/);return t?{r:parseInt(t[1])/255,g:parseInt(t[2])/255,b:parseInt(t[3])/255,a:t[4]?parseFloat(t[4]):1}:{r:1,g:1,b:1,a:1}}applyShadow(e,t){this.initialized||this.initialize();const o=this.shadowCache.get(t);if(!o){console.warn(`[ShadowSpriteManager] Unknown shadow type: ${t}`);return}e.style.filter=`url(#${o})`,e.dataset.willChangeApplied||(e.style.willChange="filter",e.dataset.willChangeApplied="true")}removeShadow(e){e.style.filter="",e.dataset.willChangeApplied&&setTimeout(()=>{e.style.willChange="auto",delete e.dataset.willChangeApplied},100)}applyShadowBatch(e,t){this.initialized||this.initialize();const o=this.shadowCache.get(t);o&&requestAnimationFrame(()=>{e.forEach(i=>{i.style.filter=`url(#${o})`})})}destroy(){const e=document.getElementById("shadow-sprite-defs");e&&e.remove(),this.shadowCache.clear(),this.initialized=!1}}const B=new ie;function oe(b,e){if(!b)return;const t=b.getBoundingClientRect(),o=t.left+t.width/2,i=t.top+t.height/2,s=document.createElement("div");s.className="hotspot-center-debug",s.style.cssText=`
        position: fixed;
        width: 10px;
        height: 10px;
        background: red;
        border: 2px solid white;
        border-radius: 50%;
        left: ${o-7}px;
        top: ${i-7}px;
        z-index: 99999;
        pointer-events: none;
        box-shadow: 0 0 5px rgba(0,0,0,0.5);
    `;const n=document.createElement("div");n.style.cssText=`
        position: absolute;
        top: -20px;
        left: 50%;
        transform: translateX(-50%);
        background: rgba(0,0,0,0.8);
        color: white;
        padding: 2px 6px;
        font-size: 10px;
        white-space: nowrap;
        border-radius: 3px;
    `,n.textContent=e.substring(0,8),s.appendChild(n),document.body.appendChild(s);let a=0;const r=()=>{a++;const l=b.getBoundingClientRect(),c=l.left+l.width/2,h=l.top+l.height/2;s.style.left=`${c-7}px`,s.style.top=`${h-7}px`;const d=Math.abs(c-o),m=Math.abs(h-i);(d>1||m>1)&&(console.warn(`[HotspotDebug] Position shift detected for ${e}:`,{deltaX:d.toFixed(2),deltaY:m.toFixed(2),frame:a,originalCenter:{x:o,y:i},newCenter:{x:c,y:h}}),s.style.background="yellow",s.style.boxShadow="0 0 10px red"),a<60?requestAnimationFrame(r):setTimeout(()=>{s.remove()},1e3)};requestAnimationFrame(r)}window.enableHotspotPositionDebug=()=>{window.hotspotPositionDebugEnabled=!0,console.log("[HotspotDebug] Position debugging enabled. Red dots will show hotspot centers during reveal.")};window.disableHotspotPositionDebug=()=>{window.hotspotPositionDebugEnabled=!1,document.querySelectorAll(".hotspot-center-debug").forEach(b=>b.remove()),console.log("[HotspotDebug] Position debugging disabled.")};class P{constructor(e=0,t=0){this.x=e,this.y=t}minus(e){return new P(this.x-e.x,this.y-e.y)}divide(e){return new P(this.x/e,this.y/e)}plus(e){return new P(this.x+e.x,this.y+e.y)}times(e){return new P(this.x*e,this.y*e)}distanceTo(e){return Math.sqrt(this.squaredDistanceTo(e))}squaredDistanceTo(e){const t=this.x-e.x,o=this.y-e.y;return t*t+o*o}rotate(e,t=new P(0,0)){const o=e*Math.PI/180,i=Math.cos(o),s=Math.sin(o),n=this.x-t.x,a=this.y-t.y;return new P(n*i-a*s+t.x,n*s+a*i+t.y)}apply(e){return new P(e(this.x),e(this.y))}clone(){return new P(this.x,this.y)}equals(e){return this.x===e.x&&this.y===e.y}negate(){return new P(-this.x,-this.y)}toString(){return`(${Math.round(this.x)},${Math.round(this.y)})`}}class se{constructor(){this.maxPerFrame=50,this.frameBudget=16}processBatch(e,t){const o=performance.now();let i=0;for(const s of e){if(performance.now()-o>this.frameBudget||i>=this.maxPerFrame)break;t(s),i++}return i}}class ae{constructor(e,t={}){this.viewer=e,this.config={waveSpeed:t.waveSpeed||300,waveDuration:t.waveDuration||1500,revealDuration:t.revealDuration||300,borderWidth:t.borderWidth||20,maxConcurrent:t.maxConcurrent||50,cleanupDelay:t.cleanupDelay||2e3,...t},this.activeAnimations=new Set,this.currentAnimations=[],this.batcher=new se,this.animationFrame=null,this.isIOS=/iPad|iPhone|iPod/.test(navigator.userAgent)||navigator.userAgent.includes("Macintosh")&&"ontouchend"in document,this.isSafari=/Safari/.test(navigator.userAgent)&&!/CriOS|FxiOS/.test(navigator.userAgent),this.injectStyles()}injectStyles(){if(document.getElementById("opacity-radial-wave-styles"))return;const e=document.createElement("style");e.id="opacity-radial-wave-styles",e.textContent=`
            .hotspot-wave-ready {
                opacity: 0;
                transform: scale(0.95);
                transition: opacity ${this.config.revealDuration}ms ease-out, 
                            transform ${this.config.revealDuration}ms ease-out;
                will-change: transform, opacity;
                /* Force GPU acceleration on iOS */
                -webkit-transform: translateZ(0) scale(0.95);
                -webkit-backface-visibility: hidden;
                contain: layout style paint;
            }
            
            .hotspot-wave-revealing {
                opacity: 1 !important;
                transform: scale(1) !important;
                -webkit-transform: translateZ(0) scale(1) !important;
            }
            
            /* Optimized for borders only */
            .hotspot-wave-ready path,
            .hotspot-wave-ready polygon {
                stroke: rgba(0, 0, 0, 0.8);
                stroke-width: 2px;
                fill: none;
            }
            
            /* iOS Safari specific optimizations */
            @supports (-webkit-touch-callout: none) {
                .hotspot-wave-ready {
                    -webkit-transform: translate3d(0, 0, 0) scale(0.95);
                }
                .hotspot-wave-revealing {
                    -webkit-transform: translate3d(0, 0, 0) scale(1);
                }
            }
        `,document.head.appendChild(e)}pixelToViewport(e,t){const o=this.viewer.viewport.getBounds(),i=this.viewer.viewport.getContainerSize();return{x:e/i.x*o.width+o.x,y:t/i.y*o.height+o.y}}viewportToPixel(e,t){const o=this.viewer.viewport.getBounds(),i=this.viewer.viewport.getContainerSize();return{x:(e-o.x)/o.width*i.x,y:(t-o.y)/o.height*i.y}}convertCoordinatesWithPolyfill(e){try{const t=new P(e.x,e.y);return{viewport:this.viewer.viewport.pointFromPixel(t),pixel:e}}catch(t){return console.warn("[OpacityWave] Polyfill failed, using manual conversion:",t),{viewport:this.pixelToViewport(e.x,e.y),pixel:e}}}triggerWaveAnimation(e,t){console.log("[OpacityWave] Starting wave animation at",e),console.log("[OpacityWave] Animating",t.length,"hotspots"),this.animationFrame&&(console.log("[OpacityWave] Canceling previous animation"),cancelAnimationFrame(this.animationFrame),this.animationFrame=null),this.activeAnimations.size>0&&(console.log("[OpacityWave] Cleaning up",this.activeAnimations.size,"active animations"),this.activeAnimations.forEach(n=>{n.element&&n.element.classList.remove("hotspot-wave-ready","hotspot-wave-revealing")}),this.activeAnimations.clear());const i=this.convertCoordinatesWithPolyfill(e).pixel,s=t.map(n=>{const a=n.hotspot||n,r=this.findHotspotElement(a.id);if(!r)return null;const l=r.getBoundingClientRect(),c=l.left+l.width/2,h=l.top+l.height/2,d=Math.sqrt(Math.pow(c-i.x,2)+Math.pow(h-i.y,2));return{element:r,hotspot:a,distance:d,delay:d/this.config.waveSpeed*1e3,started:!1}}).filter(n=>n!==null);s.sort((n,a)=>n.distance-a.distance),console.log("[OpacityWave] Prepared",s.length,"animations"),console.log("[OpacityWave] Delays range from 0ms to",Math.max(...s.map(n=>n.delay)).toFixed(0),"ms"),this.currentAnimations=s,this.animateWave(s)}prepareHotspot(e){e.classList.remove("hotspot-wave-revealing"),e.classList.add("hotspot-wave-ready"),e.querySelectorAll("path, polygon, polyline").forEach(o=>{o.style.stroke="rgba(0, 0, 0, 0.8)",o.style.strokeWidth="2px",o.style.fill="none"})}animateWave(e){const t=performance.now(),o=i=>{const s=i-t;let n=0;for(const a of e)if(!a.started){if(n>=this.config.maxConcurrent)break;s>=a.delay&&(this.prepareHotspot(a.element),this.revealHotspot(a.element),a.started=!0,n++,this.activeAnimations.add(a))}e.some(a=>!a.started)&&s<this.config.waveDuration?this.animationFrame=requestAnimationFrame(o):(console.log("[OpacityWave] Animation complete"),this.animationFrame=null)};this.animationFrame=requestAnimationFrame(o)}revealHotspot(e){e.classList.remove("hotspot-hidden"),e.classList.add("hotspot-visible"),requestAnimationFrame(()=>{e.classList.add("hotspot-wave-revealing")}),e.setAttribute("data-hotspot-revealed","true"),console.log("[OpacityWave] Revealing hotspot:",e.getAttribute("data-hotspot-id"))}findHotspotElement(e){const t=[`[data-hotspot-id="${e}"]`,`#hotspot-${e}`,`g[data-hotspot-id="${e}"]`];for(const o of t){const i=document.querySelector(o);if(i)return i}return null}triggerReverseWave(e){if(console.log("[OpacityWave] Starting reverse wave animation"),!e||e.length===0){this.cleanup();return}e.sort((i,s)=>i.distance-s.distance);const t=performance.now(),o=i=>{const s=i-t;let n=0;for(const a of e)if(a.element&&!a.hidden){if(n>=this.config.maxConcurrent)break;s>=a.delay&&(this.hideHotspot(a.element),a.hidden=!0,n++)}e.some(a=>a.element&&!a.hidden)&&s<this.config.waveDuration?requestAnimationFrame(o):(console.log("[OpacityWave] Reverse wave animation complete"),setTimeout(()=>{this.cleanup()},300))};requestAnimationFrame(o)}hideHotspot(e){e.classList.remove("hotspot-wave-revealing"),e.classList.remove("hotspot-wave-ready"),console.log("[OpacityWave] Hiding hotspot:",e.getAttribute("data-hotspot-id"))}cleanup(){console.log("[OpacityWave] Cleaning up"),this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null),this.activeAnimations.forEach(e=>{e.element&&(e.element.classList.remove("hotspot-wave-ready","hotspot-wave-revealing"),e.element.removeAttribute("data-hotspot-revealed"))}),this.activeAnimations.clear()}destroy(){this.cleanup();const e=document.getElementById("opacity-radial-wave-styles");e&&e.remove()}}class ne{extractVertices(e){const t=[];if(e.tagName==="polygon"||e.tagName==="polyline"){const o=e.getAttribute("points");if(o)return o.trim().split(/\s+/).map(s=>{const n=s.split(",").map(Number);return{x:n[0]||0,y:n[1]||0}})}else if(e.tagName==="path"){const o=e.getTotalLength(),i=20;for(let s=0;s<=i;s++){const n=e.getPointAtLength(s/i*o);t.push({x:n.x,y:n.y})}}return t}findClosestPointOnBorder(e,t){let o=1/0,i=null,s=0,n=0;const a=this.extractVertices(e);if(a.length<2)return null;for(let r=0;r<a.length;r++){const l=a[r],c=a[(r+1)%a.length],h={x:c.x-l.x,y:c.y-l.y},d={x:t.x-l.x,y:t.y-l.y},m=h.x*h.x+h.y*h.y;if(m===0){const C=Math.sqrt(d.x*d.x+d.y*d.y);C<o&&(o=C,i=l,s=r,n=0);continue}let u=(d.x*h.x+d.y*h.y)/m;u=Math.max(0,Math.min(1,u));const v={x:l.x+u*h.x,y:l.y+u*h.y},y=Math.sqrt(Math.pow(t.x-v.x,2)+Math.pow(t.y-v.y,2));y<o&&(o=y,i=v,s=r,n=u)}return{point:i,distance:o,segmentIndex:s,ratio:n,pathLength:this.calculatePathLengthToPoint(e,s,n)}}calculatePathLengthToPoint(e,t,o){if(e.tagName==="path"){const n=e.getTotalLength();return t/20*n+o*n/20}const i=this.extractVertices(e);let s=0;for(let n=0;n<t;n++){const a=i[n],r=i[(n+1)%i.length];s+=Math.sqrt(Math.pow(r.x-a.x,2)+Math.pow(r.y-a.y,2))}if(t<i.length){const n=i[t],a=i[(t+1)%i.length],r=Math.sqrt(Math.pow(a.x-n.x,2)+Math.pow(a.y-n.y,2));s+=r*o}return s}}class re{constructor(e,t,o,i={}){this.viewer=e,this.stateManager=t,this.temporalEchoController=o,this.pointCalculator=new ne,this.waveAnimator=new ae(e,{waveSpeed:i.waveSpeed||300,waveDuration:i.waveDuration||1500,revealDuration:i.revealDuration||300,borderWidth:i.borderWidth||20,cleanupDelay:i.fadeOutDuration||2e3}),this.config={waveSpeed:i.waveSpeed||300,principalRevealDuration:0,secondaryRevealDuration:i.secondaryRevealDuration||1500,maxConcurrentAnimations:i.maxConcurrentAnimations||30,distanceCacheSize:i.distanceCacheSize||1e3,maxRadius:i.maxRadius||800,borderColor:i.borderColor||"rgba(0, 0, 0, 0.8)",borderWidth:i.borderWidth||2,revealDuration:i.revealDuration||2e3,fadeOutDuration:i.fadeOutDuration||400,...i},this.animations=new Map,this.isAnimating=!1,this.animationFrameId=null,this.cleanupTimeout=null,this.frameCount=0,this.lastFrameTime=performance.now(),this.currentFPS=60,this.qualityLevel="high",this.distanceCache=new Map,this.bboxCache=new Map,this.transformCache=new Map,this.revealedHotspots=new Set,this.activeHotspots=new Set,this.platform=this.detectPlatform(),this.applyPlatformOptimizations(),this.injectStyles()}detectPlatform(){const e=navigator.userAgent,t=/iPad|iPhone|iPod/.test(e)||e.includes("Macintosh")&&"ontouchend"in document,o=/Safari/.test(e)&&!/CriOS|FxiOS/.test(e);return{isIOS:t,isSafari:o,isIOSSafari:t&&o,isMobile:/Mobi|Android/i.test(e)||t,deviceMemory:navigator.deviceMemory||4,hardwareConcurrency:navigator.hardwareConcurrency||4}}applyPlatformOptimizations(){this.platform.isIOSSafari&&(this.config.maxConcurrentAnimations=20,this.config.secondaryRevealDuration=200),(this.platform.deviceMemory<4||this.platform.isMobile)&&this.setQualityLevel("medium")}injectStyles(){if(document.getElementById("border-radial-styles"))return;const e=document.createElement("style");e.id="border-radial-styles",e.textContent=`
            /* Border radial animation styles */
            .border-radial-hotspot {
                pointer-events: auto !important;
                contain: layout style paint;
            }
            
            .border-radial-principal {
                /* Principal zone - instant reveal */
                stroke: rgba(0, 0, 0, 1) !important;
                stroke-width: 3px !important;
                fill: none !important;
                opacity: 1 !important;
                visibility: visible !important;
                filter: drop-shadow(0 0 3px rgba(0, 0, 0, 0.4));
            }
            
            .border-radial-principal path,
            .border-radial-principal polygon {
                stroke: rgba(0, 0, 0, 1) !important;
                stroke-width: 3px !important;
                fill: none !important;
            }
            
            .border-radial-secondary {
                /* Secondary zones - progressive reveal */
                stroke: rgba(0, 0, 0, 0.8) !important;
                stroke-width: 2px !important;
                fill: none !important;
                opacity: 0;
                transition: opacity var(--reveal-duration, 250ms) ease-out;
                transition-delay: var(--reveal-delay, 0ms);
            }
            
            .border-radial-secondary path,
            .border-radial-secondary polygon {
                stroke: rgba(0, 0, 0, 0.8) !important;
                stroke-width: 2px !important;
                fill: none !important;
            }
            
            .border-radial-revealing {
                opacity: 1 !important;
            }
            
            /* Directional reveal animations */
            @keyframes reveal-from-left {
                from { clip-path: inset(0 100% 0 0); }
                to { clip-path: inset(0 0 0 0); }
            }
            
            @keyframes reveal-from-right {
                from { clip-path: inset(0 0 0 100%); }
                to { clip-path: inset(0 0 0 0); }
            }
            
            @keyframes reveal-from-top {
                from { clip-path: inset(0 0 100% 0); }
                to { clip-path: inset(0 0 0 0); }
            }
            
            @keyframes reveal-from-bottom {
                from { clip-path: inset(100% 0 0 0); }
                to { clip-path: inset(0 0 0 0); }
            }
            
            .reveal-from-left {
                animation: reveal-from-left var(--reveal-duration, 250ms) ease-out forwards;
                animation-delay: var(--reveal-delay, 0ms);
            }
            
            .reveal-from-right {
                animation: reveal-from-right var(--reveal-duration, 250ms) ease-out forwards;
                animation-delay: var(--reveal-delay, 0ms);
            }
            
            .reveal-from-top {
                animation: reveal-from-top var(--reveal-duration, 250ms) ease-out forwards;
                animation-delay: var(--reveal-delay, 0ms);
            }
            
            .reveal-from-bottom {
                animation: reveal-from-bottom var(--reveal-duration, 250ms) ease-out forwards;
                animation-delay: var(--reveal-delay, 0ms);
            }
            
            /* iOS Safari optimizations */
            @supports (-webkit-appearance: none) {
                .border-radial-hotspot {
                    -webkit-transform: translateZ(0);
                    -webkit-backface-visibility: hidden;
                }
                
                .border-radial-secondary {
                    will-change: opacity;
                }
            }
            
            /* Performance optimizations */
            .border-radial-batch {
                will-change: auto !important;
            }
            
            /* Fade out animation */
            @keyframes border-radial-fadeout {
                from { opacity: 1; }
                to { opacity: 0; }
            }
            
            .border-radial-fading {
                animation: border-radial-fadeout var(--fade-duration, 400ms) ease-out forwards;
            }
        `,document.head.appendChild(e)}triggerBorderRadialAnimation(e,t){if(!t){console.log("[BorderRadial] Called without hotspots, skipping animation");return}console.log("[BorderRadial] Starting animation with",t.length,"hotspots"),console.log("[BorderRadial] Tap point:",e),console.log("[BorderRadial] isAnimating:",this.isAnimating),this.isAnimating&&(console.log("[BorderRadial] Animation in progress, doing light reset"),this.cleanupTimeout&&(clearTimeout(this.cleanupTimeout),this.cleanupTimeout=null),this.isAnimating=!1);const o=this.findPrincipalZone(e,t);if(!o){console.warn("[BorderRadial] No principal zone found"),this.isAnimating=!1;return}console.log("[BorderRadial] Principal zone:",o.id),this.isAnimating=!0,this.waveAnimator.triggerWaveAnimation(e,t);const i=this.config.revealDuration+this.config.fadeOutDuration;this.cleanupTimeout&&clearTimeout(this.cleanupTimeout),this.cleanupTimeout=setTimeout(()=>{this.fadeOutAndCleanup()},i)}findPrincipalZone(e,t){let o=null,i=1/0;return t.forEach(s=>{const n=s.hotspot||s,a=s.distance||this.calculateDistanceToTap(e,n);a<i&&(i=a,o=n)}),o}calculateDistanceToTap(e,t){const o=this.findHotspotElement(t.id);if(!o)return 1/0;const i=o.getBoundingClientRect(),s=i.left+i.width/2,n=i.top+i.height/2;return Math.hypot(s-e.x,n-e.y)}revealPrincipalZone(e){const t=this.findHotspotElement(e.id);if(!t){console.warn("[BorderRadial] Could not find element for principal zone:",e.id);return}t.classList.remove("hotspot-hidden"),t.classList.add("hotspot-visible"),t.classList.add("border-radial-hotspot","border-radial-principal"),t.style.opacity="1",t.style.visibility="visible",t.querySelectorAll("path, polygon, polyline").forEach(i=>{i.style.stroke="rgba(0, 0, 0, 1)",i.style.strokeWidth=`${this.config.borderWidth+1}px`,i.style.fill="none",i.style.opacity="1",i.style.visibility="visible",i.style.strokeDasharray="0",i.style.strokeDashoffset="0",i.style.filter="drop-shadow(0 0 2px rgba(0, 0, 0, 0.3))"}),t.setAttribute("data-hotspot-revealed","true"),this.revealedHotspots.add(e.id),this.activeHotspots.add(e.id),this.temporalEchoController&&this.temporalEchoController.activeEchoes.add(e.id),console.log("[BorderRadial] Principal zone revealed instantly:",e.id)}prepareHotspotsForMaskHidden(e){e.forEach(t=>{const o=t.hotspot||t,i=this.findHotspotElement(o.id);i&&(i.classList.add("hotspot-hidden"),i.classList.remove("hotspot-visible"),i.querySelectorAll("path, polygon, polyline").forEach(n=>{n.style.stroke=this.config.borderColor,n.style.strokeWidth=`${this.config.borderWidth}px`,n.style.fill="none",n.style.opacity="0",n.style.visibility="hidden"}),this.revealedHotspots.add(o.id),this.activeHotspots.add(o.id))})}prepareHotspotsForMask(e){e.forEach(t=>{const o=t.hotspot||t,i=this.findHotspotElement(o.id);i&&(i.classList.remove("hotspot-hidden"),i.classList.add("hotspot-visible","border-radial-hotspot"),i.querySelectorAll("path, polygon, polyline").forEach(n=>{n.style.stroke=this.config.borderColor,n.style.strokeWidth=`${this.config.borderWidth}px`,n.style.fill="none",n.style.opacity="1",n.style.visibility="visible"}),i.setAttribute("data-hotspot-revealed","true"),this.revealedHotspots.add(o.id),this.activeHotspots.add(o.id),this.temporalEchoController&&this.temporalEchoController.activeEchoes.add(o.id))})}startRadialWave(e,t,o){const i={id:`wave-${Date.now()}`,principalZone:e,tapPoint:{x:t.x,y:t.y},startTime:performance.now(),radius:0,revealedZones:new Set([e.id]),pendingZones:new Map};this.precalculateWaveDistances(i,o),this.animations.set(i.id,i),this.isAnimating||(this.isAnimating=!0,this.requestFrame());const s=this.config.revealDuration+this.config.fadeOutDuration;setTimeout(()=>{this.fadeOutAndCleanup()},s)}precalculateWaveDistances(e,t){const o=e.principalZone,i=this.findHotspotElement(o.id);if(!i)return;const s=i.getBoundingClientRect();t.forEach(n=>{const a=n.hotspot||n;if(a.id===o.id)return;const r=this.findHotspotElement(a.id);if(!r)return;const l=r.getBoundingClientRect(),c=this.calculateBorderToBorderDistance(s,l),h=c/this.config.waveSpeed*1e3,d=Array.from(t).findIndex(y=>(y.hotspot||y).id===a.id),u=Math.max(0,d-1)*100,v=Math.max(h,u);e.pendingZones.set(a.id,{zone:a,element:r,bbox:l,distance:c,revealTime:v}),console.log(`[BorderRadial] Zone ${a.id} will reveal at ${v.toFixed(0)}ms (distance: ${c.toFixed(0)}px)`)})}calculateBorderToBorderDistance(e,t){const o={x:e.left+e.width/2,y:e.top+e.height/2},i={x:t.left+t.width/2,y:t.top+t.height/2},s=Math.sqrt(Math.pow(i.x-o.x,2)+Math.pow(i.y-o.y,2));return console.log(`[BorderRadial] Distance calculation: center1=(${o.x.toFixed(0)},${o.y.toFixed(0)}), center2=(${i.x.toFixed(0)},${i.y.toFixed(0)}), distance=${s.toFixed(0)}px`),s}requestFrame(){this.animationFrameId&&cancelAnimationFrame(this.animationFrameId),this.animationFrameId=requestAnimationFrame(e=>{this.renderFrame(e)})}renderFrame(e){this.updateFPS(e);const t=[];for(const[o,i]of this.animations){const s=e-i.startTime;i.radius=s/1e3*this.config.waveSpeed;for(const[a,r]of i.pendingZones)s>=r.revealTime&&!i.revealedZones.has(a)&&(this.revealSecondaryZone(r,i),i.revealedZones.add(a));const n=Math.max(...Array.from(i.pendingZones.values()).map(a=>a.revealTime));s>=n+this.config.secondaryRevealDuration&&t.push(o)}for(const o of t)this.animations.delete(o);this.animations.size>0?this.requestFrame():(this.isAnimating=!1,console.log("[BorderRadial] Wave animation complete"))}revealSecondaryZone(e,t){const o=e.element;if(!o)return;console.log("[BorderRadial] Revealing secondary zone:",e.zone.id),o.classList.remove("hotspot-hidden"),o.classList.add("hotspot-visible"),o.classList.add("border-radial-hotspot","border-radial-secondary");const i=this.findHotspotElement(t.principalZone.id);let s={x:0,y:0};if(i){const a=i.querySelector("path, polygon, polyline");if(a){const r=a.getBoundingClientRect(),l=o.querySelector("path, polygon, polyline"),c=l?l.getBoundingClientRect():o.getBoundingClientRect();s={x:r.left+r.width/2-c.left,y:r.top+r.height/2-c.top}}else{const r=i.getBoundingClientRect();s={x:r.left+r.width/2,y:r.top+r.height/2}}}o.querySelectorAll("path, polygon, polyline").forEach(a=>{a.style.stroke=this.config.borderColor,a.style.strokeWidth=`${this.config.borderWidth}px`,a.style.fill="none",a.style.opacity="1",a.style.visibility="visible",a.setAttribute("stroke",this.config.borderColor),a.setAttribute("stroke-width",this.config.borderWidth),a.setAttribute("fill","none"),a.getBoundingClientRect(),console.log("[BorderRadial] Applying bidirectional stroke reveal to path:",a.tagName),this.applyBidirectionalStrokeReveal(a,s,this.config.secondaryRevealDuration)}),o.setAttribute("data-hotspot-revealed","true"),this.revealedHotspots.add(e.zone.id),this.activeHotspots.add(e.zone.id),this.temporalEchoController&&this.temporalEchoController.activeEchoes.add(e.zone.id)}calculateRevealDirection(e,t,o){const i=this.findHotspotElement(e.id);if(!i)return"right";const s=i.getBoundingClientRect(),n={x:s.left+s.width/2,y:s.top+s.height/2},a={x:o.left+o.width/2,y:o.top+o.height/2},r=Math.atan2(a.y-n.y,a.x-n.x)*180/Math.PI;return r>=-45&&r<45?"right":r>=45&&r<135?"bottom":r>=-135&&r<-45?"top":"left"}applyBidirectionalStrokeReveal(e,t,o){console.log("[BorderRadial] Starting bidirectional reveal for path, principal center:",t),this.applyProgressiveStrokeReveal(e,t,o)}applyProgressiveStrokeReveal(e,t,o){let i=100;try{e.getTotalLength?i=e.getTotalLength():(e.tagName==="polygon"||e.tagName==="polyline")&&(i=this.estimatePathLength(e))}catch(s){console.warn("[BorderRadial] Could not calculate path length:",s)}console.log("[BorderRadial] Path total length:",i),e.style.strokeDasharray=`0 ${i*2}`,e.style.strokeDashoffset="0",e.style.strokeLinecap="round",e.style.strokeLinejoin="round",e.getBoundingClientRect(),e.style.transform="translateZ(0)",e.style.willChange="stroke-dasharray",setTimeout(()=>{const s=performance.now();let n=-1;const a=r=>{const l=r-s,c=Math.min(l/o,1),h=c*c*(3-2*c),d=i*h,m=i*2;e.style.strokeDasharray=`${d} ${m}`;const u=Math.floor(c*10);u!==n&&u!==Math.floor((c-.1)*10)&&(n=u,console.log(`[BorderRadial] Drawing progress: ${(c*100).toFixed(0)}%, visible: ${d.toFixed(0)}/${i.toFixed(0)}px`)),c<1?requestAnimationFrame(a):(e.style.strokeDasharray="none",e.style.strokeDashoffset="0",e.style.willChange="auto",console.log("[BorderRadial] Progressive stroke reveal complete"))};requestAnimationFrame(a)},100)}configureBidirectionalPaths(e,t,o,i){const s=this.platform.isIOSSafari;s?(e.style.strokeDasharray=`0 ${o}`,e.style.strokeDashoffset=`${-i}`,t.style.strokeDasharray=`0 ${o}`,t.style.strokeDashoffset=`${o-i}`):(e.style.strokeDasharray=`${o}`,e.style.strokeDashoffset=`${i}`,t.style.strokeDasharray=`${o}`,t.style.strokeDashoffset=`${i-o}`),e.style.stroke="rgba(0, 0, 0, 0.8)",e.style.strokeWidth="2px",e.style.fill="none",e.style.opacity="1",t.style.stroke="rgba(0, 0, 0, 0.8)",t.style.strokeWidth="2px",t.style.fill="none",t.style.opacity="1",e.style.transform="translateZ(0)",t.style.transform="translateZ(0)",e.style.willChange="stroke-dasharray, stroke-dashoffset",t.style.willChange="stroke-dasharray, stroke-dashoffset",s&&(e.style.webkitTransform="translate3d(0, 0, 0)",t.style.webkitTransform="translate3d(0, 0, 0)",e.style.webkitBackfaceVisibility="hidden",t.style.webkitBackfaceVisibility="hidden")}animateBidirectionalPaths(e,t,o,i,s){const n=performance.now(),a=this.platform.isIOSSafari;console.log("[BorderRadial] Starting animation, iOS Safari:",a);const r=l=>{const c=l-n,h=Math.min(c/i,1),d=this.easeOutCubic(h);if(a){const m=o/2*d,u=o-m;e.style.strokeDasharray=`${m} ${u}`,t.style.strokeDasharray=`${m} ${u}`,Math.floor(h*10)!==Math.floor((h-.1)*10)&&console.log(`[BorderRadial] Animation progress: ${(h*100).toFixed(0)}%, visible: ${m.toFixed(0)}px`)}else{const m=o*(1-d)/2;e.style.strokeDashoffset=m,t.style.strokeDashoffset=-m}h>=.98&&this.handleJunctionPoint(e,t),h<1?requestAnimationFrame(r):(e.style.willChange="auto",t.style.willChange="auto",s&&s())};requestAnimationFrame(r)}handleJunctionPoint(e,t){e.style.strokeLinecap="round",t.style.strokeLinecap="round",e.style.strokeLinejoin="round",t.style.strokeLinejoin="round";const o=.5,i=e.style.strokeDasharray,s=t.style.strokeDasharray;if(i&&s){const n=i.split(" ").map(r=>parseFloat(r)),a=s.split(" ").map(r=>parseFloat(r));n[0]&&a[0]&&(n[0]+=o,a[0]+=o,e.style.strokeDasharray=`${n[0]} ${n[1]||0}`,t.style.strokeDasharray=`${a[0]} ${a[1]||0}`)}}easeOutCubic(e){return 1-Math.pow(1-e,3)}applySimpleStrokeReveal(e,t){let o=100;try{e.getTotalLength?o=e.getTotalLength():(e.tagName==="polygon"||e.tagName==="polyline")&&(o=this.estimatePathLength(e))}catch(n){console.warn("[BorderRadial] Could not calculate path length:",n)}e.style.strokeDasharray=`0 ${o}`,e.style.transform="translateZ(0)",e.style.willChange="stroke-dasharray";const i=performance.now(),s=n=>{const a=n-i,r=Math.min(a/t,1),l=this.easeOutCubic(r),c=o*l,h=o-c;e.style.strokeDasharray=`${c} ${h}`,r<1?requestAnimationFrame(s):(e.style.strokeDasharray="none",e.style.willChange="auto")};requestAnimationFrame(s)}estimatePathLength(e){const t=e.getAttribute("points");if(!t)return 100;const o=t.trim().split(/\s+/).map(s=>{const n=s.split(",").map(Number);return{x:n[0]||0,y:n[1]||0}});if(o.length<2)return 100;let i=0;for(let s=0;s<o.length;s++){const n=(s+1)%o.length,a=o[n].x-o[s].x,r=o[n].y-o[s].y;i+=Math.sqrt(a*a+r*r)}return i||100}updateFPS(e){if(this.frameCount++,this.frameCount%30===0){const t=e-this.lastFrameTime;this.currentFPS=(3e4/t).toFixed(1),this.lastFrameTime=e,this.currentFPS<20&&this.qualityLevel!=="low"?this.setQualityLevel("low"):this.currentFPS<40&&this.qualityLevel==="high"?this.setQualityLevel("medium"):this.currentFPS>50&&this.qualityLevel!=="high"&&this.setQualityLevel("high")}}setQualityLevel(e){switch(this.qualityLevel=e,console.log("[BorderRadial] Quality level set to:",e),e){case"high":this.config.maxConcurrentAnimations=50;break;case"medium":this.config.maxConcurrentAnimations=30;break;case"low":this.config.maxConcurrentAnimations=15;break}}findHotspotElement(e){if(this.stateManager){const o=this.stateManager.getOverlay(e);if(o&&o.element)return o.element}const t=document.querySelectorAll(".openseadragon-svg-overlay, .hotspot-overlay-svg, svg");for(const o of t){const i=o.querySelector(`[data-hotspot-id="${e}"]`);if(i)return i}return document.getElementById(`hotspot-${e}`)||document.querySelector(`g[data-hotspot-id="${e}"]`)}fadeOutAndCleanup(){!this.isAnimating&&this.activeHotspots.size===0||(console.log("[BorderRadial] Starting fade out"),this.activeHotspots.forEach(e=>{const t=this.findHotspotElement(e);t&&(t.style.setProperty("--fade-duration",`${this.config.fadeOutDuration}ms`),t.classList.add("border-radial-fading"))}),setTimeout(()=>{this.cleanup()},this.config.fadeOutDuration))}cleanup(){console.log("[BorderRadial] Cleaning up"),this.cleanupTimeout&&(clearTimeout(this.cleanupTimeout),this.cleanupTimeout=null),this.waveAnimator&&this.waveAnimator.cleanup(),this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null),this.activeHotspots.forEach(e=>{const t=this.findHotspotElement(e);t&&(t.classList.remove("border-radial-hotspot","border-radial-principal","border-radial-secondary","border-radial-revealing","border-radial-fading","reveal-from-left","reveal-from-right","reveal-from-top","reveal-from-bottom"),t.style.removeProperty("--reveal-duration"),t.style.removeProperty("--reveal-delay"),t.style.removeProperty("--fade-duration"),t.removeAttribute("data-hotspot-revealed"))}),this.animations.clear(),this.revealedHotspots.clear(),this.activeHotspots.clear(),this.isAnimating=!1,this.distanceCache.size>1e3&&this.distanceCache.clear(),this.bboxCache.size>500&&this.bboxCache.clear(),this.transformCache.size>500&&this.transformCache.clear()}destroy(){this.cleanup(),this.waveAnimator&&(this.waveAnimator.destroy(),this.waveAnimator=null);const e=document.getElementById("border-radial-styles");e&&e.remove()}}class ce{constructor(e={}){this.viewer=e.viewer,this.eventCoordinator=e.eventCoordinator,this.hotspotRenderer=e.hotspotRenderer,this.stateManager=e.stateManager,this.spatialIndex=e.spatialIndex,this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window;const t="focus",o=["focus","ripple","wave","single","border-radial"],i=localStorage.getItem("revealType");let s=t;i&&o.includes(i)?i==="single"?(s="focus",localStorage.setItem("revealType","focus")):i==="border-radial"||i==="wave"?(s="ripple",localStorage.setItem("revealType","ripple")):s=i:i&&(console.warn(`[TemporalEchoController] Invalid revealType in localStorage: "${i}". Using default: ${t}`),localStorage.removeItem("revealType")),this.config={echoRadius:e.echoRadius||250,echoDelay:e.echoDelay||0,echoDuration:e.echoDuration||800,maxSimultaneous:e.maxSimultaneous||20,staggerDelay:e.staggerDelay||12,revealDuration:e.revealDuration||2e3,enabled:e.enabled!==!1,mobileMaxHotspots:e.mobileMaxHotspots||15,useAquaticEffect:!1,useCanvasAnimation:!1,useAdjacentSelection:!1,adjacencyThreshold:e.adjacencyThreshold||50,revealType:s},this.activeEchoes=new Set,this.echoAnimations=new Map,this.activeTimeouts=new Set,this.hotspotCleanupTimeouts=new Map,this.safetyCleanupInterval=null,this.startSafetyCleanup(),this.fullResetInterval=null,this.startPeriodicReset(),this.spatialIndexReady=!1,this.canvasRenderer=null,this.isRevealing=!1,this.batchDOMManager=null,this.useBatchDOM=e.useBatchDOM!==!1,this.hitDetector=null,this.useCanvasHitDetection=e.useCanvasHitDetection!==!1,this.initializeGestureAdapter(),this.initializeRippleRenderer(),this.initializeCanvasRenderer(),this.initializeBatchDOMManager(),this.initializeHitDetector(),this.isMobile&&B.initialize(),this.initializeContrastDetection(),this.borderRadialAnimator=new re(this.viewer,this.stateManager,this),console.log("[TemporalEchoController] BorderRadialAnimator initialized for ripple mode"),this.frameCount=0,this.lastFPSCheck=performance.now(),this.currentFPS=60,console.log("[TemporalEchoController] Initialized",this.config),window.temporalEchoController=this,window.debugRevealHotspot=n=>{const r={hotspot:{id:n},centerX:100,centerY:100};this.revealSingleHotspot(r,{},0)},window.debugShowAllHotspots=()=>{const n=document.querySelectorAll("[data-hotspot-id]");console.log(`[Debug] Found ${n.length} hotspot elements`),n.forEach((a,r)=>{r<5&&console.log(`[Debug] Hotspot ${r}:`,{id:a.getAttribute("data-hotspot-id"),tagName:a.tagName,className:a.className,opacity:window.getComputedStyle(a).opacity,visibility:window.getComputedStyle(a).visibility,display:window.getComputedStyle(a).display})})}}setRevealType(e){this.config.revealType=e,localStorage.setItem("revealType",e),console.log("[TemporalEchoController] Reveal type set to:",e)}scheduleHotspotCleanup(e,t=null){const o=t||this.config.revealDuration+300;this.hotspotCleanupTimeouts.has(e)&&(clearTimeout(this.hotspotCleanupTimeouts.get(e)),console.log(`[TemporalEcho] Rescheduling cleanup for hotspot ${e}`));const i=setTimeout(()=>{console.log(`[TemporalEcho] Cleaning up hotspot: ${e}`);const s=this.stateManager.getOverlay(e);s&&s.element&&(s.element.removeAttribute("data-hotspot-revealed"),s.element.removeAttribute("data-reveal-time"),s.element.classList.remove("hotspot-echo-active","hotspot-echo-reveal"),console.log(`[TemporalEcho] Cleaned revealed state from overlay element for ${e}`)),document.querySelectorAll(`[data-hotspot-id="${e}"]`).forEach(l=>{l.getAttribute("data-hotspot-revealed")==="true"&&(l.removeAttribute("data-hotspot-revealed"),l.removeAttribute("data-reveal-time"),l.classList.remove("hotspot-echo-active","hotspot-echo-reveal"),console.log(`[TemporalEcho] Cleaned revealed state from DOM element for ${e}`))}),document.querySelectorAll(`g[data-hotspot-id="${e}"]`).forEach(l=>{l.getAttribute("data-hotspot-revealed")==="true"&&(l.removeAttribute("data-hotspot-revealed"),l.removeAttribute("data-reveal-time"),l.classList.remove("hotspot-echo-active","hotspot-echo-reveal"),console.log(`[TemporalEcho] Cleaned revealed state from g element for ${e}`))}),this.activeEchoes.delete(e),this.echoAnimations.delete(e);const r=this.echoAnimations.get(e);if(r){const l=this.stateManager.getSelectedHotspot();(!l||l.id!==e)&&r.element&&(r.originalOpacity!==void 0&&(r.element.style.opacity=r.originalOpacity),r.originalVisibility!==void 0&&(r.element.style.visibility=r.originalVisibility),r.wasHidden&&r.element.classList.add("hotspot-hidden"),r.wasVisible||r.element.classList.remove("hotspot-visible")),this.echoAnimations.delete(e)}this.hotspotCleanupTimeouts.delete(e)},o);this.hotspotCleanupTimeouts.set(e,i)}initializeGestureAdapter(){this.gestureAdapter=new U({eventCoordinator:this.eventCoordinator,viewer:this.viewer,onQuickTap:this.handleQuickTap.bind(this)}),this.config.enabled&&this.gestureAdapter.enable()}initializeRippleRenderer(){this.rippleRenderer=new Q({viewer:this.viewer,radius:this.config.echoRadius,duration:this.config.echoDuration,maxRipples:3,onRippleComplete:this.handleRippleComplete.bind(this)}),this.config.enabled&&this.rippleRenderer.initialize(),window.cssRippleRenderer=this.rippleRenderer}initializeCanvasRenderer(){if(!this.config.useCanvasAnimation||!this.isMobile){console.log("[TemporalEchoController] Canvas animation disabled or not mobile");return}this.canvasRenderer=new _({viewer:this.viewer,container:this.viewer.container}),window.temporalEchoController=this,console.log("[TemporalEchoController] Canvas renderer initialized for hybrid animations")}initializeContrastDetection(){this.contrastDetection=new te(this.viewer),window.contrastDetection=this.contrastDetection}initializeBatchDOMManager(){if(!this.useBatchDOM||!this.isMobile){console.log("[TemporalEchoController] Batch DOM disabled or not mobile");return}this.batchDOMManager=new ee,window.batchDOMManager=this.batchDOMManager,console.log("[TemporalEchoController] BatchDOMManager initialized for Phase 3 optimization")}initializeHitDetector(){if(!this.useCanvasHitDetection||!this.isMobile){console.log("[TemporalEchoController] Canvas hit detection disabled or not mobile");return}this.hitDetector=new J({viewer:this.viewer,spatialIndex:this.spatialIndex,enabled:!0}),window.hitDetector=this.hitDetector,console.log("[TemporalEchoController] CanvasHitDetector initialized for Phase 4 optimization")}handleQuickTap(e){var c,h,d;if(console.log("[TemporalEchoController] handleQuickTap called, enabled:",this.config.enabled),this.revealCount||(this.revealCount=0),this.revealCount++,console.log(`[TemporalEchoController] Reveal #${this.revealCount} starting`),!this.config.enabled)return console.log("[TemporalEchoController] Echo disabled, skipping"),!1;if(!this.isMobile)return console.log("[TemporalEchoController] Not on mobile, skipping echo"),!1;this.cleanupExpiredRevealedStates();const t=this.viewer.element.getBoundingClientRect(),o=new k.Point(e.x-t.left,e.y-t.top),i=this.viewer.viewport.pointFromPixel(o),s=this.viewer.viewport.viewportToImageCoordinates(i),n=window.nativeHotspotRenderer&&window.nativeHotspotRenderer.engine.findSmallestHotspotAtPoint(s);let a=null;if(!n&&this.isMobile){const m=this.findHotspotsInRadius(e,50);for(const u of m)if(this.isHotspotRevealed(u.hotspot.id||u.id)){a=u.hotspot||u,console.log("[TemporalEchoController] Found revealed hotspot nearby:",a.id);break}}const r=n||a;if(r){const m=this.isHotspotRevealed(r.id);if(console.log("[TemporalEchoController] Hotspot detection:",{hotspotId:r.id,isRevealed:m,activeEchoes:Array.from(this.activeEchoes),animationExists:this.echoAnimations.has(r.id),domRevealed:(c=this.getHotspotElement(r.id))==null?void 0:c.getAttribute("data-hotspot-revealed")}),m)return console.log("[TemporalEchoController] Tapped on/near revealed hotspot, triggering zoom (TEMPO 2):",r.id),window.multimodalSyncEngine?window.multimodalSyncEngine.triggerSynchronizedFeedback({...e,type:"activate"}).then(u=>{console.log("[TemporalEchoController] Tempo 2 feedback triggered:",u)}):(h=window.minimalistAudioEngine)!=null&&h.isUnlocked&&window.minimalistAudioEngine.playActivate(),window.nativeHotspotRenderer&&(console.log("[TemporalEchoController] Directly activating revealed hotspot for zoom"),setTimeout(()=>{window.nativeHotspotRenderer.activateHotspot(r,!0)},50)),!1}console.log("[TemporalEchoController] Quick tap detected on mobile, triggering echo (TEMPO 1)",e),window.multimodalSyncEngine?window.multimodalSyncEngine.triggerSynchronizedFeedback({...e,type:"reveal"}).then(m=>{console.log("[TemporalEchoController] Synchronized feedback triggered:",m)}):(d=window.minimalistAudioEngine)!=null&&d.isUnlocked&&(window.minimalistAudioEngine.playReveal(),console.log("[TemporalEchoController] Fallback: Played reveal sound immediately")),this.eventCoordinator.emit(this.eventCoordinator.eventTypes.ECHO_TAP,{x:e.x,y:e.y,viewportX:e.viewportX,viewportY:e.viewportY});let l=this.findHotspotsInRadius(e,this.config.echoRadius);if(this.config.revealType==="focus"&&l.length>0?(l.sort((m,u)=>m.distance-u.distance),l=[l[0]],console.log("[TemporalEchoController] Focus mode: revealing only closest hotspot:",l[0].id)):this.config.revealType==="ripple"&&l.length>0&&console.log("[TemporalEchoController] Ripple mode: revealing",l.length,"hotspots with wave propagation"),this.canvasRenderer&&this.config.useCanvasAnimation&&l.length>0){console.log(`[TemporalEchoController] Using Canvas renderer for ${l.length} hotspots`),this.isRevealing=!0;const m={x:s.x,y:s.y};this.canvasRenderer.startRevealAnimation(l,m),setTimeout(()=>{this.revealHotspotsSVG(l,e),setTimeout(()=>{this.isRevealing=!1,window.nativeHotspotRenderer&&window.nativeHotspotRenderer.updateVisibility()},400)},600)}else this.config.revealType==="ripple"&&l.length>0?(console.log("[TemporalEchoController] Ripple mode: Using BorderRadialAnimator"),this.revealHotspots(l,e)):l.length>0?(console.log(`[TemporalEchoController] Found ${l.length} hotspots in radius (focus mode)`),this.revealHotspots(l,e)):console.log("[TemporalEchoController] No hotspots found in echo radius");return this.updateFPS(),!0}buildSpatialIndex(){if(!this.spatialIndex){console.warn("[TemporalEchoController] SpatialIndex not provided, skipping build");return}console.log("[TemporalEchoController] Building Flatbush spatial index for hotspots");const e=performance.now(),t=this.stateManager.getAllOverlays(),o=[];t.forEach((s,n)=>{const a=s.hotspot;!a||!a.coordinates||a.coordinates.length===0||o.push({id:n,shape:a.shape,coordinates:a.coordinates,hotspot:a,overlayData:s})}),this.spatialIndex.loadHotspots(o),this.spatialIndexReady=!0;const i=performance.now()-e;console.log(`[TemporalEchoController] Flatbush index built with ${o.length} hotspots in ${i.toFixed(2)}ms`)}findHotspotsInRadius(e,t){const o=this.config.revealType==="ripple";if(this.hitDetector&&this.useCanvasHitDetection&&this.isMobile&&!this.config.useAdjacentSelection&&!o){const i=this.canvasHitSearch(e,t);if(i&&i.length>0)return console.log("[TemporalEchoController] Using Canvas hit detection (Phase 4)"),i}return this.spatialIndexReady&&this.spatialIndex?this.spatialIndexSearch(e,t,this.config.useAdjacentSelection):!this.spatialIndexReady&&this.spatialIndex&&(this.buildSpatialIndex(),this.spatialIndexReady)?this.spatialIndexSearch(e,t,this.config.useAdjacentSelection):this.linearHotspotSearch(e,t)}canvasHitSearch(e,t){const o=performance.now(),i=this.viewer.element.getBoundingClientRect(),s=new k.Point(e.x-i.left,e.y-i.top),n=this.viewer.viewport.pointFromPixel(s),a=this.viewer.viewport.viewportToImageCoordinates(n),r=this.viewer.viewport.getBounds(),l=this.viewer.viewport.viewportToImageCoordinates(r.x,r.y),c=this.viewer.viewport.viewportToImageCoordinates(r.x+r.width,r.y+r.height),h={minX:l.x,minY:l.y,maxX:c.x,maxY:c.y},d=this.viewer.viewport.getZoom(),m=this.viewer.viewport.getContainerSize().x,v=this.viewer.world.getItemAt(0).getContentSize().x/m/d,y=t*v;console.log("[TemporalEchoController] Canvas hit - Radius conversion:",{radiusInPixels:t,radiusInImageSpace:y,tapImagePoint:{x:a.x,y:a.y}});const C=this.isMobile?this.config.mobileMaxHotspots:this.config.maxSimultaneous,E=this.hitDetector.findNearbyHits(a.x,a.y,y,h,C),A=[];for(const p of E){const f=this.spatialIndex.getHotspotById(p);if(f){const T=f.center.x-a.x,g=f.center.y-a.y,x=Math.sqrt(T*T+g*g);A.push({id:f.id,distance:x,hotspot:f.hotspot||f})}}const w=performance.now()-o;return w>2?console.warn(`[TemporalEchoController] Canvas hit search exceeded 2ms: ${w.toFixed(2)}ms`):console.log(`[TemporalEchoController] Ultra-fast Canvas hit: ${w.toFixed(2)}ms for ${A.length} hotspots`),A}spatialIndexSearch(e,t,o=!0){const i=performance.now();if(this.config.revealType==="ripple")return console.log(`[TemporalEchoController] Using contiguous clustering for ${this.config.revealType} mode`),this.findContiguousClusters(e,t);const s=this.viewer.element.getBoundingClientRect(),n=new k.Point(e.x-s.left,e.y-s.top),a=this.viewer.viewport.pointFromPixel(n),r=this.viewer.viewport.viewportToImageCoordinates(a),l=this.isMobile?this.config.mobileMaxHotspots:this.config.maxSimultaneous;let c;if(o&&this.spatialIndex.findAdjacentHotspots){console.log("[TemporalEchoController] Using adjacent hotspot selection for contiguous group");const u=50,v=new k.Point(n.x+u,n.y),y=this.viewer.viewport.pointFromPixel(v),C=this.viewer.viewport.viewportToImageCoordinates(y),E=Math.abs(C.x-r.x);c=this.spatialIndex.findAdjacentHotspots(r.x,r.y,l,E)}else{console.log("[TemporalEchoController] Using distance-based hotspot selection");const u=n,v=new k.Point(n.x+t,n.y),y=this.viewer.viewport.pointFromPixel(u),C=this.viewer.viewport.pointFromPixel(v),E=this.viewer.viewport.viewportToImageCoordinates(y),A=this.viewer.viewport.viewportToImageCoordinates(C),w=Math.abs(A.x-E.x);c=this.spatialIndex.findNearbyHotspots(r.x,r.y,w,l)}const h=c.map(u=>({id:u.id,distance:Math.sqrt(Math.pow(u.center.x-r.x,2)+Math.pow(u.center.y-r.y,2)),hotspot:u.hotspot||u})),d=performance.now()-i,m=o?"adjacent":"distance";return d>5?console.warn(`[TemporalEchoController] Slow ${m} search: ${d.toFixed(2)}ms for ${h.length} hotspots`):console.log(`[TemporalEchoController] Fast ${m} search: ${d.toFixed(2)}ms for ${h.length} hotspots`),h}findContiguousClusters(e,t){const o=performance.now(),i=this.viewer.element.getBoundingClientRect(),s=new k.Point(e.x-i.left,e.y-i.top),n=this.viewer.viewport.pointFromPixel(s),a=this.viewer.viewport.viewportToImageCoordinates(n),r=this.findSeedHotspot(a,t);if(!r)return console.log("[ContiguousCluster] No seed hotspot found"),[];if(this.config.revealType==="ripple"){console.log("[Ripple] Finding only direct neighbors of principal hotspot:",r.id);const m=this.findDirectNeighborsOnly(r),u=performance.now()-o;return console.log(`[Ripple] Found ${m.length} direct neighbors in ${u.toFixed(2)}ms`),[r,...m].map(y=>({id:y.id,distance:y.distance||0,hotspot:y.hotspot||y}))}let l;this.config.revealType==="refined"?l=5:this.config.revealType==="refined2"?l=this.isMobile?10:15:l=this.isMobile?15:20;const c={maxClusterSize:l,adjacencyThreshold:50,coherenceThreshold:.4,timeLimit:40,expansionStrategy:"BFS"};console.log("[ContiguousCluster] Starting BFS region growing from seed:",r.id);const h=this.growContiguousRegion(r,c,o),d=performance.now()-o;return console.log(`[ContiguousCluster] Selected ${h.length} contiguous hotspots in ${d.toFixed(2)}ms`),h.map(m=>({id:m.id,distance:m.distance||0,hotspot:m.hotspot||m}))}findDirectNeighborsOnly(e){const t=[],o=new Set;o.add(e.id);const i=40,s=this.convertPixelsToImageSpace(i),n=this.findAdjacentHotspots(e,s,o),a=this.getHotspotBounds(e),r={x:(a.minX+a.maxX)/2,y:(a.minY+a.maxY)/2};if(n.forEach(l=>{const c=this.getHotspotBounds(l),h={x:(c.minX+c.maxX)/2,y:(c.minY+c.maxY)/2};l.distance=Math.sqrt(Math.pow(h.x-r.x,2)+Math.pow(h.y-r.y,2)),t.push(l),o.add(l.id)}),t.sort((l,c)=>l.distance-c.distance),console.log(`[Ripple] Found ${t.length} direct neighbors within ${i}px of principal hotspot`),t.length>0){const l=t.slice(0,5).map(h=>h.id).join(", "),c=t.length>5?` and ${t.length-5} more`:"";console.log(`[Ripple] Direct neighbors: ${l}${c}`)}return t}findSeedHotspot(e,t){const o=new k.Point(t,0),i=this.viewer.viewport.pointFromPixel(o),s=this.viewer.viewport.viewportToImageCoordinates(i),n=Math.abs(s.x);if(this.spatialIndex&&this.spatialIndex.findNearbyHotspots){const a=this.spatialIndex.findNearbyHotspots(e.x,e.y,n,1);if(a.length>0)return a[0].hotspot||a[0]}return null}growContiguousRegion(e,t,o){const i=[],s=new Set,n=[e];s.add(e.id);const a=this.convertPixelsToImageSpace(t.adjacencyThreshold);for(;n.length>0&&i.length<t.maxClusterSize;){if(performance.now()-o>t.timeLimit){console.log("[ContiguousCluster] Time limit reached, stopping expansion");break}const r=n.shift();i.push(r);const l=this.findAdjacentHotspots(r,a,s);if(i.length>3&&this.calculateClusterCoherence([...i,...l])<t.coherenceThreshold){console.log("[ContiguousCluster] Coherence threshold reached, stopping expansion");break}for(const c of l)s.has(c.id)||(s.add(c.id),n.push(c))}return i}findAdjacentHotspots(e,t,o){const i=[],s=this.getHotspotBounds(e);if(s.minX-t,s.minY-t,s.maxX+t,s.maxY+t,this.spatialIndex&&this.spatialIndex.findNearbyHotspots){const n=(s.minX+s.maxX)/2,a=(s.minY+s.maxY)/2,r=Math.max((s.maxX-s.minX)/2,(s.maxY-s.minY)/2)+t,l=this.spatialIndex.findNearbyHotspots(n,a,r,50);for(const c of l){const h=c.hotspot||c;o.has(h.id)||h.id===e.id||this.testAdjacency(e,h,t)&&i.push(h)}}return i}testAdjacency(e,t,o){const i=this.getHotspotBounds(e),s=this.getHotspotBounds(t),n=!(i.maxX+o<s.minX||s.maxX+o<i.minX),a=!(i.maxY+o<s.minY||s.maxY+o<i.minY);return!n||!a?!1:this.calculateMinDistance(e,t)<=o}calculateMinDistance(e,t){let o=1/0;const i=e.coordinates||[],s=t.coordinates||[];for(let n=0;n<i.length;n++)for(let a=0;a<s.length;a++){const r=this.pointDistance(i[n],s[a]);if(o=Math.min(o,r),o<.1)return 0}return o}pointDistance(e,t){const o=e[0]-t[0],i=e[1]-t[1];return Math.sqrt(o*o+i*i)}getHotspotBounds(e){const t=e.coordinates||[];let o=1/0,i=-1/0,s=1/0,n=-1/0;for(const a of t)o=Math.min(o,a[0]),i=Math.max(i,a[0]),s=Math.min(s,a[1]),n=Math.max(n,a[1]);return{minX:o,maxX:i,minY:s,maxY:n}}calculateClusterCoherence(e){if(e.length===0)return 0;let t=1/0,o=-1/0,i=1/0,s=-1/0,n=0;for(const r of e){const l=this.getHotspotBounds(r);t=Math.min(t,l.minX),o=Math.max(o,l.maxX),i=Math.min(i,l.minY),s=Math.max(s,l.maxY);const c=(l.maxX-l.minX)*(l.maxY-l.minY);n+=c}const a=(o-t)*(s-i);return a>0?n/a:0}convertPixelsToImageSpace(e){const t=new k.Point(e,0),o=this.viewer.viewport.pointFromPixel(t),i=this.viewer.viewport.viewportToImageCoordinates(o);return Math.abs(i.x)}findIntelligentHotspots(e,t){const o=performance.now(),i=this.viewer.element.getBoundingClientRect(),s=new k.Point(e.x-i.left,e.y-i.top),n=this.viewer.viewport.pointFromPixel(s),a=this.viewer.viewport.viewportToImageCoordinates(n),r=new k.Point(s.x+t,s.y),l=this.viewer.viewport.pointFromPixel(r),c=this.viewer.viewport.viewportToImageCoordinates(l),h=Math.abs(c.x-a.x),d=this.isMobile?this.config.mobileMaxHotspots:this.config.maxSimultaneous;let m=[];if(this.spatialIndex&&this.spatialIndex.findNearbyHotspots&&(m=this.spatialIndex.findNearbyHotspots(a.x,a.y,h,d*2)),m.length===0)return console.log("[IntelligentSelection] No hotspots found in radius"),[];console.log(`[IntelligentSelection] Found ${m.length} candidates, applying intelligence...`);const u=m.map(p=>{var q,X;const f=p.hotspot||p;let T=0,g=0;if(f.coordinates&&f.coordinates.length>0){const O=f.shape==="multipolygon"?f.coordinates[0]:f.coordinates;O.forEach(([L,z])=>{T+=L,g+=z}),T/=O.length,g/=O.length}else T=((q=f.center)==null?void 0:q.x)||0,g=((X=f.center)==null?void 0:X.y)||0;const x=Math.sqrt(Math.pow(T-a.x,2)+Math.pow(g-a.y,2));let S=1/0,R=-1/0,D=1/0,$=-1/0;f.coordinates&&(f.shape==="multipolygon"?f.coordinates[0]:f.coordinates).forEach(([L,z])=>{S=Math.min(S,L),R=Math.max(R,L),D=Math.min(D,z),$=Math.max($,z)});const H=R-S,F=$-D,N=H/(F||1);return{hotspot:f,distance:x,centerX:T,centerY:g,minX:S,maxX:R,minY:D,maxY:$,width:H,height:F,aspectRatio:N,isHorizontal:N>2,isVertical:N<.5,area:H*F}});let v=!0;const y=30;for(const p of u)if(p.distance<y){v=!1;break}console.log(`[IntelligentSelection] Tap is in ${v?"empty area (animal)":"text area"}`);const C=u.map(p=>{let f=0;const T=Math.max(0,1-p.distance/h);f+=T*.3,v&&((p.aspectRatio>5||p.aspectRatio<.2||p.height<100||p.width<100)&&(f+=.35),p.isVertical&&(f+=.15)),p.isHorizontal&&!v&&(f+=.25);const g=v?2e4:5e4,x=Math.abs(p.area-g)/g,S=Math.max(0,1-x);f+=S*.15;let R=0;const D=v?150:100;u.forEach(H=>{H!==p&&Math.sqrt(Math.pow(p.centerX-H.centerX,2)+Math.pow(p.centerY-H.centerY,2))<D&&R++});const $=Math.min(1,R/5);return f+=$*.15,v&&(Math.atan2(p.centerY-a.y,p.centerX-a.x),f+=.1),{...p,score:f,nearbyCount:R,isEdge:p.aspectRatio>5||p.aspectRatio<.2}});C.sort((p,f)=>f.score-p.score);const E=[],A=new Set;if(v){const p=new Map;C.forEach(f=>{const T=Math.atan2(f.centerY-a.y,f.centerX-a.x),g=Math.floor((T+Math.PI)/(Math.PI/4));p.has(g)||p.set(g,[]),p.get(g).push(f)}),p.forEach((f,T)=>{if(E.length>=d)return;f.sort((x,S)=>S.score-x.score);const g=Math.min(2,Math.ceil(d/8));for(let x=0;x<g&&x<f.length&&!(E.length>=d);x++){const S=f[x];A.has(S.hotspot.id)||(E.push(S),A.add(S.hotspot.id))}})}else for(const p of C){if(E.length>=d)break;if(!A.has(p.hotspot.id)&&(E.push(p),A.add(p.hotspot.id),p.nearbyCount>0&&E.length<d-2)){const T=C.filter(g=>{if(A.has(g.hotspot.id)||g===p||Math.sqrt(Math.pow(p.centerX-g.centerX,2)+Math.pow(p.centerY-g.centerY,2))>150)return!1;const S=Math.abs(p.centerY-g.centerY),R=Math.abs(p.centerX-g.centerX);return S<30&&R<300||S<100&&R<50});T.sort((g,x)=>{const S=Math.sqrt(Math.pow(p.centerX-g.centerX,2)+Math.pow(p.centerY-g.centerY,2)),R=Math.sqrt(Math.pow(p.centerX-x.centerX,2)+Math.pow(p.centerY-x.centerY,2));return S-R});for(const g of T){if(E.length>=d)break;E.push(g),A.add(g.hotspot.id)}}}const w=performance.now()-o;return console.log(`[IntelligentSelection] Selected ${E.length} hotspots in ${w.toFixed(2)}ms`),E.map(p=>({id:p.hotspot.id,distance:p.distance,hotspot:p.hotspot,score:p.score}))}linearHotspotSearch(e,t){const o=[],i=this.viewer.element.getBoundingClientRect(),s=new k.Point(e.x-i.left,e.y-i.top),n=this.viewer.viewport.pointFromPixel(s),a=this.viewer.viewport.viewportToImageCoordinates(n);console.log("[TemporalEchoController] Searching for hotspots at:",{pixelCoords:{x:e.x,y:e.y},viewportCoords:{x:n.x,y:n.y},imageCoords:{x:a.x,y:a.y}});const r=this.stateManager.getAllOverlays();console.log("[TemporalEchoController] Total overlays available:",r.size);let l=0,c=0;r.forEach((d,m)=>{const u=d.hotspot;if(!u||!u.coordinates||u.coordinates.length===0)return;if(this.activeEchoes.has(m)){c++,console.log(`[TemporalEchoController] Skipping already active hotspot: ${m}`);return}const v=d.element||this.getHotspotElement(m);if(v&&v.getAttribute("data-hotspot-revealed")==="true"){const x=parseInt(v.getAttribute("data-reveal-time")||"0");if(x)if(Date.now()-x<=2500){c++,console.log(`[TemporalEchoController] Skipping validly revealed hotspot: ${m}`);return}else console.log(`[TemporalEchoController] Cleaning expired state for: ${m}`),v.removeAttribute("data-hotspot-revealed"),v.removeAttribute("data-reveal-time");else console.log(`[TemporalEchoController] Cleaning stale state for: ${m}`),v.removeAttribute("data-hotspot-revealed")}l++;let y=0,C=0;const E=u.shape==="multipolygon"?u.coordinates[0]:u.coordinates;E.forEach(([x,S])=>{y+=x,C+=S}),y/=E.length,C/=E.length;const A=y-a.x,w=C-a.y,p=Math.sqrt(A*A+w*w),f=this.viewer.viewport.pointFromPixel(new k.Point(t,0)),T=this.viewer.viewport.viewportToImageCoordinates(f),g=Math.abs(T.x);if(l<=3&&console.log(`[TemporalEchoController] Hotspot ${m}:`,{hotspotCenter:{x:y,y:C},tapImagePoint:{x:a.x,y:a.y},distanceInImageSpace:p,radiusInImageSpace:g,inRadius:p<=g}),p<=g){const x=this.viewer.viewport.imageToViewportCoordinates(new k.Point(y,C)),S=this.viewer.viewport.pixelFromPoint(x);o.push({hotspot:u,distance:p,centerX:S.x+i.left,centerY:S.y+i.top})}}),console.log(`[TemporalEchoController] Checked ${l} hotspots, skipped ${c} already revealed, found ${o.length} in radius`),o.sort((d,m)=>d.distance-m.distance);const h=this.isMobile?this.config.mobileMaxHotspots:this.config.maxSimultaneous;return o.slice(0,h)}revealHotspots(e,t){const o=e.filter(r=>{var c;const l=((c=r.hotspot)==null?void 0:c.id)||r.id;return this.hotspotCleanupTimeouts.has(l)?(console.log(`[TemporalEcho] Skipping hotspot ${l} - cleanup in progress`),!1):!0});if(o.length===0){console.log("[TemporalEcho] No valid hotspots to reveal after filtering");return}this.eventCoordinator.emit(this.eventCoordinator.eventTypes.ECHO_REVEAL_START,{count:o.length,origin:t});const i=o,s=i.map(r=>r.hotspot.id);if(window.nativeHotspotRenderer&&window.nativeHotspotRenderer.activeHotspotManager&&(console.log("[TemporalEchoController] Preparing",s.length,"hotspots for reveal animation"),window.nativeHotspotRenderer.activeHotspotManager.forceShowHotspots(s,{maxForceShow:this.isMobile?this.config.mobileMaxHotspots:this.config.maxSimultaneous})),this.config.revealType==="ripple"&&this.borderRadialAnimator){console.log("[TemporalEchoController] RIPPLE MODE: Using BorderRadialAnimator"),i.forEach((l,c)=>{const h=l.hotspot||l,d=this.getHotspotElement(h.id);if(d){const m=d.style.opacity||"",u=d.style.visibility||"",v=d.classList.contains("hotspot-hidden"),y=d.classList.contains("hotspot-visible");this.activeEchoes.add(h.id),this.echoAnimations.set(h.id,{element:d,originalOpacity:m,originalVisibility:u,wasHidden:v,wasVisible:y,isRevealed:!0}),d.setAttribute("data-hotspot-revealed","true"),d.setAttribute("data-reveal-time",Date.now().toString()),console.log(`[RIPPLE] Marked hotspot ${h.id} as revealed (${c+1}/${i.length}`)}}),this.borderRadialAnimator.triggerBorderRadialAnimation(t,i);const r=this.config.revealDuration+300;i.forEach(l=>{const c=l.hotspot||l;this.scheduleHotspotCleanup(c.id,r)}),setTimeout(()=>{document.querySelectorAll('[data-hotspot-revealed="true"]').forEach(c=>{const h=c.getAttribute("data-hotspot-id");h&&!this.hotspotCleanupTimeouts.has(h)&&(console.log(`[RIPPLE] Found untracked revealed hotspot: ${h}, scheduling cleanup`),this.scheduleHotspotCleanup(h,r))})},100),this.cleanupTimeout&&clearTimeout(this.cleanupTimeout),this.cleanupTimeout=setTimeout(()=>{this.borderRadialAnimator&&this.borderRadialAnimator.cleanup(),this.eventCoordinator.emit(this.eventCoordinator.eventTypes.ECHO_REVEAL_END,{count:i.length}),this.cleanupTimeout=null},r);return}console.log("[TemporalEchoController] Using standard staggered animation");const n=this.config.revealType==="focus"?0:this.config.staggerDelay;i.forEach((r,l)=>{setTimeout(()=>{this.revealSingleHotspot(r,t,l)},l*n)});const a=this.config.revealDuration+300+i.length*this.config.staggerDelay;this.cleanupTimeout&&(clearTimeout(this.cleanupTimeout),console.log("[TemporalEchoController] Cancelled previous cleanup timeout")),this.cleanupTimeout=setTimeout(()=>{this.cleanupRevealedHotspots(),this.eventCoordinator.emit(this.eventCoordinator.eventTypes.ECHO_REVEAL_END,{count:i.length}),this.cleanupTimeout=null},a)}applyWillChange(e){e.dataset.willChangeApplied||(e.style.willChange="transform, opacity",e.dataset.willChangeApplied="true")}removeWillChange(e,t=100){e.dataset.willChangeApplied&&setTimeout(()=>{e.style.willChange="auto",delete e.dataset.willChangeApplied},t)}findHotspotElement(e){let t=null;const o=this.stateManager.getOverlay(e);if(o&&o.element&&(t=o.element),!t){const i=document.querySelectorAll(".openseadragon-svg-overlay, .hotspot-overlay-svg, svg");for(const s of i)if(t=s.querySelector(`[data-hotspot-id="${e}"]`),t)break}if(t||(t=document.getElementById(`hotspot-${e}`)),!t){const i=document.querySelectorAll(`g[data-hotspot-id="${e}"]`);i.length>0&&(t=i[0])}return t}revealSingleHotspot(e,t,o){var E,A;const i=e.hotspot||e;console.log("[TemporalEchoController] revealSingleHotspot called for:",i.id);let s=null;const n=this.stateManager.getOverlay(i.id);if(n&&n.element&&(s=n.element,console.log("[TemporalEchoController] Found element via state manager")),!s){const w=document.querySelectorAll(".openseadragon-svg-overlay, .hotspot-overlay-svg, svg");for(const p of w)if(s=p.querySelector(`[data-hotspot-id="${i.id}"]`),s){console.log("[TemporalEchoController] Found element in container:",p.className);break}}if(s||(s=document.getElementById(`hotspot-${i.id}`),s&&console.log("[TemporalEchoController] Found element by ID")),!s){const w=document.querySelectorAll(`g[data-hotspot-id="${i.id}"]`);w.length>0&&(s=w[0],console.log("[TemporalEchoController] Found g element with hotspot id"))}if(!s){console.warn("[TemporalEchoController] No element found for hotspot",i.id);return}const a=(E=window.nativeHotspotRenderer)==null?void 0:E.styleManager;a&&a.ensureHotspotVisibility&&a.ensureHotspotVisibility(s);const r=s.style.opacity||"",l=s.style.visibility||"",c=s.classList.contains("hotspot-hidden"),h=s.classList.contains("hotspot-visible"),d=["blackOnBlack","pigmentLinerNeutral","pigmentLinerWarm","pigmentLinerCool"],m=(A=window.nativeHotspotRenderer)==null?void 0:A.currentPalette,u=d.includes(m);if(console.log("[TemporalEchoController] Current palette:",m,"isDarkMode:",u),this.activeEchoes.has(i.id)){console.log("[TemporalEchoController] Hotspot already animating, skipping:",i.id);return}s.classList.remove("hotspot-echo-reveal","hotspot-echo-fade-out","black-mode"),s.style.animationDelay="",s.tagName.toLowerCase()==="g"&&s.querySelectorAll("path, polygon, polyline").forEach(p=>{p.style.animationDelay=""}),window.getComputedStyle(s).transform;const v=s.style.top||window.getComputedStyle(s).top,y=s.style.left||window.getComputedStyle(s).left;requestAnimationFrame(async()=>{if(this.applyWillChange(s),s.style.setProperty("--hotspot-top",v),s.style.setProperty("--hotspot-left",y),s.style.transformOrigin="center center",s.style.webkitTransformOrigin="center center",s.classList.add("hotspot-echo-reveal"),u&&s.classList.add("black-mode"),window.hotspotPositionDebugEnabled&&oe(s,i.id),this.isMobile){const g=s.querySelector(".main-path")||s.querySelector("path");g&&B.applyShadow(g,"echoReveal")}let w=localStorage.getItem("borderStyle")||"default";console.log("[TemporalEchoController] Initial borderStyle from localStorage:",w),console.log("[TemporalEchoController] isMobile:",this.isMobile),console.log("[TemporalEchoController] isBlackMode:",u);const p=/Android/i.test(navigator.userAgent);if(console.log("[TemporalEchoController] isAndroid:",p),p&&this.isMobile?(w="pigment",console.log("[TemporalEchoController] Forcing pigment style (black borders) for Android mobile")):this.isMobile&&w==="default"&&(w="emboss",console.log("[TemporalEchoController] Overriding to emboss for mobile")),!p&&u&&(w==="default"||w==="pigment")&&(w="emboss",console.log("[TemporalEchoController] Forcing emboss style for dark palette visibility")),console.log("[TemporalEchoController] Final borderStyle to apply:",w),w!=="default"){s.classList.add(`border-${w}`),console.log("[TemporalEchoController] Applied border style:",w),console.log("[TemporalEchoController] Element classes:",s.className);const g=setTimeout(()=>{var S;if(!s||!s.isConnected){this.activeTimeouts.delete(g);return}const x=s.querySelectorAll("path");if(x.length>0&&x.length<=2){const R=x[0],D=window.getComputedStyle(R);console.log("[TemporalEchoController] Path style check - filter:",((S=D.filter)==null?void 0:S.substring(0,50))+"...")}this.activeTimeouts.delete(g)},100);this.activeTimeouts.add(g),w==="gradient"&&!document.getElementById("adaptive-gradient")&&this.injectGradientDef(),w==="double"&&s.querySelector("path")&&this.createDoubleContour(s),w==="pigment"&&console.log("[TemporalEchoController] Applied pigment liner style")}else if(this.contrastDetection&&e.centerX&&e.centerY)try{const g=await this.contrastDetection.sampleBackgroundLuminance(e.centerX,e.centerY,50);s.classList.add(g.recommendedEffect),console.log("[TemporalEchoController] Applied contrast effect:",g.recommendedEffect)}catch{console.warn("[TemporalEchoController] Contrast detection failed, using default"),s.classList.add("contrast-adaptive-medium")}const f=o*this.config.staggerDelay;s.style.animationDelay=`${f}ms`,console.log(`[TemporalEchoController] Hotspot ${i.id} animation delay: ${f}ms (index: ${o})`),s.tagName.toLowerCase()==="g"&&s.querySelectorAll("path, polygon, polyline").forEach(x=>{x.style.animationDelay=`${f}ms`}),s.offsetHeight,console.log("[TemporalEchoController] Classes added:",s.classList.toString()),this.activeEchoes.add(i.id),this.echoAnimations.set(i.id,{element:s,originalOpacity:r,originalVisibility:l,wasHidden:c,wasVisible:h,isRevealed:!0}),s.setAttribute("data-hotspot-revealed","true"),s.setAttribute("data-reveal-time",Date.now().toString());const T=setTimeout(()=>{s.classList.add("reveal-complete"),this.activeTimeouts.delete(T)},800);this.activeTimeouts.add(T)});const C=setTimeout(()=>{if(s.classList.remove("hotspot-echo-reveal","reveal-complete"),this.activeTimeouts.delete(C),s.style.animationDelay="",this.isMobile){const w=s.querySelector(".main-path")||s.querySelector("path");w&&B.removeShadow(w)}s.classList.add("hotspot-echo-fade-out"),setTimeout(()=>{s.classList.remove("hotspot-echo-fade-out","black-mode"),s.classList.remove("contrast-adaptive-dark","contrast-adaptive-light","contrast-adaptive-medium","contrast-adaptive-complex"),s.classList.remove("border-gradient","border-double","border-emboss","border-pulse","border-pigment"),s.getAnimations&&s.getAnimations().forEach(p=>{p.cancel()}),s.tagName.toLowerCase()==="g"&&s.querySelectorAll("*").forEach(f=>{f.getAnimations&&f.getAnimations().forEach(T=>{T.cancel()})}),this.removeWillChange(s,0);const w=this.stateManager.getSelectedHotspot();if(!w||w.id!==i.id){const p=this.echoAnimations.get(i.id);p&&(s.style.opacity=p.originalOpacity,s.style.visibility=p.originalVisibility,s.style.display="",p.wasHidden&&s.classList.add("hotspot-hidden"),p.wasVisible&&s.classList.add("hotspot-visible"),s.tagName.toLowerCase()==="g"&&s.querySelectorAll("path, polygon, polyline").forEach(T=>{T.style.animationDelay="",T.style.opacity="",T.style.visibility=""})),window.nativeHotspotRenderer&&window.nativeHotspotRenderer.updateVisibility&&setTimeout(()=>{window.nativeHotspotRenderer.updateVisibility()},100)}s.removeAttribute("data-hotspot-revealed"),this.activeEchoes.delete(i.id),this.echoAnimations.delete(i.id)},300)},this.config.revealDuration);this.activeTimeouts.add(C)}getHotspotElement(e){let t=null;const o=this.stateManager.getOverlay(e);if(o&&o.element&&(t=o.element),!t){const i=document.querySelectorAll(".openseadragon-svg-overlay, .hotspot-overlay-svg, svg");for(const s of i)if(t=s.querySelector(`[data-hotspot-id="${e}"]`),t)break}if(t||(t=document.getElementById(`hotspot-${e}`)),!t){const i=document.querySelectorAll(`g[data-hotspot-id="${e}"]`);i.length>0&&(t=i[0])}return t}revealHotspotsSVG(e,t){if(console.log(`[TemporalEchoController] Revealing ${e.length} hotspots in SVG`),this.batchDOMManager&&this.useBatchDOM){console.log("[TemporalEchoController] Using BatchDOMManager for efficient reveal");const o=[];if(e.forEach(i=>{const s=i.hotspot||i,n=this.getHotspotElement(s.id||i.id);n&&(o.push(n),this.activeEchoes.add(s.id||i.id))}),o.length>0){const i=localStorage.getItem("borderStyle")||"default";this.batchDOMManager.batchRevealHotspots(o,{staggerDelay:this.config.staggerDelay,revealDuration:this.config.revealDuration,borderStyle:i})}return}e.forEach((o,i)=>{const s=o.hotspot||o,n=this.getHotspotElement(s.id||o.id);if(!n)return;const a=n.style.opacity||"",r=n.style.visibility||"",l=n.classList.contains("hotspot-hidden"),c=n.classList.contains("hotspot-visible");n.classList.remove("hotspot-hidden"),n.classList.add("hotspot-visible","hotspot-echo-active"),n.style.opacity="1",n.style.visibility="visible",n.style.display="block",this.activeEchoes.add(o.id),this.echoAnimations.set(o.id,{element:n,originalOpacity:a,originalVisibility:r,wasHidden:l,wasVisible:c,isRevealed:!0}),n.setAttribute("data-hotspot-revealed","true"),n.setAttribute("data-reveal-time",Date.now().toString())}),setTimeout(()=>{this.hideRevealedHotspots(e)},this.config.revealDuration)}hideRevealedHotspots(e){e.forEach(t=>{const o=t.id,i=this.echoAnimations.get(o);if(!i)return;const s=i.element;s.classList.remove("hotspot-echo-active"),s.removeAttribute("data-hotspot-revealed"),s.style.opacity=i.originalOpacity,s.style.visibility=i.originalVisibility,s.style.display="",i.wasHidden&&s.classList.add("hotspot-hidden"),i.wasVisible||s.classList.remove("hotspot-visible"),this.activeEchoes.delete(o),this.echoAnimations.delete(o)}),console.log("[TemporalEchoController] Hotspots hidden after reveal duration")}cleanupExpiredRevealedStates(){const e=Date.now(),t=2500,o=document.querySelectorAll('[data-hotspot-revealed="true"]');let i=0;o.forEach(s=>{const n=parseInt(s.getAttribute("data-reveal-time")||"0");if(n&&e-n>t){s.removeAttribute("data-hotspot-revealed"),s.removeAttribute("data-reveal-time"),i++;const a=s.getAttribute("data-hotspot-id");a&&(this.activeEchoes.delete(a),this.echoAnimations.delete(a))}}),i>0&&console.log(`[TemporalEchoController] Cleaned ${i} expired revealed states (iOS fix)`)}isHotspotRevealed(e){const t=this.echoAnimations.get(e);if(t&&t.isRevealed===!0||this.activeEchoes.has(e))return!0;const o=this.getHotspotElement(e);if(o&&o.getAttribute("data-hotspot-revealed")==="true"){const i=parseInt(o.getAttribute("data-reveal-time")||"0");return i?Date.now()-i<=2500?(console.log(`[TemporalEcho] Hotspot ${e} is revealed in DOM (valid timestamp)`),!0):(console.log(`[TemporalEcho] Hotspot ${e} has expired reveal state, cleaning up`),o.removeAttribute("data-hotspot-revealed"),o.removeAttribute("data-reveal-time"),!1):(console.log(`[TemporalEcho] Hotspot ${e} has no timestamp, cleaning up stale state`),o.removeAttribute("data-hotspot-revealed"),!1)}return!1}handleRippleComplete(e){console.log("[TemporalEchoController] Ripple completed:",e)}updateFPS(){this.frameCount++;const e=performance.now(),t=e-this.lastFPSCheck;t>=1e3&&(this.currentFPS=Math.round(this.frameCount*1e3/t),this.frameCount=0,this.lastFPSCheck=e,this.currentFPS<30&&this.activeEchoes.size>0&&console.warn("[TemporalEchoController] Low FPS detected:",this.currentFPS))}enable(){this.config.enabled=!0,this.gestureAdapter.enable(),this.rippleRenderer.initialize(),this.fastPathListener=e=>{console.log("[TemporalEchoController] Fast-path ECHO_TAP received");const t=new k.Point(e.x-this.viewer.element.offsetLeft,e.y-this.viewer.element.offsetTop),o=this.viewer.viewport.pointFromPixel(t),i={...e,viewportX:o.x,viewportY:o.y},s=this.handleQuickTap(i);console.log("[TemporalEchoController] handleQuickTap returned:",s),e.wasHandledAsEcho=s===!0,console.log("[TemporalEchoController] Set tapData.wasHandledAsEcho to:",e.wasHandledAsEcho)},this.eventCoordinator.on(this.eventCoordinator.eventTypes.ECHO_TAP,this.fastPathListener),this.buildSpatialIndex(),console.log("[TemporalEchoController] Enabled with fast-path support and spatial index")}disable(){this.config.enabled=!1,this.gestureAdapter.disable(),this.rippleRenderer.cleanup(),this.clearActiveEchoes(),this.cleanupTimeout&&(clearTimeout(this.cleanupTimeout),this.cleanupTimeout=null),this.fastPathListener&&(this.eventCoordinator.off(this.eventCoordinator.eventTypes.ECHO_TAP,this.fastPathListener),this.fastPathListener=null),this.invalidateSpatialIndex(),console.log("[TemporalEchoController] Disabled")}invalidateSpatialIndex(){this.spatialIndexReady=!1,this.spatialIndex&&this.spatialIndex.clear()}cleanupRevealedHotspots(){var o,i;console.log(`[TemporalEchoController] Cleaning up revealed hotspots for Safari iOS (Reveal #${this.revealCount})`),this.activeTimeouts.forEach(s=>{clearTimeout(s)}),this.activeTimeouts.clear(),document.querySelectorAll(".hotspot-echo-reveal, .hotspot-echo-fade-out").forEach(s=>{s.classList.remove("hotspot-echo-reveal","hotspot-echo-fade-out","black-mode"),s.style.removeProperty("visibility"),s.style.removeProperty("display"),s.style.removeProperty("z-index"),s.style.removeProperty("pointer-events"),s.style.removeProperty("animation-delay"),s.style.removeProperty("opacity"),s.style.removeProperty("transform"),s.style.removeProperty("-webkit-transform"),s.getAnimations&&s.getAnimations().forEach(n=>{n.cancel()})}),window.safariOverlayManager&&(window.safariOverlayManager.resetMask&&window.safariOverlayManager.resetMask(),window.safariOverlayManager.resetFocusTracking&&window.safariOverlayManager.resetFocusTracking()),(this.isSafari||this.isIOS)&&(o=window.nativeHotspotRenderer)!=null&&o.safariCompat&&window.nativeHotspotRenderer.safariCompat.forceIOSRedraw(),this.activeEchoes.clear(),this.echoAnimations.clear();const t=document.querySelectorAll(".hotspot-echo-reveal");if(t.length>0&&console.warn(`[TemporalEchoController] WARNING: ${t.length} elements still have reveal class after cleanup!`),(i=window.safariOverlayManager)!=null&&i.overlayElement){const s=window.getComputedStyle(window.safariOverlayManager.overlayElement).webkitMaskImage;s&&s!=="none"&&console.warn("[TemporalEchoController] WARNING: Safari overlay still has mask after cleanup:",s)}console.log(`[TemporalEchoController] Cleanup complete for Reveal #${this.revealCount}`)}clearActiveEchoes(){this.activeEchoes.forEach(e=>{const t=this.echoAnimations.get(e);if(t&&t.element){if(t.element.classList.remove("hotspot-echo-reveal","hotspot-echo-fade-out","black-mode"),t.element.style.animationDelay="",t.element.style.opacity=t.originalOpacity,t.element.style.visibility=t.originalVisibility,t.element.style.display="",this.isMobile){const o=t.element.querySelector(".main-path")||t.element.querySelector("path");o&&B.removeShadow(o)}t.element.tagName.toLowerCase()==="g"&&t.element.querySelectorAll("path, polygon, polyline").forEach(i=>{i.style.animationDelay="",i.style.opacity="",i.style.visibility=""})}}),this.activeEchoes.clear(),this.echoAnimations.clear()}updateConfig(e){Object.assign(this.config,e),(e.quickTapThreshold!==void 0||e.movementThreshold!==void 0)&&this.gestureAdapter.updateConfig(e)}getFPS(){return this.rippleRenderer?this.rippleRenderer.getFPS():60}getPerformanceMetrics(){return this.rippleRenderer?this.rippleRenderer.getPerformanceMetrics():null}injectGradientDef(){if(document.getElementById("adaptive-gradient"))return;const e="http://www.w3.org/2000/svg",t=document.createElementNS(e,"svg");t.style.position="absolute",t.style.width="0",t.style.height="0",t.style.overflow="hidden";const o=document.createElementNS(e,"defs"),i=document.createElementNS(e,"linearGradient");i.id="adaptive-gradient",i.setAttribute("x1","0%"),i.setAttribute("y1","0%"),i.setAttribute("x2","100%"),i.setAttribute("y2","100%");const s=document.createElementNS(e,"stop");s.setAttribute("offset","0%"),s.setAttribute("stop-color","white"),s.setAttribute("stop-opacity","1");const n=document.createElementNS(e,"stop");n.setAttribute("offset","50%"),n.setAttribute("stop-color","gray"),n.setAttribute("stop-opacity","0.8");const a=document.createElementNS(e,"stop");a.setAttribute("offset","100%"),a.setAttribute("stop-color","black"),a.setAttribute("stop-opacity","1"),i.appendChild(s),i.appendChild(n),i.appendChild(a),o.appendChild(i),t.appendChild(o),document.body.appendChild(t)}createDoubleContour(e){e.querySelectorAll("path").forEach(o=>{if(o.nextSibling&&o.nextSibling.classList&&o.nextSibling.classList.contains("outer-stroke"))return;const i=o.cloneNode(!0);i.classList.add("outer-stroke"),i.style.zIndex="-1",o.parentNode.insertBefore(i,o)})}injectPigmentTextureFilter(){const e="http://www.w3.org/2000/svg",t=document.createElementNS(e,"svg");t.style.position="absolute",t.style.width="0",t.style.height="0",t.style.overflow="hidden",t.setAttribute("aria-hidden","true");const o=document.createElementNS(e,"defs"),i=document.createElementNS(e,"filter");i.id="pigmentTexture",i.setAttribute("x","-50%"),i.setAttribute("y","-50%"),i.setAttribute("width","200%"),i.setAttribute("height","200%"),i.setAttribute("color-interpolation-filters","sRGB");const s=document.createElementNS(e,"feTurbulence");s.setAttribute("type","turbulence"),s.setAttribute("baseFrequency","0.5 0.1"),s.setAttribute("numOctaves","2"),s.setAttribute("seed","5"),s.setAttribute("result","turbulence");const n=document.createElementNS(e,"feDisplacementMap");n.setAttribute("in","SourceGraphic"),n.setAttribute("in2","turbulence"),n.setAttribute("scale","2"),n.setAttribute("xChannelSelector","R"),n.setAttribute("yChannelSelector","G"),n.setAttribute("result","displaced");const a=document.createElementNS(e,"feMorphology");a.setAttribute("in","displaced"),a.setAttribute("operator","dilate"),a.setAttribute("radius","0.5"),a.setAttribute("result","dilated");const r=document.createElementNS(e,"feComposite");r.setAttribute("in","dilated"),r.setAttribute("in2","displaced"),r.setAttribute("operator","over"),r.setAttribute("result","final");const l=document.createElementNS(e,"feComponentTransfer");l.setAttribute("in","final");const c=document.createElementNS(e,"feFuncA");c.setAttribute("type","discrete"),c.setAttribute("tableValues","0 1"),l.appendChild(c),i.appendChild(s),i.appendChild(n),i.appendChild(a),i.appendChild(r),i.appendChild(l),o.appendChild(i),t.appendChild(o),document.body.appendChild(t),console.log("[TemporalEchoController] Injected pigment texture filter")}startSafetyCleanup(){this.safetyCleanupInterval=setInterval(()=>{let e=0;this.stateManager&&this.stateManager.getAllOverlays&&this.stateManager.getAllOverlays().forEach((o,i)=>{o.element&&o.element.getAttribute("data-hotspot-revealed")==="true"&&!this.hotspotCleanupTimeouts.has(i)&&!this.activeEchoes.has(i)&&(o.element.removeAttribute("data-hotspot-revealed"),e++,console.log(`[Safety Cleanup] Cleaned orphaned overlay: ${i}`))}),document.querySelectorAll('[data-hotspot-revealed="true"]').forEach(o=>{const i=o.getAttribute("data-hotspot-id");i&&!this.hotspotCleanupTimeouts.has(i)&&!this.activeEchoes.has(i)&&(o.removeAttribute("data-hotspot-revealed"),e++,console.log(`[Safety Cleanup] Cleaned orphaned DOM element: ${i}`))}),e>0&&console.log(`[Safety Cleanup] Cleaned ${e} orphaned revealed hotspots`)},3e3)}startPeriodicReset(){this.fullResetInterval=setInterval(()=>{const e=this.activeEchoes.size,t=this.echoAnimations.size,o=this.hotspotCleanupTimeouts.size;(e>0||t>0||o>0)&&(console.log(`[PeriodicReset] Performing full reset - Active: ${e}, Animations: ${t}, Cleanups: ${o}`),this.forceCleanupAllRevealed(),this.hotspotCleanupTimeouts.forEach(i=>clearTimeout(i)),this.hotspotCleanupTimeouts.clear(),this.activeEchoes.clear(),this.echoAnimations.clear(),console.log("[PeriodicReset] Full reset completed"))},3e4)}forceCleanupAllRevealed(){console.log("[TemporalEcho] Force cleaning all revealed hotspots"),this.stateManager&&this.stateManager.getAllOverlays&&this.stateManager.getAllOverlays().forEach((t,o)=>{t.element&&t.element.getAttribute("data-hotspot-revealed")==="true"&&(t.element.removeAttribute("data-hotspot-revealed"),console.log(`[TemporalEcho] Force cleaned overlay: ${o}`))}),document.querySelectorAll('[data-hotspot-revealed="true"]').forEach(t=>{t.removeAttribute("data-hotspot-revealed");const o=t.getAttribute("data-hotspot-id");console.log(`[TemporalEcho] Force cleaned DOM element: ${o||"unknown"}`)}),this.activeEchoes.clear(),this.echoAnimations.clear(),this.hotspotCleanupTimeouts.forEach(t=>{clearTimeout(t)}),this.hotspotCleanupTimeouts.clear()}destroy(){this.safetyCleanupInterval&&(clearInterval(this.safetyCleanupInterval),this.safetyCleanupInterval=null),this.fullResetInterval&&(clearInterval(this.fullResetInterval),this.fullResetInterval=null),this.forceCleanupAllRevealed(),this.disable(),this.gestureAdapter.destroy(),this.rippleRenderer.destroy(),this.clearActiveEchoes(),this.hotspotCleanupTimeouts.forEach((e,t)=>{clearTimeout(e),console.log(`[TemporalEchoController] Cleared cleanup timeout for hotspot ${t}`)}),this.hotspotCleanupTimeouts.clear(),this.canvasRenderer&&(this.canvasRenderer.destroy(),this.canvasRenderer=null),this.batchDOMManager&&(this.batchDOMManager.destroy(),this.batchDOMManager=null),this.hitDetector&&(this.hitDetector.destroy(),this.hitDetector=null)}}window.updateBorderStyle=function(b){console.log("[TemporalEchoController] Border style updated to:",b)};window.toggleAdjacentSelection=function(b){if(window.temporalEchoController){const e=window.temporalEchoController.config.useAdjacentSelection;return window.temporalEchoController.config.useAdjacentSelection=b!==void 0?b:!e,console.log("[TemporalEchoController] Adjacent selection mode:",window.temporalEchoController.config.useAdjacentSelection?"ENABLED (cÃ´te Ã  cÃ´te)":"DISABLED (distance-based)"),window.temporalEchoController.config.useAdjacentSelection}return console.error("TemporalEchoController not initialized"),!1};window.setAdjacencyThreshold=function(b){window.temporalEchoController?(window.temporalEchoController.config.adjacencyThreshold=b,console.log("[TemporalEchoController] Adjacency threshold set to:",b,"pixels")):console.error("TemporalEchoController not initialized")};export{ce as default};
