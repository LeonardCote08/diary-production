class p{constructor(t){this.maxParticles=t.maxParticles||1e3,this.hasTrails=t.hasTrails||!1,this.particleCount=0,this.activeCount=0;const a=7;this.particleData=new Float32Array(this.maxParticles*a),this.freeIndices=new Uint16Array(this.maxParticles),this.activeIndices=new Uint16Array(this.maxParticles);for(let i=0;i<this.maxParticles;i++)this.freeIndices[i]=i;this.freeCount=this.maxParticles,this.particleConfig={baseSize:2,sizeVariation:1.5,baseLife:1,lifeVariation:.3,baseSpeed:.002,speedVariation:.001,fadeInTime:.1,fadeOutTime:.3,color:"rgba(0, 0, 0, ",trailLength:this.hasTrails?5:0},this.emissionConfig={rate:50,spread:Math.PI/6,burstSize:10,lastEmissionTime:0},this.particleSprites=null,this.maxParticles<=1e3&&this.createParticleSprites(),this.hasTrails&&(this.trailData=new Float32Array(this.maxParticles*this.particleConfig.trailLength*2))}createParticleSprites(){const t=document.createElement("canvas"),a=4,i=16;t.width=i*a,t.height=i;const e=t.getContext("2d");for(let r=0;r<a;r++){const s=r*i+i/2,n=i/2,l=i/2-1,c=e.createRadialGradient(s,n,0,s,n,l),h=.2+r/a*.3;c.addColorStop(0,`rgba(0, 0, 0, ${h})`),c.addColorStop(.5,`rgba(0, 0, 0, ${h*.5})`),c.addColorStop(1,"rgba(0, 0, 0, 0)"),e.fillStyle=c,e.fillRect(r*i,0,i,i)}this.particleSprites=t}emitParticles(t,a,i=1){const e=performance.now(),r=e-this.emissionConfig.lastEmissionTime,s=Math.min(Math.floor(r*this.emissionConfig.rate*i/1e3),this.emissionConfig.burstSize);for(let n=0;n<s&&this.freeCount>0;n++)this.emitParticle(t,a);this.emissionConfig.lastEmissionTime=e}emitParticle(t,a){if(this.freeCount===0)return;const i=this.freeIndices[--this.freeCount];this.activeIndices[this.activeCount++]=i;const e=i*7;this.particleData[e]=t.center.x+(Math.random()-.5)*.01,this.particleData[e+1]=t.center.y+(Math.random()-.5)*.01;const r=Math.atan2(a.y,a.x)+(Math.random()-.5)*this.emissionConfig.spread,s=this.particleConfig.baseSpeed+Math.random()*this.particleConfig.speedVariation;this.particleData[e+2]=Math.cos(r)*s,this.particleData[e+3]=Math.sin(r)*s,this.particleData[e+4]=this.particleConfig.baseLife+Math.random()*this.particleConfig.lifeVariation,this.particleData[e+5]=0,this.particleData[e+6]=this.particleConfig.baseSize+Math.random()*this.particleConfig.sizeVariation}update(t,a){var r,s;if(a>.1&&a<.9){const n={x:t.center.x-(((r=this.lastPosition)==null?void 0:r.x)||t.center.x),y:t.center.y-(((s=this.lastPosition)==null?void 0:s.y)||t.center.y)},l=Math.sqrt(n.x*n.x+n.y*n.y);l>.001&&this.emitParticles(t,n,l*100)}this.lastPosition=t.center;let e=0;for(let n=0;n<this.activeCount;n++){const l=this.activeIndices[n],c=l*7;this.particleData[c]+=this.particleData[c+2]*16,this.particleData[c+1]+=this.particleData[c+3]*16,this.particleData[c+4]-=16/1e3;const h=this.particleData[c+4];if(h>this.particleConfig.baseLife-this.particleConfig.fadeInTime){const o=(this.particleConfig.baseLife-h)/this.particleConfig.fadeInTime;this.particleData[c+5]=o}else h<this.particleConfig.fadeOutTime?this.particleData[c+5]=h/this.particleConfig.fadeOutTime:this.particleData[c+5]=1;h>0?this.activeIndices[e++]=l:this.freeIndices[this.freeCount++]=l}this.activeCount=e}render(t){this.activeCount!==0&&(t.save(),this.particleSprites?this.renderWithSprites(t):this.renderDirect(t),t.restore())}renderWithSprites(t){for(let e=0;e<this.activeCount;e++){const r=this.activeIndices[e],s=r*7,n=this.particleData[s],l=this.particleData[s+1],c=this.particleData[s+5],h=this.particleData[s+6];if(c>.01){const o=r%4;t.globalAlpha=c*.6,t.drawImage(this.particleSprites,o*16,0,16,16,n-h,l-h,h*2,h*2)}}}renderDirect(t){const a=new Map;for(let i=0;i<this.activeCount;i++){const e=this.activeIndices[i],r=e*7,s=Math.round(this.particleData[r+5]*10)/10;a.has(s)||a.set(s,[]),a.get(s).push(e)}a.forEach((i,e)=>{e<.01||(t.fillStyle=this.particleConfig.color+e*.6+")",t.beginPath(),i.forEach(r=>{const s=r*7,n=this.particleData[s],l=this.particleData[s+1],c=this.particleData[s+6];t.moveTo(n+c,l),t.arc(n,l,c,0,Math.PI*2)}),t.fill())})}getActiveCount(){return this.activeCount}setMaxParticles(t){if(t===this.maxParticles)return;const a=new Float32Array(t*7),i=new Uint16Array(t),e=new Uint16Array(t),r=Math.min(t,this.maxParticles);a.set(this.particleData.subarray(0,r*7)),this.particleData=a,this.freeIndices=i,this.activeIndices=e,this.maxParticles=t,this.rebuildIndices()}rebuildIndices(){this.freeCount=0,this.activeCount=0;for(let t=0;t<this.maxParticles;t++)this.particleData[t*7+4]>0?this.activeIndices[this.activeCount++]=t:this.freeIndices[this.freeCount++]=t}clear(){this.activeCount=0,this.freeCount=this.maxParticles;for(let t=0;t<this.maxParticles;t++)this.freeIndices[t]=t,this.particleData[t*7+4]=0}destroy(){this.particleData=null,this.freeIndices=null,this.activeIndices=null,this.trailData=null,this.particleSprites=null}}export{p as default};
