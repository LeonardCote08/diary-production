import{O as E,i as A,f as I,c as k}from"./main-DPM66nHK.js";const b={IDLE:"idle",UNDETERMINED:"undetermined",DOUBLE_TAP_WAIT:"double_tap_wait",HOLD:"hold",PAN:"pan",PINCH:"pinch",CANCELLED:"cancelled"};class z{constructor(t={}){this.config={quickTapThreshold:t.quickTapThreshold||50,doubleTapThreshold:t.doubleTapThreshold||300,holdThreshold:t.holdThreshold||400,movementThreshold:t.movementThreshold||10,mobileMovementThreshold:t.mobileMovementThreshold||20,velocityThreshold:t.velocityThreshold||5,debug:t.debug||!1},this.state=b.IDLE,this.previousState=null,this.gestureData=null,this.activePointers=new Map,this.gestureStartTime=0,this.lastTapTime=0,this.lastTapPosition=null,this.quickTapTimer=null,this.holdTimer=null,this.doubleTapTimer=null,this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,this.callbacks={onQuickTap:t.onQuickTap||(()=>{}),onDoubleTap:t.onDoubleTap||(()=>{}),onHoldStart:t.onHoldStart||(()=>{}),onHoldEnd:t.onHoldEnd||(()=>{}),onPanStart:t.onPanStart||(()=>{}),onPinchStart:t.onPinchStart||(()=>{}),onGestureCancel:t.onGestureCancel||(()=>{})},this.startGesture=this.startGesture.bind(this),this.updateGesture=this.updateGesture.bind(this),this.endGesture=this.endGesture.bind(this),this.cancelGesture=this.cancelGesture.bind(this)}startGesture(t){const e=t.pointerId||0,o=performance.now();if(this.activePointers.set(e,{startX:t.x,startY:t.y,currentX:t.x,currentY:t.y,startTime:o}),this.activePointers.size>=2){this.transitionTo(b.PINCH),this.callbacks.onPinchStart(this.getGestureData());return}this.gestureStartTime=o,this.gestureData={startX:t.x,startY:t.y,currentX:t.x,currentY:t.y,pointerId:e},this.transitionTo(b.UNDETERMINED),this.startDetectionTimers(),this.log("Gesture started",this.gestureData)}updateGesture(t){const e=t.pointerId||0,o=this.activePointers.get(e);if(!o||this.state===b.IDLE)return;o.currentX=t.x,o.currentY=t.y,this.gestureData&&this.gestureData.pointerId===e&&(this.gestureData.currentX=t.x,this.gestureData.currentY=t.y);const i=t.x-o.startX,s=t.y-o.startY,n=Math.sqrt(i*i+s*s),a=this.isMobile?this.config.mobileMovementThreshold:this.config.movementThreshold;n>a&&this.state===b.UNDETERMINED&&(this.clearDetectionTimers(),this.transitionTo(b.PAN),this.callbacks.onPanStart(this.getGestureData()))}endGesture(t){const e=t.pointerId||0,o=this.activePointers.get(e);if(!o)return;const i=performance.now()-o.startTime;switch(performance.now(),this.activePointers.delete(e),this.state){case b.UNDETERMINED:i<this.config.quickTapThreshold?this.handleQuickTap(t,i):this.cancelGesture("duration_exceeded");break;case b.HOLD:this.callbacks.onHoldEnd({...this.getGestureData(),duration:i}),this.transitionTo(b.IDLE);break;case b.DOUBLE_TAP_WAIT:break;default:this.transitionTo(b.IDLE)}this.activePointers.size===0&&this.state!==b.DOUBLE_TAP_WAIT&&this.resetGesture()}cancelGesture(t="unknown"){this.clearDetectionTimers();const e=this.state;this.transitionTo(b.CANCELLED),this.callbacks.onGestureCancel({previousState:e,reason:t,gestureData:this.getGestureData()}),this.reset()}handleQuickTap(t,e){const o=performance.now(),i={x:t.x,y:t.y};if(this.lastTapTime&&this.lastTapPosition){const s=o-this.lastTapTime,n=this.calculateDistance(i.x,i.y,this.lastTapPosition.x,this.lastTapPosition.y);if(s<this.config.doubleTapThreshold&&n<50){this.clearDetectionTimers(),this.callbacks.onDoubleTap({...this.getGestureData(),duration:e,timeBetweenTaps:s}),this.lastTapTime=0,this.lastTapPosition=null,this.transitionTo(b.IDLE);return}}this.callbacks.onQuickTap({...this.getGestureData(),duration:e,originalEvent:t.originalEvent}),this.lastTapTime=o,this.lastTapPosition=i,this.transitionTo(b.DOUBLE_TAP_WAIT),this.doubleTapTimer=setTimeout(()=>{this.transitionTo(b.IDLE),this.resetGesture()},this.config.doubleTapThreshold)}startDetectionTimers(){this.quickTapTimer=setTimeout(()=>{this.state===b.UNDETERMINED&&this.startHoldDetection()},this.config.quickTapThreshold)}startHoldDetection(){const t=this.config.holdThreshold-this.config.quickTapThreshold;this.holdTimer=setTimeout(()=>{this.state===b.UNDETERMINED&&(this.transitionTo(b.HOLD),this.callbacks.onHoldStart(this.getGestureData()))},t)}clearDetectionTimers(){this.quickTapTimer&&(clearTimeout(this.quickTapTimer),this.quickTapTimer=null),this.holdTimer&&(clearTimeout(this.holdTimer),this.holdTimer=null),this.doubleTapTimer&&(clearTimeout(this.doubleTapTimer),this.doubleTapTimer=null)}transitionTo(t){this.state!==t&&(this.previousState=this.state,this.state=t,this.log(`State transition: ${this.previousState} â†’ ${t}`))}getGestureData(){return this.gestureData?{...this.gestureData,state:this.state,duration:performance.now()-this.gestureStartTime,distance:this.calculateDistance(this.gestureData.currentX,this.gestureData.currentY,this.gestureData.startX,this.gestureData.startY)}:null}calculateDistance(t,e,o,i){const s=o-t,n=i-e;return Math.sqrt(s*s+n*n)}reset(){this.state=b.IDLE,this.previousState=null,this.gestureData=null,this.gestureStartTime=0,this.clearDetectionTimers()}resetGesture(){this.gestureData=null,this.gestureStartTime=0,this.activePointers.clear(),this.clearDetectionTimers()}log(...t){this.config.debug&&console.log("[GestureStateMachine]",...t)}getState(){return this.state}isActive(){return this.state!==b.IDLE&&this.state!==b.CANCELLED}destroy(){this.clearDetectionTimers(),this.activePointers.clear(),this.reset()}}class ${constructor(t={}){this.eventCoordinator=t.eventCoordinator,this.viewer=t.viewer,this.onQuickTap=t.onQuickTap||(()=>{}),this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,this.gestureStateMachine=new z({quickTapThreshold:200,movementThreshold:this.isMobile?20:10,debug:window.DEBUG_GESTURES||!1,onQuickTap:this.handleQuickTap.bind(this),onDoubleTap:this.handleDoubleTap.bind(this),onHoldStart:this.handleHoldStart.bind(this),onHoldEnd:this.handleHoldEnd.bind(this),onPanStart:this.handlePanStart.bind(this),onPinchStart:this.handlePinchStart.bind(this)}),this.isIntercepting=!1,this.originalHandlers={},this.lastEventTime=0,this.eventThrottle=16,this.enabled=!1,this.setupEventListeners()}setupEventListeners(){if(!this.eventCoordinator){console.warn("[TemporalEchoAdapter] No EventCoordinator provided");return}this.eventCoordinator.on(this.eventCoordinator.eventTypes.POINTER_DOWN,this.handlePointerDown.bind(this)),this.eventCoordinator.on(this.eventCoordinator.eventTypes.POINTER_MOVE,this.handlePointerMove.bind(this)),this.eventCoordinator.on(this.eventCoordinator.eventTypes.POINTER_UP,this.handlePointerUp.bind(this))}handlePointerDown(t){if(t.activePointers>1){this.gestureStateMachine.cancelGesture("multi_touch");return}this.enabled&&(this.gestureStateMachine.startGesture({x:t.x,y:t.y,pointerId:t.pointerId,originalEvent:t.event}),this.isIntercepting=!1)}handlePointerMove(t){const e=performance.now();e-this.lastEventTime<this.eventThrottle||(this.lastEventTime=e,this.gestureStateMachine.updateGesture({x:t.x,y:t.y,pointerId:t.pointerId}),this.gestureStateMachine.getState()==="pan"&&(this.isIntercepting=!1))}handlePointerUp(t){this.gestureStateMachine.endGesture({x:t.x,y:t.y,pointerId:t.pointerId,originalEvent:t.event}),this.isIntercepting=!1}handleQuickTap(t){const e=this.viewer.viewport.pointFromPixel(new E.Point(t.startX,t.startY)),o=this.onQuickTap({x:t.startX,y:t.startY,viewportX:e.x,viewportY:e.y,duration:t.duration});return o?(this.isIntercepting=!0,t.originalEvent&&(t.originalEvent.preventDefault(),t.originalEvent.stopPropagation()),this.handledQuickTap=!0,this.lastQuickTapTime=performance.now(),setTimeout(()=>{this.isIntercepting=!1,this.handledQuickTap=!1},100)):(this.isIntercepting=!1,this.gestureStateMachine.cancelGesture("not_handled")),o}handleDoubleTap(t){}handleHoldStart(t){this.isIntercepting=!1,this.gestureStateMachine.cancelGesture("hold_detected")}handleHoldEnd(t){}handlePanStart(t){this.isIntercepting=!1}handlePinchStart(t){this.isIntercepting=!1}shouldIntercept(){return this.isIntercepting&&this.gestureStateMachine.isActive()&&this.gestureStateMachine.getState()!=="pan"&&this.gestureStateMachine.getState()!=="pinch"}enable(){this.enabled=!0}disable(){this.enabled=!1,this.gestureStateMachine.cancelGesture("disabled"),this.isIntercepting=!1}updateConfig(t){t.quickTapThreshold!==void 0&&(this.gestureStateMachine.config.quickTapThreshold=t.quickTapThreshold),t.movementThreshold!==void 0&&(this.gestureStateMachine.config.movementThreshold=t.movementThreshold)}destroy(){this.gestureStateMachine.destroy(),this.isIntercepting=!1}}class O{constructor(t={}){this.targetFPS=t.targetFPS||30,this.sampleRate=t.sampleRate||100,this.warningThreshold=t.warningThreshold||25,this.criticalThreshold=t.criticalThreshold||20,this.metrics={fps:{current:60,average:60,min:60,max:60,samples:[]},frameTime:{current:16.67,average:16.67,max:16.67,samples:[]},memory:{used:0,limit:0,percentage:0},ripples:{active:0,created:0,completed:0}},this.performanceState="optimal",this.lastFrameTime=performance.now(),this.frameCount=0,this.isMonitoring=!1,this.onPerformanceChange=t.onPerformanceChange||(()=>{}),this.onCriticalPerformance=t.onCriticalPerformance||(()=>{}),console.log("[PerformanceMonitor] Initialized with target FPS:",this.targetFPS)}start(){this.isMonitoring||(this.isMonitoring=!0,this.lastFrameTime=performance.now(),this.rafLoop(),this.startSampling(),console.log("[PerformanceMonitor] Started monitoring"))}rafLoop(){if(!this.isMonitoring)return;const t=performance.now(),e=t-this.lastFrameTime;this.metrics.frameTime.current=e,this.frameCount++,e>0&&(this.metrics.fps.current=Math.round(1e3/e)),this.lastFrameTime=t,requestAnimationFrame(()=>this.rafLoop())}startSampling(){this.samplingInterval=setInterval(()=>{this.sampleMetrics(),this.evaluatePerformance()},this.sampleRate)}sampleMetrics(){performance.now();const t=this.metrics.fps.samples;t.push(this.metrics.fps.current),t.length>10&&t.shift(),this.metrics.fps.average=Math.round(t.reduce((o,i)=>o+i,0)/t.length),this.metrics.fps.min=Math.min(...t),this.metrics.fps.max=Math.max(...t);const e=this.metrics.frameTime.samples;e.push(this.metrics.frameTime.current),e.length>10&&e.shift(),this.metrics.frameTime.average=e.reduce((o,i)=>o+i,0)/e.length,this.metrics.frameTime.max=Math.max(...e),performance.memory&&(this.metrics.memory.used=Math.round(performance.memory.usedJSHeapSize/1048576),this.metrics.memory.limit=Math.round(performance.memory.jsHeapSizeLimit/1048576),this.metrics.memory.percentage=Math.round(performance.memory.usedJSHeapSize/performance.memory.jsHeapSizeLimit*100))}evaluatePerformance(){const t=this.metrics.fps.average,e=this.performanceState;t>=this.targetFPS?this.performanceState="optimal":t>=this.warningThreshold?this.performanceState="degraded":this.performanceState="critical",e!==this.performanceState&&(console.log(`[PerformanceMonitor] State changed: ${e} â†’ ${this.performanceState}`),this.onPerformanceChange(this.performanceState,this.metrics),this.performanceState==="critical"&&this.onCriticalPerformance(this.metrics)),this.performanceState!=="optimal"&&this.frameCount%60===0&&console.warn("[PerformanceMonitor] Performance below target:",{state:this.performanceState,avgFPS:t,targetFPS:this.targetFPS})}rippleCreated(){this.metrics.ripples.created++,this.metrics.ripples.active++}rippleCompleted(){this.metrics.ripples.completed++,this.metrics.ripples.active=Math.max(0,this.metrics.ripples.active-1)}getMetrics(){return{...this.metrics,performanceState:this.performanceState,isTargetMet:this.metrics.fps.average>=this.targetFPS}}getRecommendations(){const t=[];return this.performanceState==="critical"?(t.push("Reduce animation complexity"),t.push("Disable visual effects"),t.push("Limit concurrent ripples to 1")):this.performanceState==="degraded"&&(t.push("Consider reducing ripple radius"),t.push("Simplify animation easing")),this.metrics.memory.percentage>80&&(t.push("High memory usage detected"),t.push("Clear completed animations")),t}stop(){this.isMonitoring=!1,this.samplingInterval&&(clearInterval(this.samplingInterval),this.samplingInterval=null),console.log("[PerformanceMonitor] Stopped monitoring")}reset(){this.metrics.fps.samples=[],this.metrics.frameTime.samples=[],this.metrics.ripples={active:0,created:0,completed:0},this.frameCount=0}destroy(){this.stop(),this.reset()}}class L{constructor(t={}){this.viewer=t.viewer,this.radius=t.radius||200,this.duration=t.duration||800,this.maxRipples=t.maxRipples||3,this.onRippleComplete=t.onRippleComplete||(()=>{}),this.safariOptimizations={useWillChange:!0,use3DTransform:!0,useWebkitPrefix:!0,compositeLayerHints:!0,useContainment:!0,usePassiveListeners:!0,reduceCompositeLayersOnMobile:A()},this.container=null,this.activeRipples=new Map,this.rippleIdCounter=0,this.performanceMonitor=new O({targetFPS:30,warningThreshold:25,criticalThreshold:20,onPerformanceChange:this.handlePerformanceChange.bind(this),onCriticalPerformance:this.handleCriticalPerformance.bind(this)}),this.isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),this.isIOS=/iPad|iPhone|iPod/.test(navigator.userAgent)||navigator.platform==="MacIntel"&&navigator.maxTouchPoints>1,console.log("[CSSRippleRenderer] Initialized",{safari:this.isSafari,iOS:this.isIOS,mobile:A()})}initialize(){this.createContainer(),this.injectStyles(),this.performanceMonitor.start(),console.log("[CSSRippleRenderer] Initialized container and styles")}createContainer(){this.container||(this.container=document.createElement("div"),this.container.className="css-ripple-container",this.container.style.cssText=`
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 9999;
            overflow: hidden;
            ${this.safariOptimizations.use3DTransform?"transform: translate3d(0, 0, 0);":""}
            ${this.safariOptimizations.useWillChange?"will-change: transform;":""}
            ${this.safariOptimizations.compositeLayerHints?"-webkit-transform: translateZ(0);":""}
            ${this.safariOptimizations.useContainment?"contain: layout style paint;":""}
        `,document.body.appendChild(this.container))}injectStyles(){if(document.getElementById("css-ripple-styles"))return;const t=document.createElement("style");t.id="css-ripple-styles";const e=`
            @keyframes ripple-expand {
                0% {
                    transform: translate3d(-50%, -50%, 0) scale(0);
                    opacity: 1;
                }
                50% {
                    opacity: 0.8;
                }
                100% {
                    transform: translate3d(-50%, -50%, 0) scale(1);
                    opacity: 0;
                }
            }
            
            /* Simplified mobile version for better performance */
            @media (max-width: 768px) {
                @keyframes ripple-expand {
                    0% {
                        transform: translate3d(-50%, -50%, 0) scale(0);
                        opacity: 0.6;
                    }
                    100% {
                        transform: translate3d(-50%, -50%, 0) scale(1);
                        opacity: 0;
                    }
                }
            }
            
            @-webkit-keyframes ripple-expand {
                0% {
                    -webkit-transform: translate3d(-50%, -50%, 0) scale(0);
                    opacity: 1;
                }
                50% {
                    opacity: 0.8;
                }
                100% {
                    -webkit-transform: translate3d(-50%, -50%, 0) scale(1);
                    opacity: 0;
                }
            }
        `,o=`
            @keyframes ripple-outer {
                0% {
                    transform: translate3d(-50%, -50%, 0) scale(0.5);
                    opacity: 0.25;
                }
                100% {
                    transform: translate3d(-50%, -50%, 0) scale(1.2);
                    opacity: 0;
                }
            }
            
            @keyframes ripple-inner {
                0% {
                    transform: translate3d(-50%, -50%, 0) scale(0);
                    opacity: 0.5;
                }
                100% {
                    transform: translate3d(-50%, -50%, 0) scale(1);
                    opacity: 0;
                }
            }
            
            @keyframes ripple-core {
                0% {
                    transform: translate3d(-50%, -50%, 0) scale(0);
                    opacity: 0.9;
                }
                50% {
                    opacity: 0.8;
                }
                100% {
                    transform: translate3d(-50%, -50%, 0) scale(0.8);
                    opacity: 0;
                }
            }
        `,i=`
            .css-ripple {
                position: absolute;
                border-radius: 50%;
                background: transparent;
                border: 2px solid rgba(255, 255, 255, 0.8);
                /* Simplified box-shadow for better mobile performance */
                box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
                pointer-events: none;
                ${this.safariOptimizations.use3DTransform?"transform: translate3d(-50%, -50%, 0) scale(0);":"transform: translate(-50%, -50%) scale(0);"}
                ${this.safariOptimizations.useWillChange?"will-change: transform, opacity;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-transform: translate3d(-50%, -50%, 0) scale(0);":""}
                ${this.safariOptimizations.useContainment?"contain: layout;":""}
                /* GPU acceleration hints */
                backface-visibility: hidden;
                -webkit-backface-visibility: hidden;
                perspective: 1000px;
                -webkit-perspective: 1000px;
                animation: ripple-expand ${this.duration}ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation: ripple-expand "+this.duration+"ms cubic-bezier(0.4, 0, 0.2, 1) forwards;":""}
            }
            
            .css-ripple.low-performance {
                box-shadow: none;
                background: rgba(255, 255, 255, 0.3);
                animation-duration: ${this.duration*.7}ms;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-duration: "+this.duration*.7+"ms;":""}
            }
            
            /* Multi-layer ripple structure */
            .css-ripple-multi {
                position: absolute;
                pointer-events: none;
                ${this.safariOptimizations.use3DTransform?"transform: translate3d(-50%, -50%, 0);":"transform: translate(-50%, -50%);"}
            }
            
            .ripple-layer {
                position: absolute;
                top: 50%;
                left: 50%;
                border-radius: 50%;
                pointer-events: none;
            }
            
            .ripple-layer-outer {
                border: 1px solid rgba(255, 255, 255, 0.15);
                background: radial-gradient(circle, transparent 60%, rgba(255, 255, 255, 0.1) 100%);
                animation: ripple-outer ${this.duration}ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
            }
            
            .ripple-layer-inner {
                border: 2px solid rgba(255, 255, 255, 0.4);
                background: transparent;
                animation: ripple-inner ${this.duration*.85}ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
            }
            
            .ripple-layer-core {
                border: 3px solid rgba(255, 255, 255, 0.8);
                background: rgba(255, 255, 255, 0.1);
                animation: ripple-core ${this.duration*.7}ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
            }
        `,s=`
            /* Override any LOD or visibility class during reveal */
            .hotspot-echo-reveal.hotspot-hidden,
            .hotspot-hidden.hotspot-echo-reveal,
            .hotspot-echo-reveal.hotspot-visible,
            .hotspot-visible.hotspot-echo-reveal {
                opacity: 0 !important;
                visibility: visible !important;
                pointer-events: none !important;
                display: block !important;
            }
            
            /* Default reveal style (white/visible) - optimized duration */
            .hotspot-echo-reveal {
                visibility: visible !important;
                display: block !important;
                z-index: 1000 !important;
                pointer-events: none !important;
                /* CRITICAL: Set transform-origin to prevent position shifting */
                transform-origin: center center !important;
                -webkit-transform-origin: center center !important;
                /* GPU acceleration for mobile - removed translateZ to avoid conflicts with scale */
                backface-visibility: hidden;
                -webkit-backface-visibility: hidden;
                perspective: 1000px;
                -webkit-perspective: 1000px;
                /* Optimized animation */
                animation-name: hotspot-simple-fade-in !important;
                animation-duration: 0.3s !important;
                animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
                animation-fill-mode: both !important;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-name: hotspot-simple-fade-in !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-duration: 0.3s !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-fill-mode: both !important;":""}
                ${this.safariOptimizations.useContainment?"contain: layout style;":""}
            }
            
            /* Black mode specific styling - optimized for mobile */
            .hotspot-echo-reveal.black-mode {
                visibility: visible !important;
            }
            
            .hotspot-echo-reveal.black-mode path,
            .hotspot-echo-reveal.black-mode polygon,
            .hotspot-echo-reveal.black-mode polyline {
                stroke: #000000 !important;
                fill: none !important;
                stroke-width: 6 !important;
                /* Reduced filter complexity for better mobile performance */
                filter: drop-shadow(0 0 15px rgba(0, 0, 0, 0.7));
                animation-name: hotspot-simple-fade-in !important;
                animation-duration: 0.4s !important;
                animation-timing-function: ease-out !important;
                animation-fill-mode: both !important;
                animation-delay: inherit !important;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-name: hotspot-simple-fade-in !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-duration: 0.4s !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-timing-function: ease-out !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-fill-mode: both !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-delay: inherit !important;":""}
            }
            
            /* Removed multiple glow layers for better performance on mobile */
            
            /* Ensure g elements are visible and override LOD */
            g.hotspot-echo-reveal,
            g.hotspot-echo-reveal.hotspot-hidden,
            g.hotspot-echo-reveal.hotspot-visible {
                opacity: 1 !important;
                visibility: visible !important;
                display: block !important;
                z-index: 1000 !important;
            }
            
            /* Override any LOD hiding during reveal */
            .hotspot-echo-reveal.hotspot-visible,
            .hotspot-visible.hotspot-echo-reveal {
                opacity: 0 !important;
                animation-name: hotspot-simple-fade-in !important;
                animation-duration: 0.6s !important;
                animation-fill-mode: forwards !important;
            }
            
            /* Force visibility for all child elements */
            .hotspot-echo-reveal path,
            .hotspot-echo-reveal polygon,
            .hotspot-echo-reveal polyline {
                visibility: visible !important;
            }
            
            /* Simple fade for default mode - with forced start from 0 */
            @keyframes hotspot-simple-fade-in {
                0% { 
                    opacity: 0 !important;
                    visibility: visible;
                }
                1% {
                    opacity: 0 !important;
                    visibility: visible;
                }
                100% { 
                    opacity: 1;
                    visibility: visible;
                }
            }
            
            @-webkit-keyframes hotspot-simple-fade-in {
                0% { 
                    opacity: 0 !important;
                    visibility: visible;
                }
                1% {
                    opacity: 0 !important;
                    visibility: visible;
                }
                100% { 
                    opacity: 1;
                    visibility: visible;
                }
            }
            
            /* Removed complex black mode animation - using simple fade for performance */
            
            /* Fade-out animation - simplified */
            .hotspot-echo-fade-out {
                animation: hotspot-simple-fade-out 0.3s ease-out forwards !important;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation: hotspot-simple-fade-out 0.3s ease-out forwards !important;":""}
            }
            
            .hotspot-echo-fade-out.black-mode path {
                animation: hotspot-simple-fade-out 0.3s ease-out forwards !important;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation: hotspot-simple-fade-out 0.3s ease-out forwards !important;":""}
            }
            
            @keyframes hotspot-simple-fade-out {
                from { opacity: 1; }
                to { opacity: 0; }
            }
            
            @-webkit-keyframes hotspot-simple-fade-out {
                from { opacity: 1; }
                to { opacity: 0; }
            }
        `,n=`
            /* Adaptive contrast styles based on background luminance */
            .hotspot-echo-reveal.contrast-adaptive-dark path {
                stroke: rgba(255, 255, 255, 0.95) !important;
                stroke-width: 2px !important;
                filter: drop-shadow(0 0 6px rgba(255, 255, 255, 0.9)) !important;
            }
            
            .hotspot-echo-reveal.contrast-adaptive-light path {
                stroke: rgba(0, 0, 0, 0.95) !important;
                stroke-width: 2px !important;
                filter: drop-shadow(0 0 6px rgba(0, 0, 0, 0.9)) !important;
            }
            
            .hotspot-echo-reveal.contrast-adaptive-medium path {
                stroke: rgba(255, 255, 255, 1) !important;
                stroke-width: 2.5px !important;
                filter: 
                    drop-shadow(0 0 2px rgba(0, 0, 0, 1))
                    drop-shadow(0 0 6px rgba(255, 255, 255, 0.9)) !important;
            }
            
            .hotspot-echo-reveal.contrast-adaptive-complex path {
                stroke: rgba(255, 255, 255, 1) !important;
                stroke-width: 3px !important;
                filter: 
                    drop-shadow(1px 1px 1px rgba(0, 0, 0, 1))
                    drop-shadow(-1px -1px 1px rgba(0, 0, 0, 1))
                    drop-shadow(0 0 8px rgba(255, 255, 255, 1)) !important;
            }
            
            /* Mobile optimizations */
            @media (max-width: 768px) {
                .hotspot-echo-reveal.contrast-adaptive-complex path {
                    filter: drop-shadow(0 0 6px rgba(255, 255, 255, 1)) !important;
                }
                
                /* Reduce animation complexity on mobile */
                .css-ripple {
                    animation-duration: ${this.duration*.8}ms !important;
                }
                
                .hotspot-echo-reveal {
                    animation-duration: 0.25s !important;
                    ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-duration: 0.25s !important;":""}
                }
                
                /* Force layer creation for smoother animations */
                .css-ripple {
                    transform: translate3d(0, 0, 0);
                    -webkit-transform: translate3d(0, 0, 0);
                }
                
                /* Hotspots use will-change instead to avoid transform conflicts */
                .hotspot-echo-reveal {
                    will-change: transform, opacity;
                    transform-origin: center center !important;
                    -webkit-transform-origin: center center !important;
                }
            }
        `;t.textContent=e+o+i+s+n,document.head.appendChild(t)}createRipple(t,e,o=!1){if(o)return this.createMultiLayerRipple(t,e);if(this.activeRipples.size>=this.maxRipples){const r=this.activeRipples.values().next().value;r&&this.removeRipple(r.id)}const i=`ripple-${this.rippleIdCounter++}`,s=document.createElement("div");s.className="css-ripple",s.id=i,this.performanceMonitor.getMetrics().performanceState!=="optimal"&&s.classList.add("low-performance");const a=this.radius*2;return s.style.width=`${a}px`,s.style.height=`${a}px`,s.style.left=`${t}px`,s.style.top=`${e}px`,this.container.appendChild(s),this.activeRipples.set(i,{id:i,element:s,startTime:performance.now()}),setTimeout(()=>{this.removeRipple(i)},this.duration),this.performanceMonitor.rippleCreated(),console.log("[CSSRippleRenderer] Created ripple at",{x:t,y:e},"id:",i),i}createMultiLayerRipple(t,e){if(this.activeRipples.size>=this.maxRipples){const n=this.activeRipples.values().next().value;n&&this.removeRipple(n.id)}const o=`ripple-multi-${this.rippleIdCounter++}`,i=document.createElement("div");return i.className="css-ripple-multi",i.id=o,[{class:"ripple-layer ripple-layer-outer",size:this.radius*2.2},{class:"ripple-layer ripple-layer-inner",size:this.radius*2},{class:"ripple-layer ripple-layer-core",size:this.radius*1.5}].forEach(n=>{const a=document.createElement("div");a.className=n.class,a.style.width=`${n.size}px`,a.style.height=`${n.size}px`,i.appendChild(a)}),i.style.left=`${t}px`,i.style.top=`${e}px`,this.container.appendChild(i),this.activeRipples.set(o,{id:o,element:i,startTime:performance.now()}),setTimeout(()=>{this.removeRipple(o)},this.duration),this.performanceMonitor.rippleCreated(),console.log("[CSSRippleRenderer] Created multi-layer ripple at",{x:t,y:e},"id:",o),o}removeRipple(t){const e=this.activeRipples.get(t);e&&(e.element&&e.element.parentNode&&e.element.remove(),this.activeRipples.delete(t),this.performanceMonitor.rippleCompleted(),this.onRippleComplete(t))}handlePerformanceChange(t,e){console.log(`[CSSRippleRenderer] Performance state: ${t}`,e.fps),t==="critical"?(this.maxRipples=1,this.duration=600):t==="degraded"?(this.maxRipples=2,this.duration=700):(this.maxRipples=3,this.duration=800)}handleCriticalPerformance(t){console.warn("[CSSRippleRenderer] Critical performance detected!",t),this.activeRipples.size>1&&Array.from(this.activeRipples.keys()).slice(0,-1).forEach(o=>this.removeRipple(o))}getFPS(){return this.performanceMonitor.getMetrics().fps.current}getPerformanceMetrics(){return this.performanceMonitor.getMetrics()}cleanup(){this.activeRipples.forEach(t=>{t.element&&t.element.parentNode&&t.element.remove()}),this.activeRipples.clear(),this.performanceMonitor.stop()}destroy(){this.cleanup(),this.performanceMonitor.destroy(),this.container&&this.container.parentNode&&(this.container.remove(),this.container=null);const t=document.getElementById("css-ripple-styles");t&&t.remove(),console.log("[CSSRippleRenderer] Destroyed")}}class F{constructor(t={}){this.viewer=t.viewer,this.container=t.container||this.viewer.container,this.config={animationDuration:600,rippleDuration:400,fadeInDuration:300,staggerDelay:30,maxHotspots:8,dpr:Math.min(window.devicePixelRatio||1,2)},this.canvas=null,this.ctx=null,this.isAnimating=!1,this.animations=[],this.animationFrame=null,this.viewportHandler=null,this.initialize()}initialize(){this.canvas=document.createElement("canvas"),this.canvas.className="temporal-echo-canvas",this.canvas.id="temporal-echo-canvas",this.ctx=this.canvas.getContext("2d",{alpha:!0,desynchronized:!0,willReadFrequently:!1}),this.updateCanvasSize(),Object.assign(this.canvas.style,{position:"fixed",top:"0",left:"0",pointerEvents:"none",zIndex:"2147483647",opacity:"0",display:"block",transform:"translateZ(0)",willChange:"opacity"}),document.body.appendChild(this.canvas),this.setupViewportSync(),this.resizeHandler=()=>this.updateCanvasSize(),window.addEventListener("resize",this.resizeHandler);const t=this.canvas.getBoundingClientRect();console.log("[CanvasHotspotRenderer] Initialized with size:",t.width,"x",t.height,"DPR:",this.config.dpr),console.log("[CanvasHotspotRenderer] Canvas attached to:",this.canvas.parentElement.tagName)}updateCanvasSize(){const t=document.documentElement.clientWidth||window.innerWidth,e=document.documentElement.clientHeight||window.innerHeight;this.canvas.width=t*this.config.dpr,this.canvas.height=e*this.config.dpr,this.canvas.style.width=t+"px",this.canvas.style.height=e+"px",this.ctx.scale(this.config.dpr,this.config.dpr),console.log("[CanvasHotspotRenderer] Canvas resized to:",t,"x",e)}setupViewportSync(){this.viewer&&(this.viewportHandler=()=>{this.isAnimating&&this.updateCanvasTransform()},this.viewer.addHandler("update-viewport",this.viewportHandler))}updateCanvasTransform(){}startRevealAnimation(t,e){var i;if(this.isAnimating){console.warn("[CanvasHotspotRenderer] Animation already in progress");return}console.log("[CanvasHotspotRenderer] Starting reveal for",t.length,"hotspots"),console.log("[CanvasHotspotRenderer] Tap point:",e),console.log("[CanvasHotspotRenderer] Canvas visibility check:",{display:this.canvas.style.display,opacity:this.canvas.style.opacity,zIndex:this.canvas.style.zIndex,parentElement:(i=this.canvas.parentElement)==null?void 0:i.tagName,canvasRect:this.canvas.getBoundingClientRect(),computed:window.getComputedStyle(this.canvas)}),this.isAnimating=!0,this.animations=[],this.canvas.style.opacity="1",this.canvas.style.display="block",console.log("[CanvasHotspotRenderer] Starting animation for",t.length,"hotspots at tap point:",e);const o=performance.now();this.animations.push({type:"ripple",center:this.imageToCanvas(e),startTime:o,duration:this.config.rippleDuration,maxRadius:200}),t.forEach((s,n)=>{const a=this.calculateCenter(s);this.animations.push({type:"hotspot",center:this.imageToCanvas(a),startTime:o+n*this.config.staggerDelay,duration:this.config.fadeInDuration,hotspot:s,radius:20})}),this.animate(),setTimeout(()=>{this.transitionToSVG(t)},this.config.animationDuration)}animate(){const t=performance.now();this.ctx.clearRect(0,0,this.canvas.width/this.config.dpr,this.canvas.height/this.config.dpr);let e=!1;this.animations.forEach(o=>{const i=t-o.startTime;if(i<0){e=!0;return}if(i>o.duration)return;e=!0;const s=i/o.duration;o.type==="ripple"?this.drawRipple(o,s):o.type==="hotspot"&&this.drawHotspot(o,s)}),e&&(this.animationFrame=requestAnimationFrame(()=>this.animate()))}drawRipple(t,e){const o=t.maxRadius*this.easeOutCubic(e),i=.3*(1-e);this.ctx.save(),this.ctx.strokeStyle=`rgba(255, 255, 255, ${i})`,this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(t.center.x,t.center.y,o,0,Math.PI*2),this.ctx.stroke(),this.ctx.restore()}drawHotspot(t,e){const o=.8+.2*this.easeOutBack(e),i=this.easeInOutCubic(e);this.ctx.save(),this.ctx.strokeStyle=`rgba(255, 255, 255, ${i})`,this.ctx.lineWidth=2;const s=t.radius*o;if(this.ctx.beginPath(),this.ctx.arc(t.center.x,t.center.y,s,0,Math.PI*2),this.ctx.stroke(),e>.3){const n=i*.3;this.ctx.fillStyle=`rgba(255, 255, 255, ${n})`,this.ctx.beginPath(),this.ctx.arc(t.center.x,t.center.y,s*.7,0,Math.PI*2),this.ctx.fill()}this.ctx.restore()}transitionToSVG(t){console.log("[CanvasHotspotRenderer] Transitioning to SVG for interaction"),setTimeout(()=>{this.cleanup(),this.canvas.style.opacity="0"},2e3)}cleanup(){this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null);const t=this.canvas.width/this.config.dpr,e=this.canvas.height/this.config.dpr;this.ctx.clearRect(0,0,t,e),this.isAnimating=!1,this.animations=[],console.log("[CanvasHotspotRenderer] Cleanup complete")}imageToCanvas(t){if(!this.viewer||!t)return console.warn("[CanvasHotspotRenderer] Invalid viewer or imagePoint"),{x:200,y:200};try{const e=t.x!==void 0?t:{x:t,y:0},o=this.viewer.viewport.imageToViewportCoordinates(e.x,e.y),i=this.viewer.viewport.pixelFromPoint(o),s=this.viewer.container.getBoundingClientRect(),n=i.x+s.left,a=i.y+s.top;return console.log("[CanvasHotspotRenderer] Coordinate conversion:",{imagePoint:e,viewportPoint:o,pixelPoint:i,viewerRect:{left:s.left,top:s.top},canvasCoords:{x:n,y:a}}),{x:n,y:a}}catch(e){return console.error("[CanvasHotspotRenderer] Conversion error:",e),{x:200,y:200}}}calculateCenter(t){const e=t.hotspot||t;if(e.center)return e.center;if(e.coordinates&&Array.isArray(e.coordinates)){let i=0,s=0,n=0;for(const a of e.coordinates)Array.isArray(a)&&a.length>=2&&(i+=a[0],s+=a[1],n++);if(n>0)return{x:i/n,y:s/n}}const o=e.bbox||e.bounds;if(o){if(o.minX!==void 0)return{x:(o.minX+o.maxX)/2,y:(o.minY+o.maxY)/2};if(o.x!==void 0)return{x:o.x+(o.width||0)/2,y:o.y+(o.height||0)/2}}return e.x!==void 0&&e.y!==void 0?{x:e.x,y:e.y}:(console.warn("[CanvasHotspotRenderer] Could not calculate center for hotspot:",t),{x:200,y:200})}easeOutCubic(t){return 1-Math.pow(1-t,3)}easeOutBack(t){return 1+2.70158*Math.pow(t-1,3)+1.70158*Math.pow(t-1,2)}easeInOutCubic(t){return t<.5?4*t*t*t:1-Math.pow(-2*t+2,3)/2}destroy(){this.viewer&&this.viewportHandler&&this.viewer.removeHandler("update-viewport",this.viewportHandler),this.resizeHandler&&window.removeEventListener("resize",this.resizeHandler),this.cleanup(),this.canvas&&this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas),this.canvas=null,this.ctx=null,console.log("[CanvasHotspotRenderer] Destroyed")}}class N{constructor(t={}){this.viewer=t.viewer,this.spatialIndex=t.spatialIndex,this.config={canvasSize:512,updateThreshold:100,enabled:t.enabled!==!1,dpr:1},this.hitCanvas=null,this.hitCtx=null,this.colorMap=new Map,this.lastUpdate=0,this.isDirty=!0,this.currentBounds=null,this.metrics={lastHitTime:0,averageHitTime:0,hitCount:0,lastRenderTime:0},this.config.enabled&&this.initialize()}initialize(){this.hitCanvas=document.createElement("canvas"),this.hitCanvas.width=this.config.canvasSize,this.hitCanvas.height=this.config.canvasSize,this.hitCtx=this.hitCanvas.getContext("2d",{alpha:!1,willReadFrequently:!0,desynchronized:!1}),this.hitCtx.fillStyle="#000000",this.hitCtx.fillRect(0,0,this.config.canvasSize,this.config.canvasSize),this.viewer&&(this.viewportHandler=()=>{this.markDirty()},this.viewer.addHandler("viewport-change",this.viewportHandler)),console.log("[CanvasHitDetector] Initialized with",this.config.canvasSize,"px canvas")}markDirty(){this.isDirty=!0}updateHitCanvas(t){const e=performance.now();if(!this.isDirty&&this.currentBounds&&this.boundsEqual(t,this.currentBounds)&&e-this.lastUpdate<this.config.updateThreshold)return;const o=performance.now();if(this.hitCtx.fillStyle="#000000",this.hitCtx.fillRect(0,0,this.config.canvasSize,this.config.canvasSize),this.colorMap.clear(),!this.spatialIndex){console.warn("[CanvasHitDetector] No spatial index available");return}const i=this.spatialIndex.queryViewport(t);let s=1;for(const a of i){if(!a.coordinates)continue;const r=this.indexToColor(s);if(this.colorMap.set(r,a.id),this.drawHotspot(a,r,t),s++,s>16777215)break}this.isDirty=!1,this.currentBounds={...t},this.lastUpdate=e;const n=performance.now()-o;this.metrics.lastRenderTime=n,n>10?console.warn(`[CanvasHitDetector] Slow render: ${n.toFixed(2)}ms for ${i.length} hotspots`):console.log(`[CanvasHitDetector] Canvas updated in ${n.toFixed(2)}ms for ${i.length} hotspots`)}drawHotspot(t,e,o){const i=this.hitCtx,s=this.config.canvasSize;i.fillStyle=e,i.beginPath();const n=t.coordinates;if(t.shape==="polygon")for(let a=0;a<n.length;a++){const r=(n[a][0]-o.minX)/(o.maxX-o.minX)*s,h=(n[a][1]-o.minY)/(o.maxY-o.minY)*s;a===0?i.moveTo(r,h):i.lineTo(r,h)}else if(t.shape==="multipolygon"){const a=n[0];for(let r=0;r<a.length;r++){const h=(a[r][0]-o.minX)/(o.maxX-o.minX)*s,l=(a[r][1]-o.minY)/(o.maxY-o.minY)*s;r===0?i.moveTo(h,l):i.lineTo(h,l)}}i.closePath(),i.fill()}detectHit(t,e,o){const i=performance.now();this.updateHitCanvas(o);const s=this.config.canvasSize,n=Math.floor((t-o.minX)/(o.maxX-o.minX)*s),a=Math.floor((e-o.minY)/(o.maxY-o.minY)*s);if(n<0||n>=s||a<0||a>=s)return null;const r=this.hitCtx.getImageData(n,a,1,1).data,h=this.rgbToColor(r[0],r[1],r[2]),l=this.colorMap.get(h),c=performance.now()-i;return this.metrics.lastHitTime=c,this.metrics.hitCount++,this.metrics.averageHitTime=(this.metrics.averageHitTime*(this.metrics.hitCount-1)+c)/this.metrics.hitCount,c>2&&console.warn(`[CanvasHitDetector] Slow hit detection: ${c.toFixed(2)}ms`),l||null}findNearbyHits(t,e,o,i,s=10){const n=performance.now();this.updateHitCanvas(i);const a=this.config.canvasSize,r=(t-i.minX)/(i.maxX-i.minX)*a,h=(e-i.minY)/(i.maxY-i.minY)*a,l=o/(i.maxX-i.minX)*a,c=new Map,p=this.generateSpiralSamples(r,h,l,32);for(const[v,y]of p){if(v<0||v>=a||y<0||y>=a)continue;const d=this.hitCtx.getImageData(v,y,1,1).data,g=this.rgbToColor(d[0],d[1],d[2]),w=this.colorMap.get(g);if(w&&!c.has(w)){const C=v-r,S=y-h,x=Math.sqrt(C*C+S*S);c.set(w,x)}if(c.size>=s)break}const m=Array.from(c.entries()).sort((v,y)=>v[1]-y[1]).slice(0,s).map(v=>v[0]),u=performance.now()-n;return console.log(`[CanvasHitDetector] Found ${m.length} nearby hotspots in ${u.toFixed(2)}ms`),m}generateSpiralSamples(t,e,o,i){const s=[],n=2*Math.PI/8,a=o/4;s.push([Math.floor(t),Math.floor(e)]);for(let r=a;r<=o;r+=a)for(let h=0;h<2*Math.PI;h+=n){const l=Math.floor(t+r*Math.cos(h)),c=Math.floor(e+r*Math.sin(h));s.push([l,c])}return s}indexToColor(t){const e=t>>16&255,o=t>>8&255,i=t&255;return`#${e.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}${i.toString(16).padStart(2,"0")}`}rgbToColor(t,e,o){return`#${t.toString(16).padStart(2,"0")}${e.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}`}boundsEqual(t,e){return t.minX===e.minX&&t.minY===e.minY&&t.maxX===e.maxX&&t.maxY===e.maxY}getMetrics(){return{...this.metrics,colorMapSize:this.colorMap.size,canvasSize:this.config.canvasSize}}getDebugCanvas(){return this.hitCanvas.toDataURL()}setEnabled(t){this.config.enabled=t,t&&!this.hitCanvas&&this.initialize()}destroy(){this.viewer&&this.viewportHandler&&this.viewer.removeHandler("viewport-change",this.viewportHandler),this.hitCanvas&&(this.hitCanvas.width=0,this.hitCanvas.height=0,this.hitCanvas=null,this.hitCtx=null),this.colorMap.clear(),console.log("[CanvasHitDetector] Destroyed")}}var H={exports:{}};(function(f){(function(t){var e=function(){},o=t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.msRequestAnimationFrame||function(l){return setTimeout(l,16)};function i(){var l=this;l.reads=[],l.writes=[],l.raf=o.bind(t)}i.prototype={constructor:i,runTasks:function(l){for(var c;c=l.shift();)c()},measure:function(l,c){var p=c?l.bind(c):l;return this.reads.push(p),s(this),p},mutate:function(l,c){var p=c?l.bind(c):l;return this.writes.push(p),s(this),p},clear:function(l){return a(this.reads,l)||a(this.writes,l)},extend:function(l){if(typeof l!="object")throw new Error("expected object");var c=Object.create(this);return r(c,l),c.fastdom=this,c.initialize&&c.initialize(),c},catch:null};function s(l){l.scheduled||(l.scheduled=!0,l.raf(n.bind(null,l)))}function n(l){var c=l.writes,p=l.reads,m;try{e("flushing reads",p.length),l.runTasks(p),e("flushing writes",c.length),l.runTasks(c)}catch(u){m=u}if(l.scheduled=!1,(p.length||c.length)&&s(l),m)if(e("task errored",m.message),l.catch)l.catch(m);else throw m}function a(l,c){var p=l.indexOf(c);return!!~p&&!!l.splice(p,1)}function r(l,c){for(var p in c)c.hasOwnProperty(p)&&(l[p]=c[p])}var h=t.fastdom=t.fastdom||new i;f.exports=h})(typeof window<"u"?window:typeof k<"u"?k:globalThis)})(H);var B=H.exports;const P=I(B);class q{constructor(){this.pendingReads=[],this.pendingWrites=[],this.activeOperations=new Set,this.metrics={lastBatchTime:0,averageBatchTime:0,batchCount:0},console.log("[BatchDOMManager] Initialized for Phase 3 optimization")}batchRevealHotspots(t,e={}){const o=performance.now(),{staggerDelay:i=30,revealDuration:s=2e3,borderStyle:n="default"}=e;console.log(`[BatchDOMManager] Batching reveal for ${t.length} hotspots`);const a=new Array(t.length);t.forEach((r,h)=>{P.measure(()=>{a[h]={element:r,originalOpacity:r.style.opacity||"",originalVisibility:r.style.visibility||"",wasHidden:r.classList.contains("hotspot-hidden"),wasVisible:r.classList.contains("hotspot-visible"),currentTransform:window.getComputedStyle(r).transform,rect:r.getBoundingClientRect()}})}),P.mutate(()=>{t.forEach((h,l)=>{const p=`
                    opacity: 1;
                    visibility: visible;
                    display: block;
                    animation-delay: ${l*i}ms;
                    transform-origin: center center;
                    will-change: transform, opacity;
                `;h.style.cssText+=p,h.classList.remove("hotspot-hidden"),h.classList.add("hotspot-visible","hotspot-echo-reveal"),n!=="default"&&h.classList.add(`border-${n}`),h.setAttribute("data-hotspot-revealed","true"),this.activeOperations.add({element:h,measurement:a[l],borderStyle:n})});const r=performance.now()-o;this.updateMetrics(r),console.log(`[BatchDOMManager] Batch reveal completed in ${r.toFixed(2)}ms`),this.scheduleBatchHide(s)})}scheduleBatchHide(t){setTimeout(()=>{this.batchHideHotspots()},t)}batchHideHotspots(){if(this.activeOperations.size===0)return;const t=performance.now(),e=Array.from(this.activeOperations);console.log(`[BatchDOMManager] Batching hide for ${e.length} hotspots`),P.mutate(()=>{e.forEach(({element:i,measurement:s,borderStyle:n})=>{i.classList.remove("hotspot-echo-reveal","hotspot-echo-active","hotspot-echo-fade-out"),n!=="default"&&i.classList.remove(`border-${n}`),i.style.opacity=s.originalOpacity,i.style.visibility=s.originalVisibility,i.style.display="",i.style.animationDelay="",i.style.willChange="auto",s.wasHidden&&i.classList.add("hotspot-hidden"),s.wasVisible||i.classList.remove("hotspot-visible"),i.removeAttribute("data-hotspot-revealed")}),this.activeOperations.clear();const o=performance.now()-t;console.log(`[BatchDOMManager] Batch hide completed in ${o.toFixed(2)}ms`)})}batchUpdateVisibility(t){const e=performance.now();P.mutate(()=>{t.forEach(({element:i,visible:s})=>{s?(i.style.opacity="1",i.style.visibility="visible",i.classList.remove("hotspot-hidden"),i.classList.add("hotspot-visible")):(i.style.opacity="0",i.style.visibility="hidden",i.classList.add("hotspot-hidden"),i.classList.remove("hotspot-visible"))});const o=performance.now()-e;console.log(`[BatchDOMManager] Visibility update for ${t.length} elements in ${o.toFixed(2)}ms`)})}batchApplyTransforms(t){P.mutate(()=>{t.forEach(({element:e,transform:o})=>{e.style.transform=o,e.style.webkitTransform=o})})}batchMeasure(t,e){const o=new Array(t.length);t.forEach((i,s)=>{P.measure(()=>{o[s]={element:i,rect:i.getBoundingClientRect(),computed:window.getComputedStyle(i)}})}),P.mutate(()=>{e(o)})}updateMetrics(t){this.metrics.lastBatchTime=t,this.metrics.batchCount++,this.metrics.averageBatchTime=(this.metrics.averageBatchTime*(this.metrics.batchCount-1)+t)/this.metrics.batchCount,t>5&&console.warn(`[BatchDOMManager] Batch operation exceeded 5ms target: ${t.toFixed(2)}ms`)}getMetrics(){return{...this.metrics,activeOperations:this.activeOperations.size}}clear(){P.clear(),this.activeOperations.size>0&&this.batchHideHotspots(),this.pendingReads=[],this.pendingWrites=[]}destroy(){this.clear(),this.activeOperations.clear(),console.log("[BatchDOMManager] Destroyed")}}class G{constructor(t){this.viewer=t,this.canvas=null,this.context=null,this.cache=new Map,this.initializeCanvas()}initializeCanvas(){this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d",{willReadFrequently:!0})}calculateLuminance(t,e,o){const[i,s,n]=[t,e,o].map(a=>(a/=255,a<=.03928?a/12.92:Math.pow((a+.055)/1.055,2.4)));return i*.2126+s*.7152+n*.0722}calculateContrastRatio(t,e){const o=Math.max(t,e),i=Math.min(t,e);return(o+.05)/(i+.05)}async sampleBackgroundLuminance(t,e,o=50){const i=`${Math.round(t)}_${Math.round(e)}_${o}`;if(this.cache.has(i))return this.cache.get(i);try{if(!await this.captureViewportArea(t,e,o))return this.getDefaultLuminanceData();const n=this.getSamplePoints(o),a=[];for(const m of n){const u=o+m.x,v=o+m.y,y=this.context.getImageData(u,v,1,1).data,d=this.calculateLuminance(y[0],y[1],y[2]);a.push(d)}const r=a.reduce((m,u)=>m+u,0)/a.length,h=Math.min(...a),l=Math.max(...a),c=this.calculateVariance(a,r),p={averageLuminance:r,minLuminance:h,maxLuminance:l,variance:c,isDark:r<.5,isHighContrast:l-h>.5,recommendedEffect:this.selectHotspotEffect(r,c)};return this.cache.set(i,p),p}catch(s){return console.error("Error sampling background luminance:",s),this.getDefaultLuminanceData()}}async captureViewportArea(t,e,o){return null}getSamplePoints(t){const e=[];e.push({x:0,y:0});for(let s=1;s<=3;s++){const n=t*s/3;for(let a=0;a<8;a++){const r=a/8*Math.PI*2;e.push({x:Math.cos(r)*n,y:Math.sin(r)*n})}}return e}calculateVariance(t,e){return t.map(i=>Math.pow(i-e,2)).reduce((i,s)=>i+s,0)/t.length}selectHotspotEffect(t,e){return e>.1?"contrast-adaptive-complex":t<.3?"contrast-adaptive-dark":t>.7?"contrast-adaptive-light":"contrast-adaptive-medium"}getDefaultLuminanceData(){return{averageLuminance:.5,minLuminance:0,maxLuminance:1,variance:.1,isDark:!1,isHighContrast:!0,recommendedEffect:"contrast-adaptive-medium"}}clearCache(){this.cache.clear()}getCacheSize(){return this.cache.size}}class X{constructor(){this.shadowCache=new Map,this.svgNamespace="http://www.w3.org/2000/svg",this.initialized=!1,this.shadowConfigs={echoReveal:{blur:4,color:"rgba(255, 255, 255, 0.8)",id:"echo-reveal-shadow"},echoIntense:{blur:10,color:"rgba(255, 255, 255, 0.8)",id:"echo-intense-shadow"},hover:{blur:8,color:"rgba(255, 255, 255, 0.6)",id:"hover-shadow"}}}initialize(){this.initialized||(console.log("[ShadowSpriteManager] Initializing pre-rendered shadows"),this.createShadowContainer(),Object.entries(this.shadowConfigs).forEach(([t,e])=>{this.createShadowFilter(e),this.shadowCache.set(t,e.id)}),this.initialized=!0,console.log("[ShadowSpriteManager] Shadow sprites initialized"))}createShadowContainer(){if(document.getElementById("shadow-sprite-defs"))return;const t=document.createElementNS(this.svgNamespace,"svg");t.id="shadow-sprite-defs",t.style.position="absolute",t.style.width="0",t.style.height="0",t.style.visibility="hidden",t.setAttribute("aria-hidden","true");const e=document.createElementNS(this.svgNamespace,"defs");t.appendChild(e),document.body.appendChild(t),this.defsContainer=e}createShadowFilter(t){const e=document.createElementNS(this.svgNamespace,"filter");e.id=t.id,e.setAttribute("x","-50%"),e.setAttribute("y","-50%"),e.setAttribute("width","200%"),e.setAttribute("height","200%");const o=document.createElementNS(this.svgNamespace,"feGaussianBlur");o.setAttribute("in","SourceAlpha"),o.setAttribute("stdDeviation",t.blur),o.setAttribute("result","blur");const i=document.createElementNS(this.svgNamespace,"feColorMatrix");i.setAttribute("in","blur"),i.setAttribute("type","matrix");const s=this.parseRGBA(t.color),n=`0 0 0 0 ${s.r} 
                       0 0 0 0 ${s.g} 
                       0 0 0 0 ${s.b} 
                       0 0 0 ${s.a} 0`;i.setAttribute("values",n),i.setAttribute("result","coloredBlur");const a=document.createElementNS(this.svgNamespace,"feMerge"),r=document.createElementNS(this.svgNamespace,"feMergeNode");r.setAttribute("in","coloredBlur");const h=document.createElementNS(this.svgNamespace,"feMergeNode");h.setAttribute("in","SourceGraphic"),a.appendChild(r),a.appendChild(h),e.appendChild(o),e.appendChild(i),e.appendChild(a),this.defsContainer.appendChild(e)}parseRGBA(t){const e=t.match(/rgba?\((\d+),\s*(\d+),\s*(\d+),?\s*([0-9.]+)?\)/);return e?{r:parseInt(e[1])/255,g:parseInt(e[2])/255,b:parseInt(e[3])/255,a:e[4]?parseFloat(e[4]):1}:{r:1,g:1,b:1,a:1}}applyShadow(t,e){this.initialized||this.initialize();const o=this.shadowCache.get(e);if(!o){console.warn(`[ShadowSpriteManager] Unknown shadow type: ${e}`);return}t.style.filter=`url(#${o})`,t.dataset.willChangeApplied||(t.style.willChange="filter",t.dataset.willChangeApplied="true")}removeShadow(t){t.style.filter="",t.dataset.willChangeApplied&&setTimeout(()=>{t.style.willChange="auto",delete t.dataset.willChangeApplied},100)}applyShadowBatch(t,e){this.initialized||this.initialize();const o=this.shadowCache.get(e);o&&requestAnimationFrame(()=>{t.forEach(i=>{i.style.filter=`url(#${o})`})})}destroy(){const t=document.getElementById("shadow-sprite-defs");t&&t.remove(),this.shadowCache.clear(),this.initialized=!1}}const D=new X;function Y(f,t){if(!f)return;const e=f.getBoundingClientRect(),o=e.left+e.width/2,i=e.top+e.height/2,s=document.createElement("div");s.className="hotspot-center-debug",s.style.cssText=`
        position: fixed;
        width: 10px;
        height: 10px;
        background: red;
        border: 2px solid white;
        border-radius: 50%;
        left: ${o-7}px;
        top: ${i-7}px;
        z-index: 99999;
        pointer-events: none;
        box-shadow: 0 0 5px rgba(0,0,0,0.5);
    `;const n=document.createElement("div");n.style.cssText=`
        position: absolute;
        top: -20px;
        left: 50%;
        transform: translateX(-50%);
        background: rgba(0,0,0,0.8);
        color: white;
        padding: 2px 6px;
        font-size: 10px;
        white-space: nowrap;
        border-radius: 3px;
    `,n.textContent=t.substring(0,8),s.appendChild(n),document.body.appendChild(s);let a=0;const r=()=>{a++;const h=f.getBoundingClientRect(),l=h.left+h.width/2,c=h.top+h.height/2;s.style.left=`${l-7}px`,s.style.top=`${c-7}px`;const p=Math.abs(l-o),m=Math.abs(c-i);(p>1||m>1)&&(console.warn(`[HotspotDebug] Position shift detected for ${t}:`,{deltaX:p.toFixed(2),deltaY:m.toFixed(2),frame:a,originalCenter:{x:o,y:i},newCenter:{x:l,y:c}}),s.style.background="yellow",s.style.boxShadow="0 0 10px red"),a<60?requestAnimationFrame(r):setTimeout(()=>{s.remove()},1e3)};requestAnimationFrame(r)}window.enableHotspotPositionDebug=()=>{window.hotspotPositionDebugEnabled=!0,console.log("[HotspotDebug] Position debugging enabled. Red dots will show hotspot centers during reveal.")};window.disableHotspotPositionDebug=()=>{window.hotspotPositionDebugEnabled=!1,document.querySelectorAll(".hotspot-center-debug").forEach(f=>f.remove()),console.log("[HotspotDebug] Position debugging disabled.")};class W{constructor(t={}){this.viewer=t.viewer,this.eventCoordinator=t.eventCoordinator,this.hotspotRenderer=t.hotspotRenderer,this.stateManager=t.stateManager,this.spatialIndex=t.spatialIndex,this.config={echoRadius:t.echoRadius||200,echoDelay:t.echoDelay||0,echoDuration:t.echoDuration||800,maxSimultaneous:t.maxSimultaneous||10,staggerDelay:t.staggerDelay||12,revealDuration:t.revealDuration||2e3,enabled:t.enabled!==!1,mobileMaxHotspots:t.mobileMaxHotspots||8,useAquaticEffect:!1,useCanvasAnimation:!1,useAdjacentSelection:t.useAdjacentSelection!==!1,adjacencyThreshold:t.adjacencyThreshold||50},this.activeEchoes=new Set,this.echoAnimations=new Map,this.spatialIndexReady=!1,this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,this.canvasRenderer=null,this.isRevealing=!1,this.batchDOMManager=null,this.useBatchDOM=t.useBatchDOM!==!1,this.hitDetector=null,this.useCanvasHitDetection=t.useCanvasHitDetection!==!1,this.initializeGestureAdapter(),this.initializeRippleRenderer(),this.initializeCanvasRenderer(),this.initializeBatchDOMManager(),this.initializeHitDetector(),this.isMobile&&D.initialize(),this.initializeContrastDetection(),this.frameCount=0,this.lastFPSCheck=performance.now(),this.currentFPS=60,console.log("[TemporalEchoController] Initialized",this.config),window.temporalEchoController=this,window.debugRevealHotspot=e=>{const i={hotspot:{id:e},centerX:100,centerY:100};this.revealSingleHotspot(i,{},0)},window.debugShowAllHotspots=()=>{const e=document.querySelectorAll("[data-hotspot-id]");console.log(`[Debug] Found ${e.length} hotspot elements`),e.forEach((o,i)=>{i<5&&console.log(`[Debug] Hotspot ${i}:`,{id:o.getAttribute("data-hotspot-id"),tagName:o.tagName,className:o.className,opacity:window.getComputedStyle(o).opacity,visibility:window.getComputedStyle(o).visibility,display:window.getComputedStyle(o).display})})}}initializeGestureAdapter(){this.gestureAdapter=new $({eventCoordinator:this.eventCoordinator,viewer:this.viewer,onQuickTap:this.handleQuickTap.bind(this)}),this.config.enabled&&this.gestureAdapter.enable()}initializeRippleRenderer(){this.rippleRenderer=new L({viewer:this.viewer,radius:this.config.echoRadius,duration:this.config.echoDuration,maxRipples:3,onRippleComplete:this.handleRippleComplete.bind(this)}),this.config.enabled&&this.rippleRenderer.initialize(),window.cssRippleRenderer=this.rippleRenderer}initializeCanvasRenderer(){if(!this.config.useCanvasAnimation||!this.isMobile){console.log("[TemporalEchoController] Canvas animation disabled or not mobile");return}this.canvasRenderer=new F({viewer:this.viewer,container:this.viewer.container}),window.temporalEchoController=this,console.log("[TemporalEchoController] Canvas renderer initialized for hybrid animations")}initializeContrastDetection(){this.contrastDetection=new G(this.viewer),window.contrastDetection=this.contrastDetection}initializeBatchDOMManager(){if(!this.useBatchDOM||!this.isMobile){console.log("[TemporalEchoController] Batch DOM disabled or not mobile");return}this.batchDOMManager=new q,window.batchDOMManager=this.batchDOMManager,console.log("[TemporalEchoController] BatchDOMManager initialized for Phase 3 optimization")}initializeHitDetector(){if(!this.useCanvasHitDetection||!this.isMobile){console.log("[TemporalEchoController] Canvas hit detection disabled or not mobile");return}this.hitDetector=new N({viewer:this.viewer,spatialIndex:this.spatialIndex,enabled:!0}),window.hitDetector=this.hitDetector,console.log("[TemporalEchoController] CanvasHitDetector initialized for Phase 4 optimization")}handleQuickTap(t){if(console.log("[TemporalEchoController] handleQuickTap called, enabled:",this.config.enabled),!this.config.enabled)return console.log("[TemporalEchoController] Echo disabled, skipping"),!1;if(!this.isMobile)return console.log("[TemporalEchoController] Not on mobile, skipping echo"),!1;const e=this.viewer.element.getBoundingClientRect(),o=new E.Point(t.x-e.left,t.y-e.top),i=this.viewer.viewport.pointFromPixel(o),s=this.viewer.viewport.viewportToImageCoordinates(i),n=window.nativeHotspotRenderer&&window.nativeHotspotRenderer.engine.findSmallestHotspotAtPoint(s);if(n&&this.isHotspotRevealed(n.id))return console.log("[TemporalEchoController] Tapped on revealed hotspot, letting click handler take over:",n.id),!1;console.log("[TemporalEchoController] Quick tap detected on mobile, triggering echo",t),this.eventCoordinator.emit(this.eventCoordinator.eventTypes.ECHO_TAP,{x:t.x,y:t.y,viewportX:t.viewportX,viewportY:t.viewportY});const a=this.findHotspotsInRadius(t,this.config.echoRadius);if(this.canvasRenderer&&this.config.useCanvasAnimation&&a.length>0){console.log(`[TemporalEchoController] Using Canvas renderer for ${a.length} hotspots`),this.isRevealing=!0;const r={x:s.x,y:s.y};this.canvasRenderer.startRevealAnimation(a,r),setTimeout(()=>{this.revealHotspotsSVG(a,t),setTimeout(()=>{this.isRevealing=!1,window.nativeHotspotRenderer&&window.nativeHotspotRenderer.updateVisibility()},400)},600)}else this.rippleRenderer.createRipple(t.x,t.y),a.length>0?(console.log(`[TemporalEchoController] Found ${a.length} hotspots in radius (CSS fallback)`),this.revealHotspots(a,t)):console.log("[TemporalEchoController] No hotspots found in echo radius");return this.updateFPS(),!0}buildSpatialIndex(){if(!this.spatialIndex){console.warn("[TemporalEchoController] SpatialIndex not provided, skipping build");return}console.log("[TemporalEchoController] Building Flatbush spatial index for hotspots");const t=performance.now(),e=this.stateManager.getAllOverlays(),o=[];e.forEach((s,n)=>{const a=s.hotspot;!a||!a.coordinates||a.coordinates.length===0||o.push({id:n,shape:a.shape,coordinates:a.coordinates,hotspot:a,overlayData:s})}),this.spatialIndex.loadHotspots(o),this.spatialIndexReady=!0;const i=performance.now()-t;console.log(`[TemporalEchoController] Flatbush index built with ${o.length} hotspots in ${i.toFixed(2)}ms`)}findHotspotsInRadius(t,e){if(this.hitDetector&&this.useCanvasHitDetection&&this.isMobile&&!this.config.useAdjacentSelection){const o=this.canvasHitSearch(t,e);if(o&&o.length>0)return console.log("[TemporalEchoController] Using Canvas hit detection (Phase 4)"),o}return this.spatialIndexReady&&this.spatialIndex?this.spatialIndexSearch(t,e,this.config.useAdjacentSelection):!this.spatialIndexReady&&this.spatialIndex&&(this.buildSpatialIndex(),this.spatialIndexReady)?this.spatialIndexSearch(t,e,this.config.useAdjacentSelection):this.linearHotspotSearch(t,e)}canvasHitSearch(t,e){const o=performance.now(),i=this.viewer.element.getBoundingClientRect(),s=new E.Point(t.x-i.left,t.y-i.top),n=this.viewer.viewport.pointFromPixel(s),a=this.viewer.viewport.viewportToImageCoordinates(n),r=this.viewer.viewport.getBounds(),h=this.viewer.viewport.viewportToImageCoordinates(r.x,r.y),l=this.viewer.viewport.viewportToImageCoordinates(r.x+r.width,r.y+r.height),c={minX:h.x,minY:h.y,maxX:l.x,maxY:l.y},p=this.viewer.viewport.getZoom(),m=this.viewer.viewport.getContainerSize().x,v=this.viewer.world.getItemAt(0).getContentSize().x/m/p,y=e*v;console.log("[TemporalEchoController] Canvas hit - Radius conversion:",{radiusInPixels:e,radiusInImageSpace:y,tapImagePoint:{x:a.x,y:a.y}});const d=this.isMobile?this.config.mobileMaxHotspots:this.config.maxSimultaneous,g=this.hitDetector.findNearbyHits(a.x,a.y,y,c,d),w=[];for(const S of g){const x=this.spatialIndex.getHotspotById(S);if(x){const M=x.center.x-a.x,T=x.center.y-a.y,R=Math.sqrt(M*M+T*T);w.push({id:x.id,distance:R,hotspot:x.hotspot||x})}}const C=performance.now()-o;return C>2?console.warn(`[TemporalEchoController] Canvas hit search exceeded 2ms: ${C.toFixed(2)}ms`):console.log(`[TemporalEchoController] Ultra-fast Canvas hit: ${C.toFixed(2)}ms for ${w.length} hotspots`),w}spatialIndexSearch(t,e,o=!0){const i=performance.now(),s=this.viewer.element.getBoundingClientRect(),n=new E.Point(t.x-s.left,t.y-s.top),a=this.viewer.viewport.pointFromPixel(n),r=this.viewer.viewport.viewportToImageCoordinates(a),h=this.isMobile?this.config.mobileMaxHotspots:this.config.maxSimultaneous;let l;if(o&&this.spatialIndex.findAdjacentHotspots){console.log("[TemporalEchoController] Using adjacent hotspot selection for contiguous group");const u=50,v=new E.Point(n.x+u,n.y),y=this.viewer.viewport.pointFromPixel(v),d=this.viewer.viewport.viewportToImageCoordinates(y),g=Math.abs(d.x-r.x);l=this.spatialIndex.findAdjacentHotspots(r.x,r.y,h,g)}else{console.log("[TemporalEchoController] Using distance-based hotspot selection");const u=n,v=new E.Point(n.x+e,n.y),y=this.viewer.viewport.pointFromPixel(u),d=this.viewer.viewport.pointFromPixel(v),g=this.viewer.viewport.viewportToImageCoordinates(y),w=this.viewer.viewport.viewportToImageCoordinates(d),C=Math.abs(w.x-g.x);l=this.spatialIndex.findNearbyHotspots(r.x,r.y,C,h)}const c=l.map(u=>({id:u.id,distance:Math.sqrt(Math.pow(u.center.x-r.x,2)+Math.pow(u.center.y-r.y,2)),hotspot:u.hotspot||u})),p=performance.now()-i,m=o?"adjacent":"distance";return p>5?console.warn(`[TemporalEchoController] Slow ${m} search: ${p.toFixed(2)}ms for ${c.length} hotspots`):console.log(`[TemporalEchoController] Fast ${m} search: ${p.toFixed(2)}ms for ${c.length} hotspots`),c}linearHotspotSearch(t,e){const o=[],i=this.viewer.element.getBoundingClientRect(),s=new E.Point(t.x-i.left,t.y-i.top),n=this.viewer.viewport.pointFromPixel(s),a=this.viewer.viewport.viewportToImageCoordinates(n);console.log("[TemporalEchoController] Searching for hotspots at:",{pixelCoords:{x:t.x,y:t.y},viewportCoords:{x:n.x,y:n.y},imageCoords:{x:a.x,y:a.y}});const r=this.stateManager.getAllOverlays();console.log("[TemporalEchoController] Total overlays available:",r.size);let h=0;r.forEach((c,p)=>{const m=c.hotspot;if(!m||!m.coordinates||m.coordinates.length===0)return;h++;let u=0,v=0;const y=m.shape==="multipolygon"?m.coordinates[0]:m.coordinates;y.forEach(([M,T])=>{u+=M,v+=T}),u/=y.length,v/=y.length;const d=u-a.x,g=v-a.y,w=Math.sqrt(d*d+g*g),C=this.viewer.viewport.pointFromPixel(new E.Point(e,0)),S=this.viewer.viewport.viewportToImageCoordinates(C),x=Math.abs(S.x);if(h<=3&&console.log(`[TemporalEchoController] Hotspot ${p}:`,{hotspotCenter:{x:u,y:v},tapImagePoint:{x:a.x,y:a.y},distanceInImageSpace:w,radiusInImageSpace:x,inRadius:w<=x}),w<=x){const M=this.viewer.viewport.imageToViewportCoordinates(new E.Point(u,v)),T=this.viewer.viewport.pixelFromPoint(M);o.push({hotspot:m,distance:w,centerX:T.x+i.left,centerY:T.y+i.top})}}),console.log(`[TemporalEchoController] Checked ${h} hotspots, found ${o.length} in radius`),o.sort((c,p)=>c.distance-p.distance);const l=this.isMobile?this.config.mobileMaxHotspots:this.config.maxSimultaneous;return o.slice(0,l)}revealHotspots(t,e){this.eventCoordinator.emit(this.eventCoordinator.eventTypes.ECHO_REVEAL_START,{count:t.length,origin:e});const o=t,i=o.map(n=>n.hotspot.id);window.nativeHotspotRenderer&&window.nativeHotspotRenderer.activeHotspotManager&&(console.log("[TemporalEchoController] Preparing",i.length,"hotspots for reveal animation"),window.nativeHotspotRenderer.activeHotspotManager.forceShowHotspots(i,{maxForceShow:this.isMobile?this.config.mobileMaxHotspots:this.config.maxSimultaneous})),console.log("[TemporalEchoController] Using standard staggered animation"),o.forEach((n,a)=>{setTimeout(()=>{this.revealSingleHotspot(n,e,a)},a*this.config.staggerDelay)});const s=this.config.revealDuration+300+o.length*this.config.staggerDelay;setTimeout(()=>{this.eventCoordinator.emit(this.eventCoordinator.eventTypes.ECHO_REVEAL_END,{count:o.length})},s)}applyWillChange(t){t.dataset.willChangeApplied||(t.style.willChange="transform, opacity",t.dataset.willChangeApplied="true")}removeWillChange(t,e=100){t.dataset.willChangeApplied&&setTimeout(()=>{t.style.willChange="auto",delete t.dataset.willChangeApplied},e)}findHotspotElement(t){let e=null;const o=this.stateManager.getOverlay(t);if(o&&o.element&&(e=o.element),!e){const i=document.querySelectorAll(".openseadragon-svg-overlay, .hotspot-overlay-svg, svg");for(const s of i)if(e=s.querySelector(`[data-hotspot-id="${t}"]`),e)break}if(e||(e=document.getElementById(`hotspot-${t}`)),!e){const i=document.querySelectorAll(`g[data-hotspot-id="${t}"]`);i.length>0&&(e=i[0])}return e}revealSingleHotspot(t,e,o){var y;const i=t.hotspot||t;console.log("[TemporalEchoController] revealSingleHotspot called for:",i.id);let s=null;const n=this.stateManager.getOverlay(i.id);if(n&&n.element&&(s=n.element,console.log("[TemporalEchoController] Found element via state manager")),!s){const d=document.querySelectorAll(".openseadragon-svg-overlay, .hotspot-overlay-svg, svg");for(const g of d)if(s=g.querySelector(`[data-hotspot-id="${i.id}"]`),s){console.log("[TemporalEchoController] Found element in container:",g.className);break}}if(s||(s=document.getElementById(`hotspot-${i.id}`),s&&console.log("[TemporalEchoController] Found element by ID")),!s){const d=document.querySelectorAll(`g[data-hotspot-id="${i.id}"]`);d.length>0&&(s=d[0],console.log("[TemporalEchoController] Found g element with hotspot id"))}if(!s){console.warn("[TemporalEchoController] No element found for hotspot",i.id);return}const a=s.style.opacity||"",r=s.style.visibility||"",h=s.classList.contains("hotspot-hidden"),l=s.classList.contains("hotspot-visible"),c=["blackOnBlack","pigmentLinerNeutral","pigmentLinerWarm","pigmentLinerCool"],p=(y=window.nativeHotspotRenderer)==null?void 0:y.currentPalette,m=c.includes(p);if(console.log("[TemporalEchoController] Current palette:",p,"isDarkMode:",m),this.activeEchoes.has(i.id)){console.log("[TemporalEchoController] Hotspot already animating, skipping:",i.id);return}s.classList.remove("hotspot-echo-reveal","hotspot-echo-fade-out","black-mode"),s.style.animationDelay="",s.tagName.toLowerCase()==="g"&&s.querySelectorAll("path, polygon, polyline").forEach(g=>{g.style.animationDelay=""}),window.getComputedStyle(s).transform;const u=s.style.top||window.getComputedStyle(s).top,v=s.style.left||window.getComputedStyle(s).left;requestAnimationFrame(async()=>{if(this.applyWillChange(s),s.style.setProperty("--hotspot-top",u),s.style.setProperty("--hotspot-left",v),s.style.transformOrigin="center center",s.style.webkitTransformOrigin="center center",s.classList.add("hotspot-echo-reveal"),m&&s.classList.add("black-mode"),window.hotspotPositionDebugEnabled&&Y(s,i.id),this.isMobile){const w=s.querySelector(".main-path")||s.querySelector("path");w&&D.applyShadow(w,"echoReveal")}let d=localStorage.getItem("borderStyle")||"default";if(console.log("[TemporalEchoController] Initial borderStyle from localStorage:",d),console.log("[TemporalEchoController] isMobile:",this.isMobile),console.log("[TemporalEchoController] isBlackMode:",m),this.isMobile&&d==="default"&&(d="emboss",console.log("[TemporalEchoController] Overriding to emboss for mobile")),m&&(d==="default"||d==="pigment")&&(d="emboss",console.log("[TemporalEchoController] Forcing emboss style for dark palette visibility")),console.log("[TemporalEchoController] Final borderStyle to apply:",d),d!=="default")s.classList.add(`border-${d}`),console.log("[TemporalEchoController] Applied border style:",d),console.log("[TemporalEchoController] Element classes:",s.className),setTimeout(()=>{s.querySelectorAll("path").forEach((M,T)=>{const R=window.getComputedStyle(M);console.log(`[TemporalEchoController] Path ${T} classes:`,M.className),console.log(`[TemporalEchoController] Path ${T} stroke:`,R.stroke),console.log(`[TemporalEchoController] Path ${T} strokeWidth:`,R.strokeWidth),console.log(`[TemporalEchoController] Path ${T} filter:`,R.filter)});const C=document.createElement("div");C.className="hotspot-echo-reveal border-gradient",document.body.appendChild(C);const S=document.createElement("div");S.className="main-path",C.appendChild(S);const x=window.getComputedStyle(S);console.log("[TemporalEchoController] Test element filter:",x.filter),document.body.removeChild(C)},100),d==="gradient"&&!document.getElementById("adaptive-gradient")&&this.injectGradientDef(),d==="double"&&s.querySelector("path")&&this.createDoubleContour(s),d==="pigment"&&console.log("[TemporalEchoController] Applied pigment liner style");else if(this.contrastDetection&&t.centerX&&t.centerY)try{const w=await this.contrastDetection.sampleBackgroundLuminance(t.centerX,t.centerY,50);s.classList.add(w.recommendedEffect),console.log("[TemporalEchoController] Applied contrast effect:",w.recommendedEffect)}catch{console.warn("[TemporalEchoController] Contrast detection failed, using default"),s.classList.add("contrast-adaptive-medium")}const g=o*this.config.staggerDelay;s.style.animationDelay=`${g}ms`,console.log(`[TemporalEchoController] Hotspot ${i.id} animation delay: ${g}ms (index: ${o})`),s.tagName.toLowerCase()==="g"&&s.querySelectorAll("path, polygon, polyline").forEach(C=>{C.style.animationDelay=`${g}ms`}),s.offsetHeight,console.log("[TemporalEchoController] Classes added:",s.classList.toString()),this.activeEchoes.add(i.id),this.echoAnimations.set(i.id,{element:s,originalOpacity:a,originalVisibility:r,wasHidden:h,wasVisible:l,isRevealed:!0}),s.setAttribute("data-hotspot-revealed","true"),setTimeout(()=>{s.classList.add("reveal-complete")},800)}),setTimeout(()=>{if(s.classList.remove("hotspot-echo-reveal","reveal-complete"),s.style.animationDelay="",this.isMobile){const d=s.querySelector(".main-path")||s.querySelector("path");d&&D.removeShadow(d)}s.classList.add("hotspot-echo-fade-out"),setTimeout(()=>{s.classList.remove("hotspot-echo-fade-out","black-mode"),s.classList.remove("contrast-adaptive-dark","contrast-adaptive-light","contrast-adaptive-medium","contrast-adaptive-complex"),s.classList.remove("border-gradient","border-double","border-emboss","border-pulse","border-pigment"),this.removeWillChange(s,0);const d=this.stateManager.getSelectedHotspot();if(!d||d.id!==i.id){const g=this.echoAnimations.get(i.id);g&&(s.style.opacity=g.originalOpacity,s.style.visibility=g.originalVisibility,s.style.display="",g.wasHidden&&s.classList.add("hotspot-hidden"),g.wasVisible&&s.classList.add("hotspot-visible"),s.tagName.toLowerCase()==="g"&&s.querySelectorAll("path, polygon, polyline").forEach(C=>{C.style.animationDelay="",C.style.opacity="",C.style.visibility=""})),window.nativeHotspotRenderer&&window.nativeHotspotRenderer.updateVisibility&&setTimeout(()=>{window.nativeHotspotRenderer.updateVisibility()},100)}s.removeAttribute("data-hotspot-revealed"),this.activeEchoes.delete(i.id),this.echoAnimations.delete(i.id)},300)},this.config.revealDuration)}getHotspotElement(t){let e=null;const o=this.stateManager.getOverlay(t);if(o&&o.element&&(e=o.element),!e){const i=document.querySelectorAll(".openseadragon-svg-overlay, .hotspot-overlay-svg, svg");for(const s of i)if(e=s.querySelector(`[data-hotspot-id="${t}"]`),e)break}if(e||(e=document.getElementById(`hotspot-${t}`)),!e){const i=document.querySelectorAll(`g[data-hotspot-id="${t}"]`);i.length>0&&(e=i[0])}return e}revealHotspotsSVG(t,e){if(console.log(`[TemporalEchoController] Revealing ${t.length} hotspots in SVG`),this.batchDOMManager&&this.useBatchDOM){console.log("[TemporalEchoController] Using BatchDOMManager for efficient reveal");const o=[];if(t.forEach(i=>{const s=i.hotspot||i,n=this.getHotspotElement(s.id||i.id);n&&(o.push(n),this.activeEchoes.add(s.id||i.id))}),o.length>0){const i=localStorage.getItem("borderStyle")||"default";this.batchDOMManager.batchRevealHotspots(o,{staggerDelay:this.config.staggerDelay,revealDuration:this.config.revealDuration,borderStyle:i})}return}t.forEach((o,i)=>{const s=o.hotspot||o,n=this.getHotspotElement(s.id||o.id);if(!n)return;const a=n.style.opacity||"",r=n.style.visibility||"",h=n.classList.contains("hotspot-hidden"),l=n.classList.contains("hotspot-visible");n.classList.remove("hotspot-hidden"),n.classList.add("hotspot-visible","hotspot-echo-active"),n.style.opacity="1",n.style.visibility="visible",n.style.display="block",this.activeEchoes.add(o.id),this.echoAnimations.set(o.id,{element:n,originalOpacity:a,originalVisibility:r,wasHidden:h,wasVisible:l,isRevealed:!0}),n.setAttribute("data-hotspot-revealed","true")}),setTimeout(()=>{this.hideRevealedHotspots(t)},this.config.revealDuration)}hideRevealedHotspots(t){t.forEach(e=>{const o=e.id,i=this.echoAnimations.get(o);if(!i)return;const s=i.element;s.classList.remove("hotspot-echo-active"),s.removeAttribute("data-hotspot-revealed"),s.style.opacity=i.originalOpacity,s.style.visibility=i.originalVisibility,s.style.display="",i.wasHidden&&s.classList.add("hotspot-hidden"),i.wasVisible||s.classList.remove("hotspot-visible"),this.activeEchoes.delete(o),this.echoAnimations.delete(o)}),console.log("[TemporalEchoController] Hotspots hidden after reveal duration")}isHotspotRevealed(t){const e=this.echoAnimations.get(t);return e&&e.isRevealed===!0}handleRippleComplete(t){console.log("[TemporalEchoController] Ripple completed:",t)}updateFPS(){this.frameCount++;const t=performance.now(),e=t-this.lastFPSCheck;e>=1e3&&(this.currentFPS=Math.round(this.frameCount*1e3/e),this.frameCount=0,this.lastFPSCheck=t,this.currentFPS<30&&this.activeEchoes.size>0&&console.warn("[TemporalEchoController] Low FPS detected:",this.currentFPS))}enable(){this.config.enabled=!0,this.gestureAdapter.enable(),this.rippleRenderer.initialize(),this.fastPathListener=t=>{console.log("[TemporalEchoController] Fast-path ECHO_TAP received");const e=new E.Point(t.x-this.viewer.element.offsetLeft,t.y-this.viewer.element.offsetTop),o=this.viewer.viewport.pointFromPixel(e);this.handleQuickTap({x:t.x,y:t.y,viewportX:o.x,viewportY:o.y,timestamp:t.timestamp})},this.eventCoordinator.on(this.eventCoordinator.eventTypes.ECHO_TAP,this.fastPathListener),this.buildSpatialIndex(),console.log("[TemporalEchoController] Enabled with fast-path support and spatial index")}disable(){this.config.enabled=!1,this.gestureAdapter.disable(),this.rippleRenderer.cleanup(),this.clearActiveEchoes(),this.fastPathListener&&(this.eventCoordinator.off(this.eventCoordinator.eventTypes.ECHO_TAP,this.fastPathListener),this.fastPathListener=null),this.invalidateSpatialIndex(),console.log("[TemporalEchoController] Disabled")}invalidateSpatialIndex(){this.spatialIndexReady=!1,this.spatialIndex&&this.spatialIndex.clear()}clearActiveEchoes(){this.activeEchoes.forEach(t=>{const e=this.echoAnimations.get(t);if(e&&e.element){if(e.element.classList.remove("hotspot-echo-reveal","hotspot-echo-fade-out","black-mode"),e.element.style.animationDelay="",e.element.style.opacity=e.originalOpacity,e.element.style.visibility=e.originalVisibility,e.element.style.display="",this.isMobile){const o=e.element.querySelector(".main-path")||e.element.querySelector("path");o&&D.removeShadow(o)}e.element.tagName.toLowerCase()==="g"&&e.element.querySelectorAll("path, polygon, polyline").forEach(i=>{i.style.animationDelay="",i.style.opacity="",i.style.visibility=""})}}),this.activeEchoes.clear(),this.echoAnimations.clear()}updateConfig(t){Object.assign(this.config,t),(t.quickTapThreshold!==void 0||t.movementThreshold!==void 0)&&this.gestureAdapter.updateConfig(t)}getFPS(){return this.rippleRenderer?this.rippleRenderer.getFPS():60}getPerformanceMetrics(){return this.rippleRenderer?this.rippleRenderer.getPerformanceMetrics():null}injectGradientDef(){if(document.getElementById("adaptive-gradient"))return;const t="http://www.w3.org/2000/svg",e=document.createElementNS(t,"svg");e.style.position="absolute",e.style.width="0",e.style.height="0",e.style.overflow="hidden";const o=document.createElementNS(t,"defs"),i=document.createElementNS(t,"linearGradient");i.id="adaptive-gradient",i.setAttribute("x1","0%"),i.setAttribute("y1","0%"),i.setAttribute("x2","100%"),i.setAttribute("y2","100%");const s=document.createElementNS(t,"stop");s.setAttribute("offset","0%"),s.setAttribute("stop-color","white"),s.setAttribute("stop-opacity","1");const n=document.createElementNS(t,"stop");n.setAttribute("offset","50%"),n.setAttribute("stop-color","gray"),n.setAttribute("stop-opacity","0.8");const a=document.createElementNS(t,"stop");a.setAttribute("offset","100%"),a.setAttribute("stop-color","black"),a.setAttribute("stop-opacity","1"),i.appendChild(s),i.appendChild(n),i.appendChild(a),o.appendChild(i),e.appendChild(o),document.body.appendChild(e)}createDoubleContour(t){t.querySelectorAll("path").forEach(o=>{if(o.nextSibling&&o.nextSibling.classList&&o.nextSibling.classList.contains("outer-stroke"))return;const i=o.cloneNode(!0);i.classList.add("outer-stroke"),i.style.zIndex="-1",o.parentNode.insertBefore(i,o)})}injectPigmentTextureFilter(){const t="http://www.w3.org/2000/svg",e=document.createElementNS(t,"svg");e.style.position="absolute",e.style.width="0",e.style.height="0",e.style.overflow="hidden",e.setAttribute("aria-hidden","true");const o=document.createElementNS(t,"defs"),i=document.createElementNS(t,"filter");i.id="pigmentTexture",i.setAttribute("x","-50%"),i.setAttribute("y","-50%"),i.setAttribute("width","200%"),i.setAttribute("height","200%"),i.setAttribute("color-interpolation-filters","sRGB");const s=document.createElementNS(t,"feTurbulence");s.setAttribute("type","turbulence"),s.setAttribute("baseFrequency","0.5 0.1"),s.setAttribute("numOctaves","2"),s.setAttribute("seed","5"),s.setAttribute("result","turbulence");const n=document.createElementNS(t,"feDisplacementMap");n.setAttribute("in","SourceGraphic"),n.setAttribute("in2","turbulence"),n.setAttribute("scale","2"),n.setAttribute("xChannelSelector","R"),n.setAttribute("yChannelSelector","G"),n.setAttribute("result","displaced");const a=document.createElementNS(t,"feMorphology");a.setAttribute("in","displaced"),a.setAttribute("operator","dilate"),a.setAttribute("radius","0.5"),a.setAttribute("result","dilated");const r=document.createElementNS(t,"feComposite");r.setAttribute("in","dilated"),r.setAttribute("in2","displaced"),r.setAttribute("operator","over"),r.setAttribute("result","final");const h=document.createElementNS(t,"feComponentTransfer");h.setAttribute("in","final");const l=document.createElementNS(t,"feFuncA");l.setAttribute("type","discrete"),l.setAttribute("tableValues","0 1"),h.appendChild(l),i.appendChild(s),i.appendChild(n),i.appendChild(a),i.appendChild(r),i.appendChild(h),o.appendChild(i),e.appendChild(o),document.body.appendChild(e),console.log("[TemporalEchoController] Injected pigment texture filter")}destroy(){this.disable(),this.gestureAdapter.destroy(),this.rippleRenderer.destroy(),this.clearActiveEchoes(),this.canvasRenderer&&(this.canvasRenderer.destroy(),this.canvasRenderer=null),this.batchDOMManager&&(this.batchDOMManager.destroy(),this.batchDOMManager=null),this.hitDetector&&(this.hitDetector.destroy(),this.hitDetector=null)}}window.updateBorderStyle=function(f){console.log("[TemporalEchoController] Border style updated to:",f)};window.toggleAdjacentSelection=function(f){if(window.temporalEchoController){const t=window.temporalEchoController.config.useAdjacentSelection;return window.temporalEchoController.config.useAdjacentSelection=f!==void 0?f:!t,console.log("[TemporalEchoController] Adjacent selection mode:",window.temporalEchoController.config.useAdjacentSelection?"ENABLED (cÃ´te Ã  cÃ´te)":"DISABLED (distance-based)"),window.temporalEchoController.config.useAdjacentSelection}return console.error("TemporalEchoController not initialized"),!1};window.setAdjacencyThreshold=function(f){window.temporalEchoController?(window.temporalEchoController.config.adjacencyThreshold=f,console.log("[TemporalEchoController] Adjacency threshold set to:",f,"pixels")):console.error("TemporalEchoController not initialized")};export{W as default};
