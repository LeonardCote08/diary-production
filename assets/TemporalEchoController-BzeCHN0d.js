import{O as M,i as D,f as z,c as k}from"./main-CiA_ONzA.js";const b={IDLE:"idle",UNDETERMINED:"undetermined",DOUBLE_TAP_WAIT:"double_tap_wait",HOLD:"hold",PAN:"pan",PINCH:"pinch",CANCELLED:"cancelled"};class O{constructor(e={}){this.config={quickTapThreshold:e.quickTapThreshold||50,doubleTapThreshold:e.doubleTapThreshold||300,holdThreshold:e.holdThreshold||400,movementThreshold:e.movementThreshold||10,mobileMovementThreshold:e.mobileMovementThreshold||20,velocityThreshold:e.velocityThreshold||5,debug:e.debug||!1},this.state=b.IDLE,this.previousState=null,this.gestureData=null,this.activePointers=new Map,this.gestureStartTime=0,this.lastTapTime=0,this.lastTapPosition=null,this.quickTapTimer=null,this.holdTimer=null,this.doubleTapTimer=null,this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,this.callbacks={onQuickTap:e.onQuickTap||(()=>{}),onDoubleTap:e.onDoubleTap||(()=>{}),onHoldStart:e.onHoldStart||(()=>{}),onHoldEnd:e.onHoldEnd||(()=>{}),onPanStart:e.onPanStart||(()=>{}),onPinchStart:e.onPinchStart||(()=>{}),onGestureCancel:e.onGestureCancel||(()=>{})},this.startGesture=this.startGesture.bind(this),this.updateGesture=this.updateGesture.bind(this),this.endGesture=this.endGesture.bind(this),this.cancelGesture=this.cancelGesture.bind(this)}startGesture(e){const t=e.pointerId||0,s=performance.now();if(this.activePointers.set(t,{startX:e.x,startY:e.y,currentX:e.x,currentY:e.y,startTime:s}),this.activePointers.size>=2){this.transitionTo(b.PINCH),this.callbacks.onPinchStart(this.getGestureData());return}this.gestureStartTime=s,this.gestureData={startX:e.x,startY:e.y,currentX:e.x,currentY:e.y,pointerId:t},this.transitionTo(b.UNDETERMINED),this.startDetectionTimers(),this.log("Gesture started",this.gestureData)}updateGesture(e){const t=e.pointerId||0,s=this.activePointers.get(t);if(!s||this.state===b.IDLE)return;s.currentX=e.x,s.currentY=e.y,this.gestureData&&this.gestureData.pointerId===t&&(this.gestureData.currentX=e.x,this.gestureData.currentY=e.y);const o=e.x-s.startX,i=e.y-s.startY,a=Math.sqrt(o*o+i*i),n=this.isMobile?this.config.mobileMovementThreshold:this.config.movementThreshold;a>n&&this.state===b.UNDETERMINED&&(this.clearDetectionTimers(),this.transitionTo(b.PAN),this.callbacks.onPanStart(this.getGestureData()))}endGesture(e){const t=e.pointerId||0,s=this.activePointers.get(t);if(!s)return;const o=performance.now()-s.startTime;switch(performance.now(),this.activePointers.delete(t),this.state){case b.UNDETERMINED:o<this.config.quickTapThreshold?this.handleQuickTap(e,o):this.cancelGesture("duration_exceeded");break;case b.HOLD:this.callbacks.onHoldEnd({...this.getGestureData(),duration:o}),this.transitionTo(b.IDLE);break;case b.DOUBLE_TAP_WAIT:break;default:this.transitionTo(b.IDLE)}this.activePointers.size===0&&this.state!==b.DOUBLE_TAP_WAIT&&this.resetGesture()}cancelGesture(e="unknown"){this.clearDetectionTimers();const t=this.state;this.transitionTo(b.CANCELLED),this.callbacks.onGestureCancel({previousState:t,reason:e,gestureData:this.getGestureData()}),this.reset()}handleQuickTap(e,t){const s=performance.now(),o={x:e.x,y:e.y};if(this.lastTapTime&&this.lastTapPosition){const i=s-this.lastTapTime,a=this.calculateDistance(o.x,o.y,this.lastTapPosition.x,this.lastTapPosition.y);if(i<this.config.doubleTapThreshold&&a<50){this.clearDetectionTimers(),this.callbacks.onDoubleTap({...this.getGestureData(),duration:t,timeBetweenTaps:i}),this.lastTapTime=0,this.lastTapPosition=null,this.transitionTo(b.IDLE);return}}this.callbacks.onQuickTap({...this.getGestureData(),duration:t,originalEvent:e.originalEvent}),this.lastTapTime=s,this.lastTapPosition=o,this.transitionTo(b.DOUBLE_TAP_WAIT),this.doubleTapTimer=setTimeout(()=>{this.transitionTo(b.IDLE),this.resetGesture()},this.config.doubleTapThreshold)}startDetectionTimers(){this.quickTapTimer=setTimeout(()=>{this.state===b.UNDETERMINED&&this.startHoldDetection()},this.config.quickTapThreshold)}startHoldDetection(){const e=this.config.holdThreshold-this.config.quickTapThreshold;this.holdTimer=setTimeout(()=>{this.state===b.UNDETERMINED&&(this.transitionTo(b.HOLD),this.callbacks.onHoldStart(this.getGestureData()))},e)}clearDetectionTimers(){this.quickTapTimer&&(clearTimeout(this.quickTapTimer),this.quickTapTimer=null),this.holdTimer&&(clearTimeout(this.holdTimer),this.holdTimer=null),this.doubleTapTimer&&(clearTimeout(this.doubleTapTimer),this.doubleTapTimer=null)}transitionTo(e){this.state!==e&&(this.previousState=this.state,this.state=e,this.log(`State transition: ${this.previousState} â†’ ${e}`))}getGestureData(){return this.gestureData?{...this.gestureData,state:this.state,duration:performance.now()-this.gestureStartTime,distance:this.calculateDistance(this.gestureData.currentX,this.gestureData.currentY,this.gestureData.startX,this.gestureData.startY)}:null}calculateDistance(e,t,s,o){const i=s-e,a=o-t;return Math.sqrt(i*i+a*a)}reset(){this.state=b.IDLE,this.previousState=null,this.gestureData=null,this.gestureStartTime=0,this.clearDetectionTimers()}resetGesture(){this.gestureData=null,this.gestureStartTime=0,this.activePointers.clear(),this.clearDetectionTimers()}log(...e){this.config.debug&&console.log("[GestureStateMachine]",...e)}getState(){return this.state}isActive(){return this.state!==b.IDLE&&this.state!==b.CANCELLED}destroy(){this.clearDetectionTimers(),this.activePointers.clear(),this.reset()}}class ${constructor(e={}){this.eventCoordinator=e.eventCoordinator,this.viewer=e.viewer,this.onQuickTap=e.onQuickTap||(()=>{}),this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,this.gestureStateMachine=new O({quickTapThreshold:200,movementThreshold:this.isMobile?20:10,debug:window.DEBUG_GESTURES||!1,onQuickTap:this.handleQuickTap.bind(this),onDoubleTap:this.handleDoubleTap.bind(this),onHoldStart:this.handleHoldStart.bind(this),onHoldEnd:this.handleHoldEnd.bind(this),onPanStart:this.handlePanStart.bind(this),onPinchStart:this.handlePinchStart.bind(this)}),this.isIntercepting=!1,this.originalHandlers={},this.lastEventTime=0,this.eventThrottle=16,this.enabled=!1,this.setupEventListeners()}setupEventListeners(){if(!this.eventCoordinator){console.warn("[TemporalEchoAdapter] No EventCoordinator provided");return}this.eventCoordinator.on(this.eventCoordinator.eventTypes.POINTER_DOWN,this.handlePointerDown.bind(this)),this.eventCoordinator.on(this.eventCoordinator.eventTypes.POINTER_MOVE,this.handlePointerMove.bind(this)),this.eventCoordinator.on(this.eventCoordinator.eventTypes.POINTER_UP,this.handlePointerUp.bind(this))}handlePointerDown(e){if(e.activePointers>1){this.gestureStateMachine.cancelGesture("multi_touch");return}this.enabled&&(this.gestureStateMachine.startGesture({x:e.x,y:e.y,pointerId:e.pointerId,originalEvent:e.event}),this.isIntercepting=!1)}handlePointerMove(e){const t=performance.now();t-this.lastEventTime<this.eventThrottle||(this.lastEventTime=t,this.gestureStateMachine.updateGesture({x:e.x,y:e.y,pointerId:e.pointerId}),this.gestureStateMachine.getState()==="pan"&&(this.isIntercepting=!1))}handlePointerUp(e){this.gestureStateMachine.endGesture({x:e.x,y:e.y,pointerId:e.pointerId,originalEvent:e.event}),this.isIntercepting=!1}handleQuickTap(e){const t=this.viewer.viewport.pointFromPixel(new M.Point(e.startX,e.startY)),s=this.onQuickTap({x:e.startX,y:e.startY,viewportX:t.x,viewportY:t.y,duration:e.duration});return s?(this.isIntercepting=!0,e.originalEvent&&(e.originalEvent.preventDefault(),e.originalEvent.stopPropagation()),this.handledQuickTap=!0,this.lastQuickTapTime=performance.now(),setTimeout(()=>{this.isIntercepting=!1,this.handledQuickTap=!1},100)):(this.isIntercepting=!1,this.gestureStateMachine.cancelGesture("not_handled")),s}handleDoubleTap(e){}handleHoldStart(e){this.isIntercepting=!1,this.gestureStateMachine.cancelGesture("hold_detected")}handleHoldEnd(e){}handlePanStart(e){this.isIntercepting=!1}handlePinchStart(e){this.isIntercepting=!1}shouldIntercept(){return this.isIntercepting&&this.gestureStateMachine.isActive()&&this.gestureStateMachine.getState()!=="pan"&&this.gestureStateMachine.getState()!=="pinch"}enable(){this.enabled=!0}disable(){this.enabled=!1,this.gestureStateMachine.cancelGesture("disabled"),this.isIntercepting=!1}updateConfig(e){e.quickTapThreshold!==void 0&&(this.gestureStateMachine.config.quickTapThreshold=e.quickTapThreshold),e.movementThreshold!==void 0&&(this.gestureStateMachine.config.movementThreshold=e.movementThreshold)}destroy(){this.gestureStateMachine.destroy(),this.isIntercepting=!1}}class L{constructor(e={}){this.targetFPS=e.targetFPS||30,this.sampleRate=e.sampleRate||100,this.warningThreshold=e.warningThreshold||25,this.criticalThreshold=e.criticalThreshold||20,this.metrics={fps:{current:60,average:60,min:60,max:60,samples:[]},frameTime:{current:16.67,average:16.67,max:16.67,samples:[]},memory:{used:0,limit:0,percentage:0},ripples:{active:0,created:0,completed:0}},this.performanceState="optimal",this.lastFrameTime=performance.now(),this.frameCount=0,this.isMonitoring=!1,this.onPerformanceChange=e.onPerformanceChange||(()=>{}),this.onCriticalPerformance=e.onCriticalPerformance||(()=>{}),console.log("[PerformanceMonitor] Initialized with target FPS:",this.targetFPS)}start(){this.isMonitoring||(this.isMonitoring=!0,this.lastFrameTime=performance.now(),this.rafLoop(),this.startSampling(),console.log("[PerformanceMonitor] Started monitoring"))}rafLoop(){if(!this.isMonitoring)return;const e=performance.now(),t=e-this.lastFrameTime;this.metrics.frameTime.current=t,this.frameCount++,t>0&&(this.metrics.fps.current=Math.round(1e3/t)),this.lastFrameTime=e,requestAnimationFrame(()=>this.rafLoop())}startSampling(){this.samplingInterval=setInterval(()=>{this.sampleMetrics(),this.evaluatePerformance()},this.sampleRate)}sampleMetrics(){performance.now();const e=this.metrics.fps.samples;e.push(this.metrics.fps.current),e.length>10&&e.shift(),this.metrics.fps.average=Math.round(e.reduce((s,o)=>s+o,0)/e.length),this.metrics.fps.min=Math.min(...e),this.metrics.fps.max=Math.max(...e);const t=this.metrics.frameTime.samples;t.push(this.metrics.frameTime.current),t.length>10&&t.shift(),this.metrics.frameTime.average=t.reduce((s,o)=>s+o,0)/t.length,this.metrics.frameTime.max=Math.max(...t),performance.memory&&(this.metrics.memory.used=Math.round(performance.memory.usedJSHeapSize/1048576),this.metrics.memory.limit=Math.round(performance.memory.jsHeapSizeLimit/1048576),this.metrics.memory.percentage=Math.round(performance.memory.usedJSHeapSize/performance.memory.jsHeapSizeLimit*100))}evaluatePerformance(){const e=this.metrics.fps.average,t=this.performanceState;e>=this.targetFPS?this.performanceState="optimal":e>=this.warningThreshold?this.performanceState="degraded":this.performanceState="critical",t!==this.performanceState&&(console.log(`[PerformanceMonitor] State changed: ${t} â†’ ${this.performanceState}`),this.onPerformanceChange(this.performanceState,this.metrics),this.performanceState==="critical"&&this.onCriticalPerformance(this.metrics)),this.performanceState!=="optimal"&&this.frameCount%60===0&&console.warn("[PerformanceMonitor] Performance below target:",{state:this.performanceState,avgFPS:e,targetFPS:this.targetFPS})}rippleCreated(){this.metrics.ripples.created++,this.metrics.ripples.active++}rippleCompleted(){this.metrics.ripples.completed++,this.metrics.ripples.active=Math.max(0,this.metrics.ripples.active-1)}getMetrics(){return{...this.metrics,performanceState:this.performanceState,isTargetMet:this.metrics.fps.average>=this.targetFPS}}getRecommendations(){const e=[];return this.performanceState==="critical"?(e.push("Reduce animation complexity"),e.push("Disable visual effects"),e.push("Limit concurrent ripples to 1")):this.performanceState==="degraded"&&(e.push("Consider reducing ripple radius"),e.push("Simplify animation easing")),this.metrics.memory.percentage>80&&(e.push("High memory usage detected"),e.push("Clear completed animations")),e}stop(){this.isMonitoring=!1,this.samplingInterval&&(clearInterval(this.samplingInterval),this.samplingInterval=null),console.log("[PerformanceMonitor] Stopped monitoring")}reset(){this.metrics.fps.samples=[],this.metrics.frameTime.samples=[],this.metrics.ripples={active:0,created:0,completed:0},this.frameCount=0}destroy(){this.stop(),this.reset()}}class F{constructor(e={}){this.viewer=e.viewer,this.radius=e.radius||200,this.duration=e.duration||800,this.maxRipples=e.maxRipples||3,this.onRippleComplete=e.onRippleComplete||(()=>{}),this.safariOptimizations={useWillChange:!0,use3DTransform:!0,useWebkitPrefix:!0,compositeLayerHints:!0,useContainment:!0,usePassiveListeners:!0,reduceCompositeLayersOnMobile:D()},this.container=null,this.activeRipples=new Map,this.rippleIdCounter=0,this.performanceMonitor=new L({targetFPS:30,warningThreshold:25,criticalThreshold:20,onPerformanceChange:this.handlePerformanceChange.bind(this),onCriticalPerformance:this.handleCriticalPerformance.bind(this)}),this.isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),this.isIOS=/iPad|iPhone|iPod/.test(navigator.userAgent)||navigator.platform==="MacIntel"&&navigator.maxTouchPoints>1,console.log("[CSSRippleRenderer] Initialized",{safari:this.isSafari,iOS:this.isIOS,mobile:D()})}initialize(){this.createContainer(),this.injectStyles(),this.performanceMonitor.start(),console.log("[CSSRippleRenderer] Initialized container and styles")}createContainer(){this.container||(this.container=document.createElement("div"),this.container.className="css-ripple-container",this.container.style.cssText=`
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 9999;
            overflow: hidden;
            ${this.safariOptimizations.use3DTransform?"transform: translate3d(0, 0, 0);":""}
            ${this.safariOptimizations.useWillChange?"will-change: transform;":""}
            ${this.safariOptimizations.compositeLayerHints?"-webkit-transform: translateZ(0);":""}
            ${this.safariOptimizations.useContainment?"contain: layout style paint;":""}
        `,document.body.appendChild(this.container))}injectStyles(){if(document.getElementById("css-ripple-styles"))return;const e=document.createElement("style");e.id="css-ripple-styles";const t=`
            @keyframes ripple-expand {
                0% {
                    transform: translate3d(-50%, -50%, 0) scale(0);
                    opacity: 1;
                }
                50% {
                    opacity: 0.8;
                }
                100% {
                    transform: translate3d(-50%, -50%, 0) scale(1);
                    opacity: 0;
                }
            }
            
            /* Simplified mobile version for better performance */
            @media (max-width: 768px) {
                @keyframes ripple-expand {
                    0% {
                        transform: translate3d(-50%, -50%, 0) scale(0);
                        opacity: 0.6;
                    }
                    100% {
                        transform: translate3d(-50%, -50%, 0) scale(1);
                        opacity: 0;
                    }
                }
            }
            
            @-webkit-keyframes ripple-expand {
                0% {
                    -webkit-transform: translate3d(-50%, -50%, 0) scale(0);
                    opacity: 1;
                }
                50% {
                    opacity: 0.8;
                }
                100% {
                    -webkit-transform: translate3d(-50%, -50%, 0) scale(1);
                    opacity: 0;
                }
            }
        `,s=`
            @keyframes ripple-outer {
                0% {
                    transform: translate3d(-50%, -50%, 0) scale(0.5);
                    opacity: 0.25;
                }
                100% {
                    transform: translate3d(-50%, -50%, 0) scale(1.2);
                    opacity: 0;
                }
            }
            
            @keyframes ripple-inner {
                0% {
                    transform: translate3d(-50%, -50%, 0) scale(0);
                    opacity: 0.5;
                }
                100% {
                    transform: translate3d(-50%, -50%, 0) scale(1);
                    opacity: 0;
                }
            }
            
            @keyframes ripple-core {
                0% {
                    transform: translate3d(-50%, -50%, 0) scale(0);
                    opacity: 0.9;
                }
                50% {
                    opacity: 0.8;
                }
                100% {
                    transform: translate3d(-50%, -50%, 0) scale(0.8);
                    opacity: 0;
                }
            }
        `,o=`
            .css-ripple {
                position: absolute;
                border-radius: 50%;
                background: transparent;
                border: 2px solid rgba(255, 255, 255, 0.8);
                /* Simplified box-shadow for better mobile performance */
                box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
                pointer-events: none;
                ${this.safariOptimizations.use3DTransform?"transform: translate3d(-50%, -50%, 0) scale(0);":"transform: translate(-50%, -50%) scale(0);"}
                ${this.safariOptimizations.useWillChange?"will-change: transform, opacity;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-transform: translate3d(-50%, -50%, 0) scale(0);":""}
                ${this.safariOptimizations.useContainment?"contain: layout;":""}
                /* GPU acceleration hints */
                backface-visibility: hidden;
                -webkit-backface-visibility: hidden;
                perspective: 1000px;
                -webkit-perspective: 1000px;
                animation: ripple-expand ${this.duration}ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation: ripple-expand "+this.duration+"ms cubic-bezier(0.4, 0, 0.2, 1) forwards;":""}
            }
            
            .css-ripple.low-performance {
                box-shadow: none;
                background: rgba(255, 255, 255, 0.3);
                animation-duration: ${this.duration*.7}ms;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-duration: "+this.duration*.7+"ms;":""}
            }
            
            /* Multi-layer ripple structure */
            .css-ripple-multi {
                position: absolute;
                pointer-events: none;
                ${this.safariOptimizations.use3DTransform?"transform: translate3d(-50%, -50%, 0);":"transform: translate(-50%, -50%);"}
            }
            
            .ripple-layer {
                position: absolute;
                top: 50%;
                left: 50%;
                border-radius: 50%;
                pointer-events: none;
            }
            
            .ripple-layer-outer {
                border: 1px solid rgba(255, 255, 255, 0.15);
                background: radial-gradient(circle, transparent 60%, rgba(255, 255, 255, 0.1) 100%);
                animation: ripple-outer ${this.duration}ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
            }
            
            .ripple-layer-inner {
                border: 2px solid rgba(255, 255, 255, 0.4);
                background: transparent;
                animation: ripple-inner ${this.duration*.85}ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
            }
            
            .ripple-layer-core {
                border: 3px solid rgba(255, 255, 255, 0.8);
                background: rgba(255, 255, 255, 0.1);
                animation: ripple-core ${this.duration*.7}ms cubic-bezier(0.4, 0, 0.2, 1) forwards;
            }
        `,i=`
            /* Override any LOD or visibility class during reveal */
            .hotspot-echo-reveal.hotspot-hidden,
            .hotspot-hidden.hotspot-echo-reveal,
            .hotspot-echo-reveal.hotspot-visible,
            .hotspot-visible.hotspot-echo-reveal {
                opacity: 0 !important;
                visibility: visible !important;
                pointer-events: none !important;
                display: block !important;
            }
            
            /* Default reveal style (white/visible) - optimized duration */
            .hotspot-echo-reveal {
                visibility: visible !important;
                display: block !important;
                z-index: 1000 !important;
                pointer-events: none !important;
                /* CRITICAL: Set transform-origin to prevent position shifting */
                transform-origin: center center !important;
                -webkit-transform-origin: center center !important;
                /* GPU acceleration for mobile - removed translateZ to avoid conflicts with scale */
                backface-visibility: hidden;
                -webkit-backface-visibility: hidden;
                perspective: 1000px;
                -webkit-perspective: 1000px;
                /* Optimized animation */
                animation-name: hotspot-simple-fade-in !important;
                animation-duration: 0.3s !important;
                animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;
                animation-fill-mode: both !important;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-name: hotspot-simple-fade-in !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-duration: 0.3s !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-fill-mode: both !important;":""}
                ${this.safariOptimizations.useContainment?"contain: layout style;":""}
            }
            
            /* Black mode specific styling - optimized for mobile */
            .hotspot-echo-reveal.black-mode {
                visibility: visible !important;
            }
            
            .hotspot-echo-reveal.black-mode path,
            .hotspot-echo-reveal.black-mode polygon,
            .hotspot-echo-reveal.black-mode polyline {
                stroke: #000000 !important;
                fill: none !important;
                stroke-width: 6 !important;
                /* Reduced filter complexity for better mobile performance */
                filter: drop-shadow(0 0 15px rgba(0, 0, 0, 0.7));
                animation-name: hotspot-simple-fade-in !important;
                animation-duration: 0.4s !important;
                animation-timing-function: ease-out !important;
                animation-fill-mode: both !important;
                animation-delay: inherit !important;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-name: hotspot-simple-fade-in !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-duration: 0.4s !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-timing-function: ease-out !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-fill-mode: both !important;":""}
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-delay: inherit !important;":""}
            }
            
            /* Removed multiple glow layers for better performance on mobile */
            
            /* Ensure g elements are visible and override LOD */
            g.hotspot-echo-reveal,
            g.hotspot-echo-reveal.hotspot-hidden,
            g.hotspot-echo-reveal.hotspot-visible {
                opacity: 1 !important;
                visibility: visible !important;
                display: block !important;
                z-index: 1000 !important;
            }
            
            /* Override any LOD hiding during reveal */
            .hotspot-echo-reveal.hotspot-visible,
            .hotspot-visible.hotspot-echo-reveal {
                opacity: 0 !important;
                animation-name: hotspot-simple-fade-in !important;
                animation-duration: 0.6s !important;
                animation-fill-mode: forwards !important;
            }
            
            /* Force visibility for all child elements */
            .hotspot-echo-reveal path,
            .hotspot-echo-reveal polygon,
            .hotspot-echo-reveal polyline {
                visibility: visible !important;
            }
            
            /* Simple fade for default mode - with forced start from 0 */
            @keyframes hotspot-simple-fade-in {
                0% { 
                    opacity: 0 !important;
                    visibility: visible;
                }
                1% {
                    opacity: 0 !important;
                    visibility: visible;
                }
                100% { 
                    opacity: 1;
                    visibility: visible;
                }
            }
            
            @-webkit-keyframes hotspot-simple-fade-in {
                0% { 
                    opacity: 0 !important;
                    visibility: visible;
                }
                1% {
                    opacity: 0 !important;
                    visibility: visible;
                }
                100% { 
                    opacity: 1;
                    visibility: visible;
                }
            }
            
            /* Removed complex black mode animation - using simple fade for performance */
            
            /* Fade-out animation - simplified */
            .hotspot-echo-fade-out {
                animation: hotspot-simple-fade-out 0.3s ease-out forwards !important;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation: hotspot-simple-fade-out 0.3s ease-out forwards !important;":""}
            }
            
            .hotspot-echo-fade-out.black-mode path {
                animation: hotspot-simple-fade-out 0.3s ease-out forwards !important;
                ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation: hotspot-simple-fade-out 0.3s ease-out forwards !important;":""}
            }
            
            @keyframes hotspot-simple-fade-out {
                from { opacity: 1; }
                to { opacity: 0; }
            }
            
            @-webkit-keyframes hotspot-simple-fade-out {
                from { opacity: 1; }
                to { opacity: 0; }
            }
        `,a=`
            /* Adaptive contrast styles based on background luminance */
            .hotspot-echo-reveal.contrast-adaptive-dark path {
                stroke: rgba(255, 255, 255, 0.95) !important;
                stroke-width: 2px !important;
                filter: drop-shadow(0 0 6px rgba(255, 255, 255, 0.9)) !important;
            }
            
            .hotspot-echo-reveal.contrast-adaptive-light path {
                stroke: rgba(0, 0, 0, 0.95) !important;
                stroke-width: 2px !important;
                filter: drop-shadow(0 0 6px rgba(0, 0, 0, 0.9)) !important;
            }
            
            .hotspot-echo-reveal.contrast-adaptive-medium path {
                stroke: rgba(255, 255, 255, 1) !important;
                stroke-width: 2.5px !important;
                filter: 
                    drop-shadow(0 0 2px rgba(0, 0, 0, 1))
                    drop-shadow(0 0 6px rgba(255, 255, 255, 0.9)) !important;
            }
            
            .hotspot-echo-reveal.contrast-adaptive-complex path {
                stroke: rgba(255, 255, 255, 1) !important;
                stroke-width: 3px !important;
                filter: 
                    drop-shadow(1px 1px 1px rgba(0, 0, 0, 1))
                    drop-shadow(-1px -1px 1px rgba(0, 0, 0, 1))
                    drop-shadow(0 0 8px rgba(255, 255, 255, 1)) !important;
            }
            
            /* Mobile optimizations */
            @media (max-width: 768px) {
                .hotspot-echo-reveal.contrast-adaptive-complex path {
                    filter: drop-shadow(0 0 6px rgba(255, 255, 255, 1)) !important;
                }
                
                /* Reduce animation complexity on mobile */
                .css-ripple {
                    animation-duration: ${this.duration*.8}ms !important;
                }
                
                .hotspot-echo-reveal {
                    animation-duration: 0.25s !important;
                    ${this.safariOptimizations.useWebkitPrefix?"-webkit-animation-duration: 0.25s !important;":""}
                }
                
                /* Force layer creation for smoother animations */
                .css-ripple {
                    transform: translate3d(0, 0, 0);
                    -webkit-transform: translate3d(0, 0, 0);
                }
                
                /* Hotspots use will-change instead to avoid transform conflicts */
                .hotspot-echo-reveal {
                    will-change: transform, opacity;
                    transform-origin: center center !important;
                    -webkit-transform-origin: center center !important;
                }
            }
        `;e.textContent=t+s+o+i+a,document.head.appendChild(e)}createRipple(e,t,s=!1){if(s)return this.createMultiLayerRipple(e,t);if(this.activeRipples.size>=this.maxRipples){const r=this.activeRipples.values().next().value;r&&this.removeRipple(r.id)}const o=`ripple-${this.rippleIdCounter++}`,i=document.createElement("div");i.className="css-ripple",i.id=o,this.performanceMonitor.getMetrics().performanceState!=="optimal"&&i.classList.add("low-performance");const n=this.radius*2;return i.style.width=`${n}px`,i.style.height=`${n}px`,i.style.left=`${e}px`,i.style.top=`${t}px`,this.container.appendChild(i),this.activeRipples.set(o,{id:o,element:i,startTime:performance.now()}),setTimeout(()=>{this.removeRipple(o)},this.duration),this.performanceMonitor.rippleCreated(),console.log("[CSSRippleRenderer] Created ripple at",{x:e,y:t},"id:",o),o}createMultiLayerRipple(e,t){if(this.activeRipples.size>=this.maxRipples){const a=this.activeRipples.values().next().value;a&&this.removeRipple(a.id)}const s=`ripple-multi-${this.rippleIdCounter++}`,o=document.createElement("div");return o.className="css-ripple-multi",o.id=s,[{class:"ripple-layer ripple-layer-outer",size:this.radius*2.2},{class:"ripple-layer ripple-layer-inner",size:this.radius*2},{class:"ripple-layer ripple-layer-core",size:this.radius*1.5}].forEach(a=>{const n=document.createElement("div");n.className=a.class,n.style.width=`${a.size}px`,n.style.height=`${a.size}px`,o.appendChild(n)}),o.style.left=`${e}px`,o.style.top=`${t}px`,this.container.appendChild(o),this.activeRipples.set(s,{id:s,element:o,startTime:performance.now()}),setTimeout(()=>{this.removeRipple(s)},this.duration),this.performanceMonitor.rippleCreated(),console.log("[CSSRippleRenderer] Created multi-layer ripple at",{x:e,y:t},"id:",s),s}removeRipple(e){const t=this.activeRipples.get(e);t&&(t.element&&t.element.parentNode&&t.element.remove(),this.activeRipples.delete(e),this.performanceMonitor.rippleCompleted(),this.onRippleComplete(e))}handlePerformanceChange(e,t){console.log(`[CSSRippleRenderer] Performance state: ${e}`,t.fps),e==="critical"?(this.maxRipples=1,this.duration=600):e==="degraded"?(this.maxRipples=2,this.duration=700):(this.maxRipples=3,this.duration=800)}handleCriticalPerformance(e){console.warn("[CSSRippleRenderer] Critical performance detected!",e),this.activeRipples.size>1&&Array.from(this.activeRipples.keys()).slice(0,-1).forEach(s=>this.removeRipple(s))}getFPS(){return this.performanceMonitor.getMetrics().fps.current}getPerformanceMetrics(){return this.performanceMonitor.getMetrics()}cleanup(){this.activeRipples.forEach(e=>{e.element&&e.element.parentNode&&e.element.remove()}),this.activeRipples.clear(),this.performanceMonitor.stop()}destroy(){this.cleanup(),this.performanceMonitor.destroy(),this.container&&this.container.parentNode&&(this.container.remove(),this.container=null);const e=document.getElementById("css-ripple-styles");e&&e.remove(),console.log("[CSSRippleRenderer] Destroyed")}}class N{constructor(e={}){this.viewer=e.viewer,this.container=e.container||this.viewer.container,this.config={animationDuration:600,rippleDuration:400,fadeInDuration:300,staggerDelay:30,maxHotspots:8,dpr:Math.min(window.devicePixelRatio||1,2)},this.canvas=null,this.ctx=null,this.isAnimating=!1,this.animations=[],this.animationFrame=null,this.viewportHandler=null,this.initialize()}initialize(){this.canvas=document.createElement("canvas"),this.canvas.className="temporal-echo-canvas",this.canvas.id="temporal-echo-canvas",this.ctx=this.canvas.getContext("2d",{alpha:!0,desynchronized:!0,willReadFrequently:!1}),this.updateCanvasSize(),Object.assign(this.canvas.style,{position:"fixed",top:"0",left:"0",pointerEvents:"none",zIndex:"2147483647",opacity:"0",display:"block",transform:"translateZ(0)",willChange:"opacity"}),document.body.appendChild(this.canvas),this.setupViewportSync(),this.resizeHandler=()=>this.updateCanvasSize(),window.addEventListener("resize",this.resizeHandler);const e=this.canvas.getBoundingClientRect();console.log("[CanvasHotspotRenderer] Initialized with size:",e.width,"x",e.height,"DPR:",this.config.dpr),console.log("[CanvasHotspotRenderer] Canvas attached to:",this.canvas.parentElement.tagName)}updateCanvasSize(){const e=document.documentElement.clientWidth||window.innerWidth,t=document.documentElement.clientHeight||window.innerHeight;this.canvas.width=e*this.config.dpr,this.canvas.height=t*this.config.dpr,this.canvas.style.width=e+"px",this.canvas.style.height=t+"px",this.ctx.scale(this.config.dpr,this.config.dpr),console.log("[CanvasHotspotRenderer] Canvas resized to:",e,"x",t)}setupViewportSync(){this.viewer&&(this.viewportHandler=()=>{this.isAnimating&&this.updateCanvasTransform()},this.viewer.addHandler("update-viewport",this.viewportHandler))}updateCanvasTransform(){}startRevealAnimation(e,t){var o;if(this.isAnimating){console.warn("[CanvasHotspotRenderer] Animation already in progress");return}console.log("[CanvasHotspotRenderer] Starting reveal for",e.length,"hotspots"),console.log("[CanvasHotspotRenderer] Tap point:",t),console.log("[CanvasHotspotRenderer] Canvas visibility check:",{display:this.canvas.style.display,opacity:this.canvas.style.opacity,zIndex:this.canvas.style.zIndex,parentElement:(o=this.canvas.parentElement)==null?void 0:o.tagName,canvasRect:this.canvas.getBoundingClientRect(),computed:window.getComputedStyle(this.canvas)}),this.isAnimating=!0,this.animations=[],this.canvas.style.opacity="1",this.canvas.style.display="block",console.log("[CanvasHotspotRenderer] Starting animation for",e.length,"hotspots at tap point:",t);const s=performance.now();this.animations.push({type:"ripple",center:this.imageToCanvas(t),startTime:s,duration:this.config.rippleDuration,maxRadius:200}),e.forEach((i,a)=>{const n=this.calculateCenter(i);this.animations.push({type:"hotspot",center:this.imageToCanvas(n),startTime:s+a*this.config.staggerDelay,duration:this.config.fadeInDuration,hotspot:i,radius:20})}),this.animate(),setTimeout(()=>{this.transitionToSVG(e)},this.config.animationDuration)}animate(){const e=performance.now();this.ctx.clearRect(0,0,this.canvas.width/this.config.dpr,this.canvas.height/this.config.dpr);let t=!1;this.animations.forEach(s=>{const o=e-s.startTime;if(o<0){t=!0;return}if(o>s.duration)return;t=!0;const i=o/s.duration;s.type==="ripple"?this.drawRipple(s,i):s.type==="hotspot"&&this.drawHotspot(s,i)}),t&&(this.animationFrame=requestAnimationFrame(()=>this.animate()))}drawRipple(e,t){const s=e.maxRadius*this.easeOutCubic(t),o=.3*(1-t);this.ctx.save(),this.ctx.strokeStyle=`rgba(255, 255, 255, ${o})`,this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.arc(e.center.x,e.center.y,s,0,Math.PI*2),this.ctx.stroke(),this.ctx.restore()}drawHotspot(e,t){const s=.8+.2*this.easeOutBack(t),o=this.easeInOutCubic(t);this.ctx.save(),this.ctx.strokeStyle=`rgba(255, 255, 255, ${o})`,this.ctx.lineWidth=2;const i=e.radius*s;if(this.ctx.beginPath(),this.ctx.arc(e.center.x,e.center.y,i,0,Math.PI*2),this.ctx.stroke(),t>.3){const a=o*.3;this.ctx.fillStyle=`rgba(255, 255, 255, ${a})`,this.ctx.beginPath(),this.ctx.arc(e.center.x,e.center.y,i*.7,0,Math.PI*2),this.ctx.fill()}this.ctx.restore()}transitionToSVG(e){console.log("[CanvasHotspotRenderer] Transitioning to SVG for interaction"),setTimeout(()=>{this.cleanup(),this.canvas.style.opacity="0"},2e3)}cleanup(){this.animationFrame&&(cancelAnimationFrame(this.animationFrame),this.animationFrame=null);const e=this.canvas.width/this.config.dpr,t=this.canvas.height/this.config.dpr;this.ctx.clearRect(0,0,e,t),this.isAnimating=!1,this.animations=[],console.log("[CanvasHotspotRenderer] Cleanup complete")}imageToCanvas(e){if(!this.viewer||!e)return console.warn("[CanvasHotspotRenderer] Invalid viewer or imagePoint"),{x:200,y:200};try{const t=e.x!==void 0?e:{x:e,y:0},s=this.viewer.viewport.imageToViewportCoordinates(t.x,t.y),o=this.viewer.viewport.pixelFromPoint(s),i=this.viewer.container.getBoundingClientRect(),a=o.x+i.left,n=o.y+i.top;return console.log("[CanvasHotspotRenderer] Coordinate conversion:",{imagePoint:t,viewportPoint:s,pixelPoint:o,viewerRect:{left:i.left,top:i.top},canvasCoords:{x:a,y:n}}),{x:a,y:n}}catch(t){return console.error("[CanvasHotspotRenderer] Conversion error:",t),{x:200,y:200}}}calculateCenter(e){const t=e.hotspot||e;if(t.center)return t.center;if(t.coordinates&&Array.isArray(t.coordinates)){let o=0,i=0,a=0;for(const n of t.coordinates)Array.isArray(n)&&n.length>=2&&(o+=n[0],i+=n[1],a++);if(a>0)return{x:o/a,y:i/a}}const s=t.bbox||t.bounds;if(s){if(s.minX!==void 0)return{x:(s.minX+s.maxX)/2,y:(s.minY+s.maxY)/2};if(s.x!==void 0)return{x:s.x+(s.width||0)/2,y:s.y+(s.height||0)/2}}return t.x!==void 0&&t.y!==void 0?{x:t.x,y:t.y}:(console.warn("[CanvasHotspotRenderer] Could not calculate center for hotspot:",e),{x:200,y:200})}easeOutCubic(e){return 1-Math.pow(1-e,3)}easeOutBack(e){return 1+2.70158*Math.pow(e-1,3)+1.70158*Math.pow(e-1,2)}easeInOutCubic(e){return e<.5?4*e*e*e:1-Math.pow(-2*e+2,3)/2}destroy(){this.viewer&&this.viewportHandler&&this.viewer.removeHandler("update-viewport",this.viewportHandler),this.resizeHandler&&window.removeEventListener("resize",this.resizeHandler),this.cleanup(),this.canvas&&this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas),this.canvas=null,this.ctx=null,console.log("[CanvasHotspotRenderer] Destroyed")}}class B{constructor(e={}){this.viewer=e.viewer,this.spatialIndex=e.spatialIndex,this.config={canvasSize:512,updateThreshold:100,enabled:e.enabled!==!1,dpr:1},this.hitCanvas=null,this.hitCtx=null,this.colorMap=new Map,this.lastUpdate=0,this.isDirty=!0,this.currentBounds=null,this.metrics={lastHitTime:0,averageHitTime:0,hitCount:0,lastRenderTime:0},this.config.enabled&&this.initialize()}initialize(){this.hitCanvas=document.createElement("canvas"),this.hitCanvas.width=this.config.canvasSize,this.hitCanvas.height=this.config.canvasSize,this.hitCtx=this.hitCanvas.getContext("2d",{alpha:!1,willReadFrequently:!0,desynchronized:!1}),this.hitCtx.fillStyle="#000000",this.hitCtx.fillRect(0,0,this.config.canvasSize,this.config.canvasSize),this.viewer&&(this.viewportHandler=()=>{this.markDirty()},this.viewer.addHandler("viewport-change",this.viewportHandler)),console.log("[CanvasHitDetector] Initialized with",this.config.canvasSize,"px canvas")}markDirty(){this.isDirty=!0}updateHitCanvas(e){const t=performance.now();if(!this.isDirty&&this.currentBounds&&this.boundsEqual(e,this.currentBounds)&&t-this.lastUpdate<this.config.updateThreshold)return;const s=performance.now();if(this.hitCtx.fillStyle="#000000",this.hitCtx.fillRect(0,0,this.config.canvasSize,this.config.canvasSize),this.colorMap.clear(),!this.spatialIndex){console.warn("[CanvasHitDetector] No spatial index available");return}const o=this.spatialIndex.queryViewport(e);let i=1;for(const n of o){if(!n.coordinates)continue;const r=this.indexToColor(i);if(this.colorMap.set(r,n.id),this.drawHotspot(n,r,e),i++,i>16777215)break}this.isDirty=!1,this.currentBounds={...e},this.lastUpdate=t;const a=performance.now()-s;this.metrics.lastRenderTime=a,a>10?console.warn(`[CanvasHitDetector] Slow render: ${a.toFixed(2)}ms for ${o.length} hotspots`):console.log(`[CanvasHitDetector] Canvas updated in ${a.toFixed(2)}ms for ${o.length} hotspots`)}drawHotspot(e,t,s){const o=this.hitCtx,i=this.config.canvasSize;o.fillStyle=t,o.beginPath();const a=e.coordinates;if(e.shape==="polygon")for(let n=0;n<a.length;n++){const r=(a[n][0]-s.minX)/(s.maxX-s.minX)*i,h=(a[n][1]-s.minY)/(s.maxY-s.minY)*i;n===0?o.moveTo(r,h):o.lineTo(r,h)}else if(e.shape==="multipolygon"){const n=a[0];for(let r=0;r<n.length;r++){const h=(n[r][0]-s.minX)/(s.maxX-s.minX)*i,l=(n[r][1]-s.minY)/(s.maxY-s.minY)*i;r===0?o.moveTo(h,l):o.lineTo(h,l)}}o.closePath(),o.fill()}detectHit(e,t,s){const o=performance.now();this.updateHitCanvas(s);const i=this.config.canvasSize,a=Math.floor((e-s.minX)/(s.maxX-s.minX)*i),n=Math.floor((t-s.minY)/(s.maxY-s.minY)*i);if(a<0||a>=i||n<0||n>=i)return null;const r=this.hitCtx.getImageData(a,n,1,1).data,h=this.rgbToColor(r[0],r[1],r[2]),l=this.colorMap.get(h),c=performance.now()-o;return this.metrics.lastHitTime=c,this.metrics.hitCount++,this.metrics.averageHitTime=(this.metrics.averageHitTime*(this.metrics.hitCount-1)+c)/this.metrics.hitCount,c>2&&console.warn(`[CanvasHitDetector] Slow hit detection: ${c.toFixed(2)}ms`),l||null}findNearbyHits(e,t,s,o,i=10){const a=performance.now();this.updateHitCanvas(o);const n=this.config.canvasSize,r=(e-o.minX)/(o.maxX-o.minX)*n,h=(t-o.minY)/(o.maxY-o.minY)*n,l=s/(o.maxX-o.minX)*n,c=new Map,p=this.generateSpiralSamples(r,h,l,32);for(const[v,w]of p){if(v<0||v>=n||w<0||w>=n)continue;const T=this.hitCtx.getImageData(v,w,1,1).data,d=this.rgbToColor(T[0],T[1],T[2]),u=this.colorMap.get(d);if(u&&!c.has(u)){const C=v-r,x=w-h,y=Math.sqrt(C*C+x*x);c.set(u,y)}if(c.size>=i)break}const m=Array.from(c.entries()).sort((v,w)=>v[1]-w[1]).slice(0,i).map(v=>v[0]),f=performance.now()-a;return console.log(`[CanvasHitDetector] Found ${m.length} nearby hotspots in ${f.toFixed(2)}ms`),m}generateSpiralSamples(e,t,s,o){const i=[],a=2*Math.PI/8,n=s/4;i.push([Math.floor(e),Math.floor(t)]);for(let r=n;r<=s;r+=n)for(let h=0;h<2*Math.PI;h+=a){const l=Math.floor(e+r*Math.cos(h)),c=Math.floor(t+r*Math.sin(h));i.push([l,c])}return i}indexToColor(e){const t=e>>16&255,s=e>>8&255,o=e&255;return`#${t.toString(16).padStart(2,"0")}${s.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}`}rgbToColor(e,t,s){return`#${e.toString(16).padStart(2,"0")}${t.toString(16).padStart(2,"0")}${s.toString(16).padStart(2,"0")}`}boundsEqual(e,t){return e.minX===t.minX&&e.minY===t.minY&&e.maxX===t.maxX&&e.maxY===t.maxY}getMetrics(){return{...this.metrics,colorMapSize:this.colorMap.size,canvasSize:this.config.canvasSize}}getDebugCanvas(){return this.hitCanvas.toDataURL()}setEnabled(e){this.config.enabled=e,e&&!this.hitCanvas&&this.initialize()}destroy(){this.viewer&&this.viewportHandler&&this.viewer.removeHandler("viewport-change",this.viewportHandler),this.hitCanvas&&(this.hitCanvas.width=0,this.hitCanvas.height=0,this.hitCanvas=null,this.hitCtx=null),this.colorMap.clear(),console.log("[CanvasHitDetector] Destroyed")}}var H={exports:{}};(function(g){(function(e){var t=function(){},s=e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.msRequestAnimationFrame||function(l){return setTimeout(l,16)};function o(){var l=this;l.reads=[],l.writes=[],l.raf=s.bind(e)}o.prototype={constructor:o,runTasks:function(l){for(var c;c=l.shift();)c()},measure:function(l,c){var p=c?l.bind(c):l;return this.reads.push(p),i(this),p},mutate:function(l,c){var p=c?l.bind(c):l;return this.writes.push(p),i(this),p},clear:function(l){return n(this.reads,l)||n(this.writes,l)},extend:function(l){if(typeof l!="object")throw new Error("expected object");var c=Object.create(this);return r(c,l),c.fastdom=this,c.initialize&&c.initialize(),c},catch:null};function i(l){l.scheduled||(l.scheduled=!0,l.raf(a.bind(null,l)))}function a(l){var c=l.writes,p=l.reads,m;try{t("flushing reads",p.length),l.runTasks(p),t("flushing writes",c.length),l.runTasks(c)}catch(f){m=f}if(l.scheduled=!1,(p.length||c.length)&&i(l),m)if(t("task errored",m.message),l.catch)l.catch(m);else throw m}function n(l,c){var p=l.indexOf(c);return!!~p&&!!l.splice(p,1)}function r(l,c){for(var p in c)c.hasOwnProperty(p)&&(l[p]=c[p])}var h=e.fastdom=e.fastdom||new o;g.exports=h})(typeof window<"u"?window:typeof k<"u"?k:globalThis)})(H);var q=H.exports;const P=z(q);class G{constructor(){this.pendingReads=[],this.pendingWrites=[],this.activeOperations=new Set,this.metrics={lastBatchTime:0,averageBatchTime:0,batchCount:0},console.log("[BatchDOMManager] Initialized for Phase 3 optimization")}batchRevealHotspots(e,t={}){const s=performance.now(),{staggerDelay:o=30,revealDuration:i=2e3,borderStyle:a="default"}=t;console.log(`[BatchDOMManager] Batching reveal for ${e.length} hotspots`);const n=new Array(e.length);e.forEach((r,h)=>{P.measure(()=>{n[h]={element:r,originalOpacity:r.style.opacity||"",originalVisibility:r.style.visibility||"",wasHidden:r.classList.contains("hotspot-hidden"),wasVisible:r.classList.contains("hotspot-visible"),currentTransform:window.getComputedStyle(r).transform,rect:r.getBoundingClientRect()}})}),P.mutate(()=>{e.forEach((h,l)=>{const p=`
                    opacity: 1;
                    visibility: visible;
                    display: block;
                    animation-delay: ${l*o}ms;
                    transform-origin: center center;
                    will-change: transform, opacity;
                `;h.style.cssText+=p,h.classList.remove("hotspot-hidden"),h.classList.add("hotspot-visible","hotspot-echo-reveal"),a!=="default"&&h.classList.add(`border-${a}`),h.setAttribute("data-hotspot-revealed","true"),this.activeOperations.add({element:h,measurement:n[l],borderStyle:a})});const r=performance.now()-s;this.updateMetrics(r),console.log(`[BatchDOMManager] Batch reveal completed in ${r.toFixed(2)}ms`),this.scheduleBatchHide(i)})}scheduleBatchHide(e){setTimeout(()=>{this.batchHideHotspots()},e)}batchHideHotspots(){if(this.activeOperations.size===0)return;const e=performance.now(),t=Array.from(this.activeOperations);console.log(`[BatchDOMManager] Batching hide for ${t.length} hotspots`),P.mutate(()=>{t.forEach(({element:o,measurement:i,borderStyle:a})=>{o.classList.remove("hotspot-echo-reveal","hotspot-echo-active","hotspot-echo-fade-out"),a!=="default"&&o.classList.remove(`border-${a}`),o.style.opacity=i.originalOpacity,o.style.visibility=i.originalVisibility,o.style.display="",o.style.animationDelay="",o.style.willChange="auto",i.wasHidden&&o.classList.add("hotspot-hidden"),i.wasVisible||o.classList.remove("hotspot-visible"),o.removeAttribute("data-hotspot-revealed")}),this.activeOperations.clear();const s=performance.now()-e;console.log(`[BatchDOMManager] Batch hide completed in ${s.toFixed(2)}ms`)})}batchUpdateVisibility(e){const t=performance.now();P.mutate(()=>{e.forEach(({element:o,visible:i})=>{i?(o.style.opacity="1",o.style.visibility="visible",o.classList.remove("hotspot-hidden"),o.classList.add("hotspot-visible")):(o.style.opacity="0",o.style.visibility="hidden",o.classList.add("hotspot-hidden"),o.classList.remove("hotspot-visible"))});const s=performance.now()-t;console.log(`[BatchDOMManager] Visibility update for ${e.length} elements in ${s.toFixed(2)}ms`)})}batchApplyTransforms(e){P.mutate(()=>{e.forEach(({element:t,transform:s})=>{t.style.transform=s,t.style.webkitTransform=s})})}batchMeasure(e,t){const s=new Array(e.length);e.forEach((o,i)=>{P.measure(()=>{s[i]={element:o,rect:o.getBoundingClientRect(),computed:window.getComputedStyle(o)}})}),P.mutate(()=>{t(s)})}updateMetrics(e){this.metrics.lastBatchTime=e,this.metrics.batchCount++,this.metrics.averageBatchTime=(this.metrics.averageBatchTime*(this.metrics.batchCount-1)+e)/this.metrics.batchCount,e>5&&console.warn(`[BatchDOMManager] Batch operation exceeded 5ms target: ${e.toFixed(2)}ms`)}getMetrics(){return{...this.metrics,activeOperations:this.activeOperations.size}}clear(){P.clear(),this.activeOperations.size>0&&this.batchHideHotspots(),this.pendingReads=[],this.pendingWrites=[]}destroy(){this.clear(),this.activeOperations.clear(),console.log("[BatchDOMManager] Destroyed")}}class X{constructor(e){this.viewer=e,this.canvas=null,this.context=null,this.cache=new Map,this.initializeCanvas()}initializeCanvas(){this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d",{willReadFrequently:!0})}calculateLuminance(e,t,s){const[o,i,a]=[e,t,s].map(n=>(n/=255,n<=.03928?n/12.92:Math.pow((n+.055)/1.055,2.4)));return o*.2126+i*.7152+a*.0722}calculateContrastRatio(e,t){const s=Math.max(e,t),o=Math.min(e,t);return(s+.05)/(o+.05)}async sampleBackgroundLuminance(e,t,s=50){const o=`${Math.round(e)}_${Math.round(t)}_${s}`;if(this.cache.has(o))return this.cache.get(o);try{if(!await this.captureViewportArea(e,t,s))return this.getDefaultLuminanceData();const a=this.getSamplePoints(s),n=[];for(const m of a){const f=s+m.x,v=s+m.y,w=this.context.getImageData(f,v,1,1).data,T=this.calculateLuminance(w[0],w[1],w[2]);n.push(T)}const r=n.reduce((m,f)=>m+f,0)/n.length,h=Math.min(...n),l=Math.max(...n),c=this.calculateVariance(n,r),p={averageLuminance:r,minLuminance:h,maxLuminance:l,variance:c,isDark:r<.5,isHighContrast:l-h>.5,recommendedEffect:this.selectHotspotEffect(r,c)};return this.cache.set(o,p),p}catch(i){return console.error("Error sampling background luminance:",i),this.getDefaultLuminanceData()}}async captureViewportArea(e,t,s){return null}getSamplePoints(e){const t=[];t.push({x:0,y:0});for(let i=1;i<=3;i++){const a=e*i/3;for(let n=0;n<8;n++){const r=n/8*Math.PI*2;t.push({x:Math.cos(r)*a,y:Math.sin(r)*a})}}return t}calculateVariance(e,t){return e.map(o=>Math.pow(o-t,2)).reduce((o,i)=>o+i,0)/e.length}selectHotspotEffect(e,t){return t>.1?"contrast-adaptive-complex":e<.3?"contrast-adaptive-dark":e>.7?"contrast-adaptive-light":"contrast-adaptive-medium"}getDefaultLuminanceData(){return{averageLuminance:.5,minLuminance:0,maxLuminance:1,variance:.1,isDark:!1,isHighContrast:!0,recommendedEffect:"contrast-adaptive-medium"}}clearCache(){this.cache.clear()}getCacheSize(){return this.cache.size}}class Y{constructor(){this.shadowCache=new Map,this.svgNamespace="http://www.w3.org/2000/svg",this.initialized=!1,this.shadowConfigs={echoReveal:{blur:4,color:"rgba(255, 255, 255, 0.8)",id:"echo-reveal-shadow"},echoIntense:{blur:10,color:"rgba(255, 255, 255, 0.8)",id:"echo-intense-shadow"},hover:{blur:8,color:"rgba(255, 255, 255, 0.6)",id:"hover-shadow"}}}initialize(){this.initialized||(console.log("[ShadowSpriteManager] Initializing pre-rendered shadows"),this.createShadowContainer(),Object.entries(this.shadowConfigs).forEach(([e,t])=>{this.createShadowFilter(t),this.shadowCache.set(e,t.id)}),this.initialized=!0,console.log("[ShadowSpriteManager] Shadow sprites initialized"))}createShadowContainer(){if(document.getElementById("shadow-sprite-defs"))return;const e=document.createElementNS(this.svgNamespace,"svg");e.id="shadow-sprite-defs",e.style.position="absolute",e.style.width="0",e.style.height="0",e.style.visibility="hidden",e.setAttribute("aria-hidden","true");const t=document.createElementNS(this.svgNamespace,"defs");e.appendChild(t),document.body.appendChild(e),this.defsContainer=t}createShadowFilter(e){const t=document.createElementNS(this.svgNamespace,"filter");t.id=e.id,t.setAttribute("x","-50%"),t.setAttribute("y","-50%"),t.setAttribute("width","200%"),t.setAttribute("height","200%");const s=document.createElementNS(this.svgNamespace,"feGaussianBlur");s.setAttribute("in","SourceAlpha"),s.setAttribute("stdDeviation",e.blur),s.setAttribute("result","blur");const o=document.createElementNS(this.svgNamespace,"feColorMatrix");o.setAttribute("in","blur"),o.setAttribute("type","matrix");const i=this.parseRGBA(e.color),a=`0 0 0 0 ${i.r} 
                       0 0 0 0 ${i.g} 
                       0 0 0 0 ${i.b} 
                       0 0 0 ${i.a} 0`;o.setAttribute("values",a),o.setAttribute("result","coloredBlur");const n=document.createElementNS(this.svgNamespace,"feMerge"),r=document.createElementNS(this.svgNamespace,"feMergeNode");r.setAttribute("in","coloredBlur");const h=document.createElementNS(this.svgNamespace,"feMergeNode");h.setAttribute("in","SourceGraphic"),n.appendChild(r),n.appendChild(h),t.appendChild(s),t.appendChild(o),t.appendChild(n),this.defsContainer.appendChild(t)}parseRGBA(e){const t=e.match(/rgba?\((\d+),\s*(\d+),\s*(\d+),?\s*([0-9.]+)?\)/);return t?{r:parseInt(t[1])/255,g:parseInt(t[2])/255,b:parseInt(t[3])/255,a:t[4]?parseFloat(t[4]):1}:{r:1,g:1,b:1,a:1}}applyShadow(e,t){this.initialized||this.initialize();const s=this.shadowCache.get(t);if(!s){console.warn(`[ShadowSpriteManager] Unknown shadow type: ${t}`);return}e.style.filter=`url(#${s})`,e.dataset.willChangeApplied||(e.style.willChange="filter",e.dataset.willChangeApplied="true")}removeShadow(e){e.style.filter="",e.dataset.willChangeApplied&&setTimeout(()=>{e.style.willChange="auto",delete e.dataset.willChangeApplied},100)}applyShadowBatch(e,t){this.initialized||this.initialize();const s=this.shadowCache.get(t);s&&requestAnimationFrame(()=>{e.forEach(o=>{o.style.filter=`url(#${s})`})})}destroy(){const e=document.getElementById("shadow-sprite-defs");e&&e.remove(),this.shadowCache.clear(),this.initialized=!1}}const R=new Y;function V(g,e){if(!g)return;const t=g.getBoundingClientRect(),s=t.left+t.width/2,o=t.top+t.height/2,i=document.createElement("div");i.className="hotspot-center-debug",i.style.cssText=`
        position: fixed;
        width: 10px;
        height: 10px;
        background: red;
        border: 2px solid white;
        border-radius: 50%;
        left: ${s-7}px;
        top: ${o-7}px;
        z-index: 99999;
        pointer-events: none;
        box-shadow: 0 0 5px rgba(0,0,0,0.5);
    `;const a=document.createElement("div");a.style.cssText=`
        position: absolute;
        top: -20px;
        left: 50%;
        transform: translateX(-50%);
        background: rgba(0,0,0,0.8);
        color: white;
        padding: 2px 6px;
        font-size: 10px;
        white-space: nowrap;
        border-radius: 3px;
    `,a.textContent=e.substring(0,8),i.appendChild(a),document.body.appendChild(i);let n=0;const r=()=>{n++;const h=g.getBoundingClientRect(),l=h.left+h.width/2,c=h.top+h.height/2;i.style.left=`${l-7}px`,i.style.top=`${c-7}px`;const p=Math.abs(l-s),m=Math.abs(c-o);(p>1||m>1)&&(console.warn(`[HotspotDebug] Position shift detected for ${e}:`,{deltaX:p.toFixed(2),deltaY:m.toFixed(2),frame:n,originalCenter:{x:s,y:o},newCenter:{x:l,y:c}}),i.style.background="yellow",i.style.boxShadow="0 0 10px red"),n<60?requestAnimationFrame(r):setTimeout(()=>{i.remove()},1e3)};requestAnimationFrame(r)}window.enableHotspotPositionDebug=()=>{window.hotspotPositionDebugEnabled=!0,console.log("[HotspotDebug] Position debugging enabled. Red dots will show hotspot centers during reveal.")};window.disableHotspotPositionDebug=()=>{window.hotspotPositionDebugEnabled=!1,document.querySelectorAll(".hotspot-center-debug").forEach(g=>g.remove()),console.log("[HotspotDebug] Position debugging disabled.")};class j{constructor(e={}){this.viewer=e.viewer,this.eventCoordinator=e.eventCoordinator,this.hotspotRenderer=e.hotspotRenderer,this.stateManager=e.stateManager,this.spatialIndex=e.spatialIndex,this.config={echoRadius:e.echoRadius||200,echoDelay:e.echoDelay||0,echoDuration:e.echoDuration||800,maxSimultaneous:e.maxSimultaneous||10,staggerDelay:e.staggerDelay||12,revealDuration:e.revealDuration||2e3,enabled:e.enabled!==!1,mobileMaxHotspots:e.mobileMaxHotspots||8,useAquaticEffect:!1,useCanvasAnimation:!1,useAdjacentSelection:e.useAdjacentSelection!==!1,adjacencyThreshold:e.adjacencyThreshold||50},this.activeEchoes=new Set,this.echoAnimations=new Map,this.activeTimeouts=new Set,this.spatialIndexReady=!1,this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,this.canvasRenderer=null,this.isRevealing=!1,this.batchDOMManager=null,this.useBatchDOM=e.useBatchDOM!==!1,this.hitDetector=null,this.useCanvasHitDetection=e.useCanvasHitDetection!==!1,this.initializeGestureAdapter(),this.initializeRippleRenderer(),this.initializeCanvasRenderer(),this.initializeBatchDOMManager(),this.initializeHitDetector(),this.isMobile&&R.initialize(),this.initializeContrastDetection(),this.frameCount=0,this.lastFPSCheck=performance.now(),this.currentFPS=60,console.log("[TemporalEchoController] Initialized",this.config),window.temporalEchoController=this,window.debugRevealHotspot=t=>{const o={hotspot:{id:t},centerX:100,centerY:100};this.revealSingleHotspot(o,{},0)},window.debugShowAllHotspots=()=>{const t=document.querySelectorAll("[data-hotspot-id]");console.log(`[Debug] Found ${t.length} hotspot elements`),t.forEach((s,o)=>{o<5&&console.log(`[Debug] Hotspot ${o}:`,{id:s.getAttribute("data-hotspot-id"),tagName:s.tagName,className:s.className,opacity:window.getComputedStyle(s).opacity,visibility:window.getComputedStyle(s).visibility,display:window.getComputedStyle(s).display})})}}initializeGestureAdapter(){this.gestureAdapter=new $({eventCoordinator:this.eventCoordinator,viewer:this.viewer,onQuickTap:this.handleQuickTap.bind(this)}),this.config.enabled&&this.gestureAdapter.enable()}initializeRippleRenderer(){this.rippleRenderer=new F({viewer:this.viewer,radius:this.config.echoRadius,duration:this.config.echoDuration,maxRipples:3,onRippleComplete:this.handleRippleComplete.bind(this)}),this.config.enabled&&this.rippleRenderer.initialize(),window.cssRippleRenderer=this.rippleRenderer}initializeCanvasRenderer(){if(!this.config.useCanvasAnimation||!this.isMobile){console.log("[TemporalEchoController] Canvas animation disabled or not mobile");return}this.canvasRenderer=new N({viewer:this.viewer,container:this.viewer.container}),window.temporalEchoController=this,console.log("[TemporalEchoController] Canvas renderer initialized for hybrid animations")}initializeContrastDetection(){this.contrastDetection=new X(this.viewer),window.contrastDetection=this.contrastDetection}initializeBatchDOMManager(){if(!this.useBatchDOM||!this.isMobile){console.log("[TemporalEchoController] Batch DOM disabled or not mobile");return}this.batchDOMManager=new G,window.batchDOMManager=this.batchDOMManager,console.log("[TemporalEchoController] BatchDOMManager initialized for Phase 3 optimization")}initializeHitDetector(){if(!this.useCanvasHitDetection||!this.isMobile){console.log("[TemporalEchoController] Canvas hit detection disabled or not mobile");return}this.hitDetector=new B({viewer:this.viewer,spatialIndex:this.spatialIndex,enabled:!0}),window.hitDetector=this.hitDetector,console.log("[TemporalEchoController] CanvasHitDetector initialized for Phase 4 optimization")}handleQuickTap(e){if(console.log("[TemporalEchoController] handleQuickTap called, enabled:",this.config.enabled),this.revealCount||(this.revealCount=0),this.revealCount++,console.log(`[TemporalEchoController] Reveal #${this.revealCount} starting`),!this.config.enabled)return console.log("[TemporalEchoController] Echo disabled, skipping"),!1;if(!this.isMobile)return console.log("[TemporalEchoController] Not on mobile, skipping echo"),!1;const t=this.viewer.element.getBoundingClientRect(),s=new M.Point(e.x-t.left,e.y-t.top),o=this.viewer.viewport.pointFromPixel(s),i=this.viewer.viewport.viewportToImageCoordinates(o),a=window.nativeHotspotRenderer&&window.nativeHotspotRenderer.engine.findSmallestHotspotAtPoint(i);if(a&&this.isHotspotRevealed(a.id))return console.log("[TemporalEchoController] Tapped on revealed hotspot, letting click handler take over:",a.id),!1;console.log("[TemporalEchoController] Quick tap detected on mobile, triggering echo",e),this.eventCoordinator.emit(this.eventCoordinator.eventTypes.ECHO_TAP,{x:e.x,y:e.y,viewportX:e.viewportX,viewportY:e.viewportY});const n=this.findHotspotsInRadius(e,this.config.echoRadius);if(this.canvasRenderer&&this.config.useCanvasAnimation&&n.length>0){console.log(`[TemporalEchoController] Using Canvas renderer for ${n.length} hotspots`),this.isRevealing=!0;const r={x:i.x,y:i.y};this.canvasRenderer.startRevealAnimation(n,r),setTimeout(()=>{this.revealHotspotsSVG(n,e),setTimeout(()=>{this.isRevealing=!1,window.nativeHotspotRenderer&&window.nativeHotspotRenderer.updateVisibility()},400)},600)}else this.rippleRenderer.createRipple(e.x,e.y),n.length>0?(console.log(`[TemporalEchoController] Found ${n.length} hotspots in radius (CSS fallback)`),this.revealHotspots(n,e)):console.log("[TemporalEchoController] No hotspots found in echo radius");return this.updateFPS(),!0}buildSpatialIndex(){if(!this.spatialIndex){console.warn("[TemporalEchoController] SpatialIndex not provided, skipping build");return}console.log("[TemporalEchoController] Building Flatbush spatial index for hotspots");const e=performance.now(),t=this.stateManager.getAllOverlays(),s=[];t.forEach((i,a)=>{const n=i.hotspot;!n||!n.coordinates||n.coordinates.length===0||s.push({id:a,shape:n.shape,coordinates:n.coordinates,hotspot:n,overlayData:i})}),this.spatialIndex.loadHotspots(s),this.spatialIndexReady=!0;const o=performance.now()-e;console.log(`[TemporalEchoController] Flatbush index built with ${s.length} hotspots in ${o.toFixed(2)}ms`)}findHotspotsInRadius(e,t){if(this.hitDetector&&this.useCanvasHitDetection&&this.isMobile&&!this.config.useAdjacentSelection){const s=this.canvasHitSearch(e,t);if(s&&s.length>0)return console.log("[TemporalEchoController] Using Canvas hit detection (Phase 4)"),s}return this.spatialIndexReady&&this.spatialIndex?this.spatialIndexSearch(e,t,this.config.useAdjacentSelection):!this.spatialIndexReady&&this.spatialIndex&&(this.buildSpatialIndex(),this.spatialIndexReady)?this.spatialIndexSearch(e,t,this.config.useAdjacentSelection):this.linearHotspotSearch(e,t)}canvasHitSearch(e,t){const s=performance.now(),o=this.viewer.element.getBoundingClientRect(),i=new M.Point(e.x-o.left,e.y-o.top),a=this.viewer.viewport.pointFromPixel(i),n=this.viewer.viewport.viewportToImageCoordinates(a),r=this.viewer.viewport.getBounds(),h=this.viewer.viewport.viewportToImageCoordinates(r.x,r.y),l=this.viewer.viewport.viewportToImageCoordinates(r.x+r.width,r.y+r.height),c={minX:h.x,minY:h.y,maxX:l.x,maxY:l.y},p=this.viewer.viewport.getZoom(),m=this.viewer.viewport.getContainerSize().x,v=this.viewer.world.getItemAt(0).getContentSize().x/m/p,w=t*v;console.log("[TemporalEchoController] Canvas hit - Radius conversion:",{radiusInPixels:t,radiusInImageSpace:w,tapImagePoint:{x:n.x,y:n.y}});const T=this.isMobile?this.config.mobileMaxHotspots:this.config.maxSimultaneous,d=this.hitDetector.findNearbyHits(n.x,n.y,w,c,T),u=[];for(const x of d){const y=this.spatialIndex.getHotspotById(x);if(y){const S=y.center.x-n.x,E=y.center.y-n.y,A=Math.sqrt(S*S+E*E);u.push({id:y.id,distance:A,hotspot:y.hotspot||y})}}const C=performance.now()-s;return C>2?console.warn(`[TemporalEchoController] Canvas hit search exceeded 2ms: ${C.toFixed(2)}ms`):console.log(`[TemporalEchoController] Ultra-fast Canvas hit: ${C.toFixed(2)}ms for ${u.length} hotspots`),u}spatialIndexSearch(e,t,s=!0){const o=performance.now(),i=this.viewer.element.getBoundingClientRect(),a=new M.Point(e.x-i.left,e.y-i.top),n=this.viewer.viewport.pointFromPixel(a),r=this.viewer.viewport.viewportToImageCoordinates(n),h=this.isMobile?this.config.mobileMaxHotspots:this.config.maxSimultaneous;let l;if(s&&this.spatialIndex.findAdjacentHotspots){console.log("[TemporalEchoController] Using adjacent hotspot selection for contiguous group");const f=50,v=new M.Point(a.x+f,a.y),w=this.viewer.viewport.pointFromPixel(v),T=this.viewer.viewport.viewportToImageCoordinates(w),d=Math.abs(T.x-r.x);l=this.spatialIndex.findAdjacentHotspots(r.x,r.y,h,d)}else{console.log("[TemporalEchoController] Using distance-based hotspot selection");const f=a,v=new M.Point(a.x+t,a.y),w=this.viewer.viewport.pointFromPixel(f),T=this.viewer.viewport.pointFromPixel(v),d=this.viewer.viewport.viewportToImageCoordinates(w),u=this.viewer.viewport.viewportToImageCoordinates(T),C=Math.abs(u.x-d.x);l=this.spatialIndex.findNearbyHotspots(r.x,r.y,C,h)}const c=l.map(f=>({id:f.id,distance:Math.sqrt(Math.pow(f.center.x-r.x,2)+Math.pow(f.center.y-r.y,2)),hotspot:f.hotspot||f})),p=performance.now()-o,m=s?"adjacent":"distance";return p>5?console.warn(`[TemporalEchoController] Slow ${m} search: ${p.toFixed(2)}ms for ${c.length} hotspots`):console.log(`[TemporalEchoController] Fast ${m} search: ${p.toFixed(2)}ms for ${c.length} hotspots`),c}linearHotspotSearch(e,t){const s=[],o=this.viewer.element.getBoundingClientRect(),i=new M.Point(e.x-o.left,e.y-o.top),a=this.viewer.viewport.pointFromPixel(i),n=this.viewer.viewport.viewportToImageCoordinates(a);console.log("[TemporalEchoController] Searching for hotspots at:",{pixelCoords:{x:e.x,y:e.y},viewportCoords:{x:a.x,y:a.y},imageCoords:{x:n.x,y:n.y}});const r=this.stateManager.getAllOverlays();console.log("[TemporalEchoController] Total overlays available:",r.size);let h=0;r.forEach((c,p)=>{const m=c.hotspot;if(!m||!m.coordinates||m.coordinates.length===0)return;h++;let f=0,v=0;const w=m.shape==="multipolygon"?m.coordinates[0]:m.coordinates;w.forEach(([S,E])=>{f+=S,v+=E}),f/=w.length,v/=w.length;const T=f-n.x,d=v-n.y,u=Math.sqrt(T*T+d*d),C=this.viewer.viewport.pointFromPixel(new M.Point(t,0)),x=this.viewer.viewport.viewportToImageCoordinates(C),y=Math.abs(x.x);if(h<=3&&console.log(`[TemporalEchoController] Hotspot ${p}:`,{hotspotCenter:{x:f,y:v},tapImagePoint:{x:n.x,y:n.y},distanceInImageSpace:u,radiusInImageSpace:y,inRadius:u<=y}),u<=y){const S=this.viewer.viewport.imageToViewportCoordinates(new M.Point(f,v)),E=this.viewer.viewport.pixelFromPoint(S);s.push({hotspot:m,distance:u,centerX:E.x+o.left,centerY:E.y+o.top})}}),console.log(`[TemporalEchoController] Checked ${h} hotspots, found ${s.length} in radius`),s.sort((c,p)=>c.distance-p.distance);const l=this.isMobile?this.config.mobileMaxHotspots:this.config.maxSimultaneous;return s.slice(0,l)}revealHotspots(e,t){this.eventCoordinator.emit(this.eventCoordinator.eventTypes.ECHO_REVEAL_START,{count:e.length,origin:t});const s=e,o=s.map(a=>a.hotspot.id);window.nativeHotspotRenderer&&window.nativeHotspotRenderer.activeHotspotManager&&(console.log("[TemporalEchoController] Preparing",o.length,"hotspots for reveal animation"),window.nativeHotspotRenderer.activeHotspotManager.forceShowHotspots(o,{maxForceShow:this.isMobile?this.config.mobileMaxHotspots:this.config.maxSimultaneous})),console.log("[TemporalEchoController] Using standard staggered animation"),s.forEach((a,n)=>{setTimeout(()=>{this.revealSingleHotspot(a,t,n)},n*this.config.staggerDelay)});const i=this.config.revealDuration+300+s.length*this.config.staggerDelay;this.cleanupTimeout&&(clearTimeout(this.cleanupTimeout),console.log("[TemporalEchoController] Cancelled previous cleanup timeout")),this.cleanupTimeout=setTimeout(()=>{this.cleanupRevealedHotspots(),this.eventCoordinator.emit(this.eventCoordinator.eventTypes.ECHO_REVEAL_END,{count:s.length}),this.cleanupTimeout=null},i)}applyWillChange(e){e.dataset.willChangeApplied||(e.style.willChange="transform, opacity",e.dataset.willChangeApplied="true")}removeWillChange(e,t=100){e.dataset.willChangeApplied&&setTimeout(()=>{e.style.willChange="auto",delete e.dataset.willChangeApplied},t)}findHotspotElement(e){let t=null;const s=this.stateManager.getOverlay(e);if(s&&s.element&&(t=s.element),!t){const o=document.querySelectorAll(".openseadragon-svg-overlay, .hotspot-overlay-svg, svg");for(const i of o)if(t=i.querySelector(`[data-hotspot-id="${e}"]`),t)break}if(t||(t=document.getElementById(`hotspot-${e}`)),!t){const o=document.querySelectorAll(`g[data-hotspot-id="${e}"]`);o.length>0&&(t=o[0])}return t}revealSingleHotspot(e,t,s){var T;const o=e.hotspot||e;console.log("[TemporalEchoController] revealSingleHotspot called for:",o.id);let i=null;const a=this.stateManager.getOverlay(o.id);if(a&&a.element&&(i=a.element,console.log("[TemporalEchoController] Found element via state manager")),!i){const d=document.querySelectorAll(".openseadragon-svg-overlay, .hotspot-overlay-svg, svg");for(const u of d)if(i=u.querySelector(`[data-hotspot-id="${o.id}"]`),i){console.log("[TemporalEchoController] Found element in container:",u.className);break}}if(i||(i=document.getElementById(`hotspot-${o.id}`),i&&console.log("[TemporalEchoController] Found element by ID")),!i){const d=document.querySelectorAll(`g[data-hotspot-id="${o.id}"]`);d.length>0&&(i=d[0],console.log("[TemporalEchoController] Found g element with hotspot id"))}if(!i){console.warn("[TemporalEchoController] No element found for hotspot",o.id);return}const n=i.style.opacity||"",r=i.style.visibility||"",h=i.classList.contains("hotspot-hidden"),l=i.classList.contains("hotspot-visible"),c=["blackOnBlack","pigmentLinerNeutral","pigmentLinerWarm","pigmentLinerCool"],p=(T=window.nativeHotspotRenderer)==null?void 0:T.currentPalette,m=c.includes(p);if(console.log("[TemporalEchoController] Current palette:",p,"isDarkMode:",m),this.activeEchoes.has(o.id)){console.log("[TemporalEchoController] Hotspot already animating, skipping:",o.id);return}i.classList.remove("hotspot-echo-reveal","hotspot-echo-fade-out","black-mode"),i.style.animationDelay="",i.tagName.toLowerCase()==="g"&&i.querySelectorAll("path, polygon, polyline").forEach(u=>{u.style.animationDelay=""}),window.getComputedStyle(i).transform;const f=i.style.top||window.getComputedStyle(i).top,v=i.style.left||window.getComputedStyle(i).left;requestAnimationFrame(async()=>{if(this.applyWillChange(i),i.style.setProperty("--hotspot-top",f),i.style.setProperty("--hotspot-left",v),i.style.transformOrigin="center center",i.style.webkitTransformOrigin="center center",i.classList.add("hotspot-echo-reveal"),m&&i.classList.add("black-mode"),window.hotspotPositionDebugEnabled&&V(i,o.id),this.isMobile){const y=i.querySelector(".main-path")||i.querySelector("path");y&&R.applyShadow(y,"echoReveal")}let d=localStorage.getItem("borderStyle")||"default";console.log("[TemporalEchoController] Initial borderStyle from localStorage:",d),console.log("[TemporalEchoController] isMobile:",this.isMobile),console.log("[TemporalEchoController] isBlackMode:",m);const u=/Android/i.test(navigator.userAgent);if(console.log("[TemporalEchoController] isAndroid:",u),u&&this.isMobile?(d="pigment",console.log("[TemporalEchoController] Forcing pigment style (black borders) for Android mobile")):this.isMobile&&d==="default"&&(d="emboss",console.log("[TemporalEchoController] Overriding to emboss for mobile")),!u&&m&&(d==="default"||d==="pigment")&&(d="emboss",console.log("[TemporalEchoController] Forcing emboss style for dark palette visibility")),console.log("[TemporalEchoController] Final borderStyle to apply:",d),d!=="default"){i.classList.add(`border-${d}`),console.log("[TemporalEchoController] Applied border style:",d),console.log("[TemporalEchoController] Element classes:",i.className);const y=setTimeout(()=>{var E;if(!i||!i.isConnected){this.activeTimeouts.delete(y);return}const S=i.querySelectorAll("path");if(S.length>0&&S.length<=2){const A=S[0],I=window.getComputedStyle(A);console.log("[TemporalEchoController] Path style check - filter:",((E=I.filter)==null?void 0:E.substring(0,50))+"...")}this.activeTimeouts.delete(y)},100);this.activeTimeouts.add(y),d==="gradient"&&!document.getElementById("adaptive-gradient")&&this.injectGradientDef(),d==="double"&&i.querySelector("path")&&this.createDoubleContour(i),d==="pigment"&&console.log("[TemporalEchoController] Applied pigment liner style")}else if(this.contrastDetection&&e.centerX&&e.centerY)try{const y=await this.contrastDetection.sampleBackgroundLuminance(e.centerX,e.centerY,50);i.classList.add(y.recommendedEffect),console.log("[TemporalEchoController] Applied contrast effect:",y.recommendedEffect)}catch{console.warn("[TemporalEchoController] Contrast detection failed, using default"),i.classList.add("contrast-adaptive-medium")}const C=s*this.config.staggerDelay;i.style.animationDelay=`${C}ms`,console.log(`[TemporalEchoController] Hotspot ${o.id} animation delay: ${C}ms (index: ${s})`),i.tagName.toLowerCase()==="g"&&i.querySelectorAll("path, polygon, polyline").forEach(S=>{S.style.animationDelay=`${C}ms`}),i.offsetHeight,console.log("[TemporalEchoController] Classes added:",i.classList.toString()),this.activeEchoes.add(o.id),this.echoAnimations.set(o.id,{element:i,originalOpacity:n,originalVisibility:r,wasHidden:h,wasVisible:l,isRevealed:!0}),i.setAttribute("data-hotspot-revealed","true");const x=setTimeout(()=>{i.classList.add("reveal-complete"),this.activeTimeouts.delete(x)},800);this.activeTimeouts.add(x)});const w=setTimeout(()=>{if(i.classList.remove("hotspot-echo-reveal","reveal-complete"),this.activeTimeouts.delete(w),i.style.animationDelay="",this.isMobile){const d=i.querySelector(".main-path")||i.querySelector("path");d&&R.removeShadow(d)}i.classList.add("hotspot-echo-fade-out"),setTimeout(()=>{i.classList.remove("hotspot-echo-fade-out","black-mode"),i.classList.remove("contrast-adaptive-dark","contrast-adaptive-light","contrast-adaptive-medium","contrast-adaptive-complex"),i.classList.remove("border-gradient","border-double","border-emboss","border-pulse","border-pigment"),i.getAnimations&&i.getAnimations().forEach(u=>{u.cancel()}),i.tagName.toLowerCase()==="g"&&i.querySelectorAll("*").forEach(C=>{C.getAnimations&&C.getAnimations().forEach(x=>{x.cancel()})}),this.removeWillChange(i,0);const d=this.stateManager.getSelectedHotspot();if(!d||d.id!==o.id){const u=this.echoAnimations.get(o.id);u&&(i.style.opacity=u.originalOpacity,i.style.visibility=u.originalVisibility,i.style.display="",u.wasHidden&&i.classList.add("hotspot-hidden"),u.wasVisible&&i.classList.add("hotspot-visible"),i.tagName.toLowerCase()==="g"&&i.querySelectorAll("path, polygon, polyline").forEach(x=>{x.style.animationDelay="",x.style.opacity="",x.style.visibility=""})),window.nativeHotspotRenderer&&window.nativeHotspotRenderer.updateVisibility&&setTimeout(()=>{window.nativeHotspotRenderer.updateVisibility()},100)}i.removeAttribute("data-hotspot-revealed"),this.activeEchoes.delete(o.id),this.echoAnimations.delete(o.id)},300)},this.config.revealDuration)}getHotspotElement(e){let t=null;const s=this.stateManager.getOverlay(e);if(s&&s.element&&(t=s.element),!t){const o=document.querySelectorAll(".openseadragon-svg-overlay, .hotspot-overlay-svg, svg");for(const i of o)if(t=i.querySelector(`[data-hotspot-id="${e}"]`),t)break}if(t||(t=document.getElementById(`hotspot-${e}`)),!t){const o=document.querySelectorAll(`g[data-hotspot-id="${e}"]`);o.length>0&&(t=o[0])}return t}revealHotspotsSVG(e,t){if(console.log(`[TemporalEchoController] Revealing ${e.length} hotspots in SVG`),this.batchDOMManager&&this.useBatchDOM){console.log("[TemporalEchoController] Using BatchDOMManager for efficient reveal");const s=[];if(e.forEach(o=>{const i=o.hotspot||o,a=this.getHotspotElement(i.id||o.id);a&&(s.push(a),this.activeEchoes.add(i.id||o.id))}),s.length>0){const o=localStorage.getItem("borderStyle")||"default";this.batchDOMManager.batchRevealHotspots(s,{staggerDelay:this.config.staggerDelay,revealDuration:this.config.revealDuration,borderStyle:o})}return}e.forEach((s,o)=>{const i=s.hotspot||s,a=this.getHotspotElement(i.id||s.id);if(!a)return;const n=a.style.opacity||"",r=a.style.visibility||"",h=a.classList.contains("hotspot-hidden"),l=a.classList.contains("hotspot-visible");a.classList.remove("hotspot-hidden"),a.classList.add("hotspot-visible","hotspot-echo-active"),a.style.opacity="1",a.style.visibility="visible",a.style.display="block",this.activeEchoes.add(s.id),this.echoAnimations.set(s.id,{element:a,originalOpacity:n,originalVisibility:r,wasHidden:h,wasVisible:l,isRevealed:!0}),a.setAttribute("data-hotspot-revealed","true")}),setTimeout(()=>{this.hideRevealedHotspots(e)},this.config.revealDuration)}hideRevealedHotspots(e){e.forEach(t=>{const s=t.id,o=this.echoAnimations.get(s);if(!o)return;const i=o.element;i.classList.remove("hotspot-echo-active"),i.removeAttribute("data-hotspot-revealed"),i.style.opacity=o.originalOpacity,i.style.visibility=o.originalVisibility,i.style.display="",o.wasHidden&&i.classList.add("hotspot-hidden"),o.wasVisible||i.classList.remove("hotspot-visible"),this.activeEchoes.delete(s),this.echoAnimations.delete(s)}),console.log("[TemporalEchoController] Hotspots hidden after reveal duration")}isHotspotRevealed(e){const t=this.echoAnimations.get(e);return t&&t.isRevealed===!0}handleRippleComplete(e){console.log("[TemporalEchoController] Ripple completed:",e)}updateFPS(){this.frameCount++;const e=performance.now(),t=e-this.lastFPSCheck;t>=1e3&&(this.currentFPS=Math.round(this.frameCount*1e3/t),this.frameCount=0,this.lastFPSCheck=e,this.currentFPS<30&&this.activeEchoes.size>0&&console.warn("[TemporalEchoController] Low FPS detected:",this.currentFPS))}enable(){this.config.enabled=!0,this.gestureAdapter.enable(),this.rippleRenderer.initialize(),this.fastPathListener=e=>{console.log("[TemporalEchoController] Fast-path ECHO_TAP received");const t=new M.Point(e.x-this.viewer.element.offsetLeft,e.y-this.viewer.element.offsetTop),s=this.viewer.viewport.pointFromPixel(t);this.handleQuickTap({x:e.x,y:e.y,viewportX:s.x,viewportY:s.y,timestamp:e.timestamp})},this.eventCoordinator.on(this.eventCoordinator.eventTypes.ECHO_TAP,this.fastPathListener),this.buildSpatialIndex(),console.log("[TemporalEchoController] Enabled with fast-path support and spatial index")}disable(){this.config.enabled=!1,this.gestureAdapter.disable(),this.rippleRenderer.cleanup(),this.clearActiveEchoes(),this.cleanupTimeout&&(clearTimeout(this.cleanupTimeout),this.cleanupTimeout=null),this.fastPathListener&&(this.eventCoordinator.off(this.eventCoordinator.eventTypes.ECHO_TAP,this.fastPathListener),this.fastPathListener=null),this.invalidateSpatialIndex(),console.log("[TemporalEchoController] Disabled")}invalidateSpatialIndex(){this.spatialIndexReady=!1,this.spatialIndex&&this.spatialIndex.clear()}cleanupRevealedHotspots(){var s,o;console.log(`[TemporalEchoController] Cleaning up revealed hotspots for Safari iOS (Reveal #${this.revealCount})`),this.activeTimeouts.forEach(i=>{clearTimeout(i)}),this.activeTimeouts.clear(),document.querySelectorAll(".hotspot-echo-reveal, .hotspot-echo-fade-out").forEach(i=>{i.classList.remove("hotspot-echo-reveal","hotspot-echo-fade-out","black-mode"),i.style.removeProperty("visibility"),i.style.removeProperty("display"),i.style.removeProperty("z-index"),i.style.removeProperty("pointer-events"),i.style.removeProperty("animation-delay"),i.style.removeProperty("opacity"),i.style.removeProperty("transform"),i.style.removeProperty("-webkit-transform"),i.getAnimations&&i.getAnimations().forEach(a=>{a.cancel()})}),window.safariOverlayManager&&(window.safariOverlayManager.resetMask&&window.safariOverlayManager.resetMask(),window.safariOverlayManager.resetFocusTracking&&window.safariOverlayManager.resetFocusTracking()),(this.isSafari||this.isIOS)&&(s=window.nativeHotspotRenderer)!=null&&s.safariCompat&&window.nativeHotspotRenderer.safariCompat.forceIOSRedraw(),this.activeEchoes.clear(),this.echoAnimations.clear();const t=document.querySelectorAll(".hotspot-echo-reveal");if(t.length>0&&console.warn(`[TemporalEchoController] WARNING: ${t.length} elements still have reveal class after cleanup!`),(o=window.safariOverlayManager)!=null&&o.overlayElement){const i=window.getComputedStyle(window.safariOverlayManager.overlayElement).webkitMaskImage;i&&i!=="none"&&console.warn("[TemporalEchoController] WARNING: Safari overlay still has mask after cleanup:",i)}console.log(`[TemporalEchoController] Cleanup complete for Reveal #${this.revealCount}`)}clearActiveEchoes(){this.activeEchoes.forEach(e=>{const t=this.echoAnimations.get(e);if(t&&t.element){if(t.element.classList.remove("hotspot-echo-reveal","hotspot-echo-fade-out","black-mode"),t.element.style.animationDelay="",t.element.style.opacity=t.originalOpacity,t.element.style.visibility=t.originalVisibility,t.element.style.display="",this.isMobile){const s=t.element.querySelector(".main-path")||t.element.querySelector("path");s&&R.removeShadow(s)}t.element.tagName.toLowerCase()==="g"&&t.element.querySelectorAll("path, polygon, polyline").forEach(o=>{o.style.animationDelay="",o.style.opacity="",o.style.visibility=""})}}),this.activeEchoes.clear(),this.echoAnimations.clear()}updateConfig(e){Object.assign(this.config,e),(e.quickTapThreshold!==void 0||e.movementThreshold!==void 0)&&this.gestureAdapter.updateConfig(e)}getFPS(){return this.rippleRenderer?this.rippleRenderer.getFPS():60}getPerformanceMetrics(){return this.rippleRenderer?this.rippleRenderer.getPerformanceMetrics():null}injectGradientDef(){if(document.getElementById("adaptive-gradient"))return;const e="http://www.w3.org/2000/svg",t=document.createElementNS(e,"svg");t.style.position="absolute",t.style.width="0",t.style.height="0",t.style.overflow="hidden";const s=document.createElementNS(e,"defs"),o=document.createElementNS(e,"linearGradient");o.id="adaptive-gradient",o.setAttribute("x1","0%"),o.setAttribute("y1","0%"),o.setAttribute("x2","100%"),o.setAttribute("y2","100%");const i=document.createElementNS(e,"stop");i.setAttribute("offset","0%"),i.setAttribute("stop-color","white"),i.setAttribute("stop-opacity","1");const a=document.createElementNS(e,"stop");a.setAttribute("offset","50%"),a.setAttribute("stop-color","gray"),a.setAttribute("stop-opacity","0.8");const n=document.createElementNS(e,"stop");n.setAttribute("offset","100%"),n.setAttribute("stop-color","black"),n.setAttribute("stop-opacity","1"),o.appendChild(i),o.appendChild(a),o.appendChild(n),s.appendChild(o),t.appendChild(s),document.body.appendChild(t)}createDoubleContour(e){e.querySelectorAll("path").forEach(s=>{if(s.nextSibling&&s.nextSibling.classList&&s.nextSibling.classList.contains("outer-stroke"))return;const o=s.cloneNode(!0);o.classList.add("outer-stroke"),o.style.zIndex="-1",s.parentNode.insertBefore(o,s)})}injectPigmentTextureFilter(){const e="http://www.w3.org/2000/svg",t=document.createElementNS(e,"svg");t.style.position="absolute",t.style.width="0",t.style.height="0",t.style.overflow="hidden",t.setAttribute("aria-hidden","true");const s=document.createElementNS(e,"defs"),o=document.createElementNS(e,"filter");o.id="pigmentTexture",o.setAttribute("x","-50%"),o.setAttribute("y","-50%"),o.setAttribute("width","200%"),o.setAttribute("height","200%"),o.setAttribute("color-interpolation-filters","sRGB");const i=document.createElementNS(e,"feTurbulence");i.setAttribute("type","turbulence"),i.setAttribute("baseFrequency","0.5 0.1"),i.setAttribute("numOctaves","2"),i.setAttribute("seed","5"),i.setAttribute("result","turbulence");const a=document.createElementNS(e,"feDisplacementMap");a.setAttribute("in","SourceGraphic"),a.setAttribute("in2","turbulence"),a.setAttribute("scale","2"),a.setAttribute("xChannelSelector","R"),a.setAttribute("yChannelSelector","G"),a.setAttribute("result","displaced");const n=document.createElementNS(e,"feMorphology");n.setAttribute("in","displaced"),n.setAttribute("operator","dilate"),n.setAttribute("radius","0.5"),n.setAttribute("result","dilated");const r=document.createElementNS(e,"feComposite");r.setAttribute("in","dilated"),r.setAttribute("in2","displaced"),r.setAttribute("operator","over"),r.setAttribute("result","final");const h=document.createElementNS(e,"feComponentTransfer");h.setAttribute("in","final");const l=document.createElementNS(e,"feFuncA");l.setAttribute("type","discrete"),l.setAttribute("tableValues","0 1"),h.appendChild(l),o.appendChild(i),o.appendChild(a),o.appendChild(n),o.appendChild(r),o.appendChild(h),s.appendChild(o),t.appendChild(s),document.body.appendChild(t),console.log("[TemporalEchoController] Injected pigment texture filter")}destroy(){this.disable(),this.gestureAdapter.destroy(),this.rippleRenderer.destroy(),this.clearActiveEchoes(),this.canvasRenderer&&(this.canvasRenderer.destroy(),this.canvasRenderer=null),this.batchDOMManager&&(this.batchDOMManager.destroy(),this.batchDOMManager=null),this.hitDetector&&(this.hitDetector.destroy(),this.hitDetector=null)}}window.updateBorderStyle=function(g){console.log("[TemporalEchoController] Border style updated to:",g)};window.toggleAdjacentSelection=function(g){if(window.temporalEchoController){const e=window.temporalEchoController.config.useAdjacentSelection;return window.temporalEchoController.config.useAdjacentSelection=g!==void 0?g:!e,console.log("[TemporalEchoController] Adjacent selection mode:",window.temporalEchoController.config.useAdjacentSelection?"ENABLED (cÃ´te Ã  cÃ´te)":"DISABLED (distance-based)"),window.temporalEchoController.config.useAdjacentSelection}return console.error("TemporalEchoController not initialized"),!1};window.setAdjacencyThreshold=function(g){window.temporalEchoController?(window.temporalEchoController.config.adjacencyThreshold=g,console.log("[TemporalEchoController] Adjacency threshold set to:",g,"pixels")):console.error("TemporalEchoController not initialized")};export{j as default};
