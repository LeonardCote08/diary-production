var O=Object.defineProperty;var F=(r,t,e)=>t in r?O(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var L=(r,t,e)=>F(r,typeof t!="symbol"?t+"":t,e);import{O as T,i as k,b as $}from"./main-BlvKj8Dz.js";import{p as M,a as V}from"./viewerSetup-D__f9bGq.js";class X{constructor(t={}){this.audioEngine=t.audioEngine||window.audioEngine,this.onPhaseChange=t.onPhaseChange||(()=>{}),this.modeStateManager=t.modeStateManager,this.thresholds={explore:300,preview:500,activate:800},this.state={isHolding:!1,holdStartTime:0,holdTimer:null,currentPhase:null,targetHotspot:null,feedbackGiven:new Set},this.currentPointerX=null,this.currentPointerY=null,this.progressElement=null,this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window}startHold(t,e,i){t&&(this.modeStateManager&&(this.modeStateManager.modeStates.temporal.active||this.modeStateManager.modeStates.temporal.phase)&&(console.warn("[TEMPORAL_DEBUG] Cleaning stale temporal state before startHold"),this.modeStateManager.setTemporalState(!1,null),this.modeStateManager.modeStates.temporal.active=!1,this.modeStateManager.modeStates.temporal.phase=null),this.state.isHolding=!0,this.state.holdStartTime=Date.now(),this.state.targetHotspot=t,this.state.feedbackGiven.clear(),this.state.currentPhase=null,this.onPhaseChange&&this.onPhaseChange("initial",t),this.isMobile&&this.createTouchRipple(e,i),this.state.holdTimer&&clearTimeout(this.state.holdTimer),this.scheduleFeedback(),this.showProgressIndicator(e,i),this.currentPointerX=e,this.currentPointerY=i,this.animateProgress())}endHold(){const t=this.state.isHolding?Date.now()-this.state.holdStartTime:0,e=this.state.targetHotspot,i=this.state.currentPhase;return this.state.holdTimer&&(clearTimeout(this.state.holdTimer),this.state.holdTimer=null),this.hideProgressIndicator(),this.state.isHolding=!1,this.state.holdStartTime=0,this.state.currentPhase=null,this.state.targetHotspot=null,this.state.feedbackGiven.clear(),this.cleanupTemporalVisuals(),this.modeStateManager&&this.modeStateManager.setTemporalState(!1,null),{duration:t,hotspot:e,finalPhase:i}}cleanupTemporalVisuals(){const t=["hotspot-temporal-touchDown","hotspot-temporal-explore","hotspot-temporal-preview","hotspot-temporal-activate"];document.querySelectorAll("[data-hotspot-id]").forEach(e=>{t.forEach(i=>{e.classList.remove(i)})}),this.modeStateManager&&this.modeStateManager.setTemporalState(!1,null)}scheduleFeedback(){this.giveFeedback("touchDown"),this.state.holdTimer=setTimeout(()=>{this.state.isHolding&&(this.state.currentPhase="explore",this.giveFeedback("explore"),this.state.holdTimer=setTimeout(()=>{this.state.isHolding&&(this.state.currentPhase="preview",this.giveFeedback("preview"),this.state.holdTimer=setTimeout(()=>{this.state.isHolding&&(this.state.currentPhase="activate",this.giveFeedback("activate"))},this.thresholds.activate-this.thresholds.preview))},this.thresholds.preview-this.thresholds.explore))},this.thresholds.explore)}giveFeedback(t){if(!this.state.isHolding){console.log("[TEMPORAL_DEBUG] Ignoring feedback - not holding");return}this.state.feedbackGiven.has(t)||(this.state.feedbackGiven.add(t),t==="touchDown"&&this.isMobile&&this.playHaptic("touchDown"),this.onPhaseChange(t,this.state.targetHotspot),this.playAudio(t),this.playHaptic(t))}playAudio(t){if(!this.audioEngine)return;const e=this.calculateHotspotSize(this.state.targetHotspot);switch(t){case"touchDown":this.audioEngine.playTemporalSound("touch",2e3,20);break;case"explore":this.audioEngine.playTemporalTick(e);break;case"preview":this.audioEngine.playTemporalBoop();break;case"activate":this.audioEngine.playTemporalThunk(e);break}}playHaptic(t){if(!navigator.vibrate||!/Android|iPhone|iPad|iPod/i.test(navigator.userAgent))return;const e={touchDown:[20,10,20],explore:20,preview:[30,10,30],activate:100};e[t]&&navigator.vibrate(e[t])}calculateHotspotSize(t){if(!t||!t.coordinates)return .5;let e=1/0,i=-1/0,s=1/0,o=-1/0;(t.shape==="multipolygon"?t.coordinates[0]:t.coordinates).forEach(([h,l])=>{e=Math.min(e,h),i=Math.max(i,h),s=Math.min(s,l),o=Math.max(o,l)});const n=(i-e)*(o-s);return Math.min(1,Math.max(0,n/1e4))}createProgressIndicator(){this.progressElement||(this.progressElement=document.createElement("div"),this.progressElement.className="temporal-progress-indicator",this.progressElement.innerHTML=`
            <svg width="64" height="64" style="position: absolute; top: -2px; left: -2px; transform: rotate(-90deg);">
                <circle cx="32" cy="32" r="30" fill="none" stroke="rgba(255,255,255,0.2)" stroke-width="4"/>
                <circle cx="32" cy="32" r="30" fill="none" stroke="rgba(255,255,255,0.9)" stroke-width="4"
                        stroke-dasharray="188.5" stroke-dashoffset="188.5" class="progress-ring"/>
            </svg>
        `,document.body.appendChild(this.progressElement))}createTouchRipple(t,e){const i=document.createElement("div");i.className="temporal-touch-ripple",i.style.left=t-20+"px",i.style.top=e-20+"px",document.body.appendChild(i),setTimeout(()=>{i.remove()},600)}showProgressIndicator(t,e){this.progressElement||this.createProgressIndicator(),this.progressElement.style.display="block",this.progressElement.style.left=t+"px",this.progressElement.style.top=e+"px"}hideProgressIndicator(){this.progressElement&&(this.progressElement.style.display="none")}updateProgress(t,e,i){this.progressElement&&(this.currentPointerX=t,this.currentPointerY=e,this.progressElement.style.left=t+"px",this.progressElement.style.top=e+"px")}animateProgress(){if(!this.state.isHolding){this.hideProgressIndicator();return}const t=Date.now()-this.state.holdStartTime,e=this.thresholds.activate+200,i=Math.min(1,t/e);if(this.progressElement){const s=this.progressElement.querySelector(".progress-ring");if(s){const o=188.5-188.5*i;s.style.strokeDashoffset=o}this.currentPointerX!==void 0&&this.currentPointerY!==void 0&&(this.progressElement.style.left=this.currentPointerX+"px",this.progressElement.style.top=this.currentPointerY+"px")}this.state.isHolding&&i<1?requestAnimationFrame(()=>this.animateProgress()):this.hideProgressIndicator()}getCurrentProgress(){if(!this.state.isHolding)return 0;const t=Date.now()-this.state.holdStartTime,e=this.thresholds.activate+200;return Math.min(1,t/e)}updateThreshold(t,e){this.thresholds[t]!==void 0&&(this.thresholds[t]=e)}reset(){this.endHold(),this.progressElement&&(this.progressElement.remove(),this.progressElement=null)}destroy(){this.reset()}}class Z{constructor(){this.modes={direct:{name:"Direct (Classic)",description:"Tap to select and zoom immediately",mobile:!0,desktop:!0},temporal:{name:"Temporal (Hold)",description:"Hold duration determines action",mobile:!0,desktop:!0}};const t=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window;this.currentMode=localStorage.getItem("interactionMode")||(t?"temporal":"direct"),this.modeStates={temporal:{active:!1,phase:null},reveal:{active:!1,timer:null,style:localStorage.getItem("revealStyle")||"invert"}},this.listeners={modeChange:[],stateChange:[]}}getCurrentMode(){return this.currentMode}setMode(t){if(!this.modes[t])return!1;const e=this.currentMode;return this.currentMode=t,localStorage.setItem("interactionMode",t),this.notifyListeners("modeChange",{from:e,to:t}),!0}getModeConfig(t=this.currentMode){return this.modes[t]}setTemporalState(t,e=null){const i=this.modeStates.temporal.active;this.modeStates.temporal.active=t,this.modeStates.temporal.phase=e,console.log("[ModeStateManager] Temporal state changed:",{from:{active:i,phase:this.modeStates.temporal.phase},to:{active:t,phase:e},timestamp:Date.now()}),this.notifyListeners("stateChange",{mode:"temporal",state:this.modeStates.temporal})}isTemporalActive(){return this.currentMode==="temporal"&&this.modeStates.temporal.active}setRevealActive(t){this.modeStates.reveal.active=t,!t&&this.modeStates.reveal.timer&&(clearTimeout(this.modeStates.reveal.timer),this.modeStates.reveal.timer=null),this.notifyListeners("stateChange",{mode:"reveal",state:this.modeStates.reveal})}isRevealActive(){return this.modeStates.reveal.active}setRevealTimer(t){this.modeStates.reveal.timer=t}setRevealStyle(t){this.modeStates.reveal.style=t,localStorage.setItem("revealStyle",t)}getRevealStyle(){return this.modeStates.reveal.style}shouldBlockNormalInteractions(){return this.isTemporalActive()||this.isRevealActive()}on(t,e){this.listeners[t]&&this.listeners[t].push(e)}off(t,e){if(this.listeners[t]){const i=this.listeners[t].indexOf(e);i>-1&&this.listeners[t].splice(i,1)}}notifyListeners(t,e){this.listeners[t]&&this.listeners[t].forEach(i=>i(e))}reset(){this.modeStates.temporal.active=!1,this.modeStates.temporal.phase=null,this.setRevealActive(!1)}forceTemporalCleanup(){console.log("[ModeStateManager] Force temporal cleanup"),this.modeStates.temporal.active=!1,this.modeStates.temporal.phase=null,this.notifyListeners("stateChange",{mode:"temporal",state:this.modeStates.temporal})}}class U{constructor(t={}){this.viewer=t.viewer,this.spatialIndex=t.spatialIndex,this.debug=t.debug||!1,this.hitCanvas=null,this.hitContext=null,this.debugCanvas=null,this.colorToHotspot=new Map,this.hotspotToColor=new Map,this.nextColorIndex=1,this.stats={totalHotspots:0,renderedHotspots:0,lastRenderTime:0,hitTestCount:0,cacheHits:0},this.isInitialized=!1,this.needsRedraw=!0,this.currentViewport=null,this.hitCache=new Map,this.hitCacheSize=50,this.lastCacheClear=Date.now(),this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,this.isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),console.log("[HIT_DETECTION] Initializing for platform:",{isMobile:this.isMobile,isSafari:this.isSafari,debug:this.debug})}async initialize(){if(this.isInitialized){console.warn("[HIT_DETECTION] Already initialized");return}if(!this.viewer||!this.spatialIndex)throw new Error("HitDetectionCanvas requires viewer and spatialIndex");const t=performance.now();try{await this.waitForViewer(),this.createCanvasElements(),this.generateColorMapping(),this.setupEventHandlers(),this.scheduleRedraw(),this.isInitialized=!0;const e=performance.now()-t;console.log(`[HIT_DETECTION] Initialized in ${e.toFixed(2)}ms`,{totalHotspots:this.stats.totalHotspots,canvasSize:`${this.hitCanvas.width}x${this.hitCanvas.height}`,isMobile:this.isMobile})}catch(e){throw console.error("[HIT_DETECTION] Initialization failed:",e),e}}waitForViewer(){return new Promise(t=>{this.viewer.isOpen()&&this.viewer.world.getItemCount()>0?t():this.viewer.addOnceHandler("open",()=>{setTimeout(t,100)})})}createCanvasElements(){const e=this.viewer.world.getItemAt(0).getContentSize();let i,s;if(this.isMobile){const a=e.x/e.y;e.x>e.y?(i=Math.min(2048,e.x),s=Math.floor(i/a)):(s=Math.min(2048,e.y),i=Math.floor(s*a))}else i=Math.min(4096,e.x),s=Math.min(4096,e.y);this.hitCanvas=document.createElement("canvas"),this.hitCanvas.width=i,this.hitCanvas.height=s,this.hitCanvas.style.position="absolute",this.hitCanvas.style.top="0",this.hitCanvas.style.left="0",this.hitCanvas.style.width="100%",this.hitCanvas.style.height="100%",this.hitCanvas.style.pointerEvents="none",this.hitCanvas.style.visibility="hidden",this.hitCanvas.style.zIndex="-1000",this.hitContext=this.hitCanvas.getContext("2d",{alpha:!1,willReadFrequently:!0}),this.hitContext.imageSmoothingEnabled=!1,this.hitContext.webkitImageSmoothingEnabled=!1,this.hitContext.mozImageSmoothingEnabled=!1,this.hitContext.msImageSmoothingEnabled=!1,this.debug&&(this.debugCanvas=document.createElement("canvas"),this.debugCanvas.width=i,this.debugCanvas.height=s,this.debugCanvas.style.position="absolute",this.debugCanvas.style.top="0",this.debugCanvas.style.left="0",this.debugCanvas.style.width="100%",this.debugCanvas.style.height="100%",this.debugCanvas.style.pointerEvents="none",this.debugCanvas.style.opacity="0.3",this.debugCanvas.style.zIndex="1000",this.debugCanvas.style.mixBlendMode="multiply",this.debugContext=this.debugCanvas.getContext("2d")),this.viewer.addOverlay({element:this.hitCanvas,location:new T.Rect(0,0,1,e.y/e.x),placement:T.Placement.TOP_LEFT}),this.debug&&this.debugCanvas&&this.viewer.addOverlay({element:this.debugCanvas,location:new T.Rect(0,0,1,e.y/e.x),placement:T.Placement.TOP_LEFT}),console.log(`[HIT_DETECTION] Canvas created: ${i}x${s}`,{originalSize:`${e.x}x${e.y}`,mobile:this.isMobile,debug:this.debug})}generateColorMapping(){const t=this.spatialIndex.getAllHotspots(),e=performance.now();this.colorToHotspot.clear(),this.hotspotToColor.clear(),this.nextColorIndex=1;const i=this.indexToColor(0);this.colorToHotspot.set(i,null),t.forEach((a,n)=>{const h=this.nextColorIndex++,l=this.indexToColor(h);this.colorToHotspot.set(l,a),this.hotspotToColor.set(a.id,l),this.debug&&n<10&&console.log(`[HIT_DETECTION] Hotspot ${a.id} → ${l} (index: ${h})`)}),this.stats.totalHotspots=t.length;const s=performance.now()-e;console.log(`[HIT_DETECTION] Generated ${t.length} unique colors in ${s.toFixed(2)}ms`);const o=new Set(this.hotspotToColor.values()).size;o!==t.length&&console.error(`[HIT_DETECTION] Color collision detected! Expected ${t.length}, got ${o}`)}indexToColor(t){const e=(t&16711680)>>16,i=(t&65280)>>8,s=t&255;return`rgb(${e},${i},${s})`}colorToIndex(t,e,i){return t<<16|e<<8|i}setupEventHandlers(){this.viewer.addHandler("animation-finish",()=>{this.scheduleRedraw()});let t=null;this.viewer.addHandler("viewport-change",()=>{t&&clearTimeout(t),t=setTimeout(()=>{this.scheduleRedraw()},this.isMobile?100:50)}),setInterval(()=>{this.clearHitCache()},5e3)}scheduleRedraw(){this.needsRedraw||(this.needsRedraw=!0,requestAnimationFrame(()=>{this.needsRedraw&&this.renderHitCanvas()}))}renderHitCanvas(){if(!this.isInitialized||!this.hitContext)return;const t=performance.now();this.hitContext.fillStyle=this.indexToColor(0),this.hitContext.fillRect(0,0,this.hitCanvas.width,this.hitCanvas.height);const e=this.viewer.viewport.getBounds(),i=this.spatialIndex.queryViewport({minX:e.x,minY:e.y,maxX:e.x+e.width,maxY:e.y+e.height}),o=this.viewer.world.getItemAt(0).getContentSize(),a=this.hitCanvas.width/o.x,n=this.hitCanvas.height/o.y;let h=0;i.forEach(l=>{const c=this.hotspotToColor.get(l.id);c&&(this.hitContext.fillStyle=c,this.renderHotspotToCanvas(l,a,n),h++)}),this.debug&&this.debugContext&&this.renderDebugCanvas(i,a,n),this.stats.renderedHotspots=h,this.stats.lastRenderTime=performance.now()-t,this.needsRedraw=!1,console.log(`[HIT_DETECTION] Rendered ${h} hotspots in ${this.stats.lastRenderTime.toFixed(2)}ms`)}renderHotspotToCanvas(t,e,i){t.shape==="polygon"?this.renderPolygon(t.coordinates,e,i):t.shape==="multipolygon"&&t.coordinates.forEach(s=>{this.renderPolygon(s,e,i)})}renderPolygon(t,e,i){t.length!==0&&(this.hitContext.beginPath(),t.forEach((s,o)=>{const a=s[0]*e,n=s[1]*i;o===0?this.hitContext.moveTo(a,n):this.hitContext.lineTo(a,n)}),this.hitContext.closePath(),this.hitContext.fill())}renderDebugCanvas(t,e,i){this.debugContext.clearRect(0,0,this.debugCanvas.width,this.debugCanvas.height),t.forEach((s,o)=>{const a=o*137.508%360;this.debugContext.fillStyle=`hsla(${a}, 70%, 50%, 0.6)`,this.renderHotspotToCanvas(s,e,i)})}hitTest(t,e){if(!this.isInitialized||!this.hitContext)return console.warn("[HIT_DETECTION] Hit test called before initialization"),null;this.stats.hitTestCount++;const i=`${t},${e}`;if(this.hitCache.has(i))return this.stats.cacheHits++,this.hitCache.get(i);try{const s=this.hitCanvas.getBoundingClientRect(),o=(t-s.left)/s.width*this.hitCanvas.width,a=(e-s.top)/s.height*this.hitCanvas.height,n=Math.max(0,Math.min(this.hitCanvas.width-1,Math.floor(o))),h=Math.max(0,Math.min(this.hitCanvas.height-1,Math.floor(a))),l=this.hitContext.getImageData(n,h,1,1),[c,d,p]=l.data,u=`rgb(${c},${d},${p})`,m=this.colorToHotspot.get(u);return this.hitCache.size<this.hitCacheSize&&this.hitCache.set(i,m||null),this.debug&&m&&console.log(`[HIT_DETECTION] Hit test: (${t},${e}) → ${m.id}`,{canvasCoords:[n,h],color:u,pixel:[c,d,p]}),m||null}catch(s){return console.error("[HIT_DETECTION] Hit test error:",s),null}}clearHitCache(){Date.now()-this.lastCacheClear>5e3&&(this.hitCache.clear(),this.lastCacheClear=Date.now())}getStats(){return{...this.stats,cacheSize:this.hitCache.size,cacheHitRatio:this.stats.cacheHits/Math.max(1,this.stats.hitTestCount),isInitialized:this.isInitialized,canvasSize:this.hitCanvas?`${this.hitCanvas.width}x${this.hitCanvas.height}`:"Not created"}}setDebugMode(t){this.debug=t,this.debugCanvas&&(this.debugCanvas.style.display=t?"block":"none"),t&&this.scheduleRedraw(),console.log(`[HIT_DETECTION] Debug mode: ${t?"ON":"OFF"}`)}forceRedraw(){this.needsRedraw=!0,this.renderHitCanvas()}destroy(){this.hitCanvas&&this.viewer.removeOverlay(this.hitCanvas),this.debugCanvas&&this.viewer.removeOverlay(this.debugCanvas),this.colorToHotspot.clear(),this.hotspotToColor.clear(),this.hitCache.clear(),this.isInitialized=!1,console.log("[HIT_DETECTION] Destroyed")}}class Y{constructor(t={}){this.config={maxVisibleHotspots:{low:50,medium:100,high:150,critical:200},zoomThresholds:{low:2,medium:5,high:10},clustering:{enabled:!0,minDistance:50,maxClusterSize:8,zoomThreshold:3},scoring:{typeWeights:{audio_only:1,audio_image:.9,image_only:.7,link_only:.5,mixed:.8},sizeWeight:.3,distanceWeight:.4,interactionWeight:.3,selectedBonus:2,hoveredBonus:1.5},performance:{adaptiveThresholds:!0,fpsThreshold:45,memoryThreshold:200,emergencyReduction:.5}},this.lastZoom=0,this.lastViewportCenter=null,this.interactionHistory=new Map,this.clusterCache=new Map,this.lastVisibleSet=new Set,this.performanceMode="normal",this.stats={totalHotspots:0,visibleHotspots:0,clusteredHotspots:0,lastUpdateTime:0,averageScore:0},console.log("[LOD] Level of Detail Manager initialized")}selectVisibleHotspots(t,e,i,s,o){const a=performance.now(),h=e.getBounds().getCenter(),l=this.getLODLevel(i),c=this.getMaxVisibleCount(l,i),d=this.filterViewportCandidates(t,e),p=this.applySpatialClustering(d,i,e),u=this.scoreHotspots(p,h,s,o),m=this.selectTopHotspots(u,c,s,o);return this.updateStats(d.length,m.length,a),d.length>c&&console.log(`[LOD] Reduced ${d.length} → ${m.length} hotspots (zoom: ${i.toFixed(2)})`),m}getLODLevel(t){return t<this.config.zoomThresholds.low?"low":t<this.config.zoomThresholds.medium?"medium":t<this.config.zoomThresholds.high?"high":"critical"}getMaxVisibleCount(t,e){let i=this.config.maxVisibleHotspots[t];if(this.performanceMode==="reduced"?i=Math.floor(i*.75):this.performanceMode==="emergency"&&(i=Math.floor(i*this.config.performance.emergencyReduction)),t==="medium"){const s=Math.min(1,(e-this.config.zoomThresholds.low)/(this.config.zoomThresholds.medium-this.config.zoomThresholds.low));i=Math.floor(this.config.maxVisibleHotspots.low+(this.config.maxVisibleHotspots.medium-this.config.maxVisibleHotspots.low)*s)}return Math.max(25,i)}filterViewportCandidates(t,e){const i=e.getBounds(),s=e.viewportToImageCoordinates(i.getTopLeft()),o=e.viewportToImageCoordinates(i.getBottomRight()),a={minX:s.x,minY:s.y,maxX:o.x,maxY:o.y},n=e.getZoom(),h=n<2?.3:n<5?.2:.1,l=(a.maxX-a.minX)*h;return a.minX-=l,a.minY-=l,a.maxX+=l,a.maxY+=l,t.filter(c=>{const d=c.overlay;if(!d||!d.bounds){const p=this.calculateHotspotBounds(c);return!(p.maxX<a.minX||p.minX>a.maxX||p.maxY<a.minY||p.minY>a.maxY)}return!(d.bounds.maxX<a.minX||d.bounds.minX>a.maxX||d.bounds.maxY<a.minY||d.bounds.minY>a.maxY)})}applySpatialClustering(t,e,i){if(!this.config.clustering.enabled||e>this.config.clustering.zoomThreshold)return t;const s=`${e.toFixed(1)}_${t.length}`;if(this.clusterCache.has(s))return this.clusterCache.get(s);const o=[],a=new Set,n=this.config.clustering.minDistance/i.getZoom();for(const h of t){if(a.has(h.id))continue;const l=[h];a.add(h.id);for(const c of t)a.has(c.id)||l.length>=this.config.clustering.maxClusterSize||this.calculateDistance(h,c)<n&&(l.push(c),a.add(c.id));l.length>1?(l.sort((c,d)=>{const p=this.config.scoring.typeWeights[c.type]||.5;return(this.config.scoring.typeWeights[d.type]||.5)-p}),o.push(...l.slice(0,Math.min(2,l.length)))):o.push(h)}return this.clusterCache.size>10&&this.clusterCache.clear(),this.clusterCache.set(s,o),o}scoreHotspots(t,e,i,s){return t.map(o=>{let a=0;const n=this.config.scoring.typeWeights[o.type]||.5;if(a+=n*this.config.scoring.typeWeights.audio_only,o.overlay&&o.overlay.area){const u=Math.min(1,o.overlay.area/1e4);a+=u*this.config.scoring.sizeWeight}const h=this.getHotspotCenter(o),l=this.calculateDistance(e,h),c=Math.max(e.x,e.y),d=Math.max(0,1-l/c);a+=d*this.config.scoring.distanceWeight;const p=this.interactionHistory.get(o.id);if(p){const u=Date.now()-p,m=Math.max(0,1-u/3e4);a+=m*this.config.scoring.interactionWeight}return i&&o.id===i.id&&(a*=this.config.scoring.selectedBonus),s&&o.id===s.id&&(a*=this.config.scoring.hoveredBonus),{hotspot:o,score:Math.min(5,a)}})}selectTopHotspots(t,e,i,s){const o=new Set;i&&o.add(i.id),s&&o.add(s.id),t.sort((h,l)=>l.score-h.score);const a=[],n=o.size;for(const h of t)if(o.has(h.hotspot.id)&&(a.push(h.hotspot),a.length>=n))break;e-a.length;for(const h of t){if(a.length>=e)break;o.has(h.hotspot.id)||a.push(h.hotspot)}return a}recordInteraction(t){if(this.interactionHistory.set(t,Date.now()),this.interactionHistory.size>50){const e=Date.now()-6e4;for(const[i,s]of this.interactionHistory.entries())s<e&&this.interactionHistory.delete(i)}}updatePerformanceMode(t,e){const i=this.performanceMode;t>0&&t<30?this.performanceMode="emergency":t>0&&t<this.config.performance.fpsThreshold?this.performanceMode="reduced":e>this.config.performance.memoryThreshold?this.performanceMode="reduced":this.performanceMode="normal",i!==this.performanceMode&&console.log(`[LOD] Performance mode changed: ${i} → ${this.performanceMode}`)}calculateDistance(t,e){const i=t.x-e.x,s=t.y-e.y;return Math.sqrt(i*i+s*s)}calculateHotspotBounds(t){const e=t.coordinates;if(!e||e.length===0)return{minX:0,minY:0,maxX:0,maxY:0};let i={minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0};const s=o=>{o.forEach(([a,n])=>{i.minX=Math.min(i.minX,a),i.minY=Math.min(i.minY,n),i.maxX=Math.max(i.maxX,a),i.maxY=Math.max(i.maxY,n)})};return Array.isArray(e[0])&&typeof e[0][0]=="number"?s(e):e.forEach(s),i}getHotspotCenter(t){if(t.overlay&&t.overlay.bounds){const i=t.overlay.bounds;return{x:(i.minX+i.maxX)/2,y:(i.minY+i.maxY)/2}}const e=t.coordinates;if(e&&e.length>0){let i=0,s=0,o=0;const a=n=>{for(const[h,l]of n)i+=h,s+=l,o++};return typeof e[0][0]=="number"?a(e):e.forEach(a),{x:i/o,y:s/o}}return{x:0,y:0}}updateStats(t,e,i){this.stats.totalHotspots=t,this.stats.visibleHotspots=e,this.stats.lastUpdateTime=performance.now()-i;const s=t>0?((t-e)/t*100).toFixed(1):0;t>e&&console.log(`[LOD] Processing: ${this.stats.lastUpdateTime.toFixed(2)}ms | Reduction: ${s}% | Mode: ${this.performanceMode}`)}getStats(){return{...this.stats,performanceMode:this.performanceMode,cacheSize:this.clusterCache.size,interactionHistorySize:this.interactionHistory.size}}reset(){this.clusterCache.clear(),this.interactionHistory.clear(),this.lastVisibleSet.clear(),this.performanceMode="normal",console.log("[LOD] Manager reset")}}class _{constructor(t=25){this.queue=[],this.running=new Set,this.maxConcurrent=t,this.isProcessing=!1,this.immediateExecutionThreshold=25}add(t,e){const i=t.getAttribute("data-hotspot-id");if(this.running.size<this.immediateExecutionThreshold){console.log(`QUICK WIN #4: Immediate animation execution for hotspot ${i}`),this.executeImmediately(i,e);return}this.queue.push({element:t,animationCallback:e}),this.scheduleProcess()}executeImmediately(t,e){this.running.add(t);try{const i=e();i&&i.then?i.finally(()=>{this.running.delete(t)}):this.running.delete(t)}catch(i){this.running.delete(t),console.warn("QUICK WIN #4: Animation callback error:",i)}}scheduleProcess(){this.isProcessing||(this.isProcessing=!0,requestAnimationFrame(()=>{this.processImmediate(),this.isProcessing=!1}))}processImmediate(){for(;this.running.size<this.maxConcurrent&&this.queue.length>0;){const{element:t,animationCallback:e}=this.queue.shift(),i=t.getAttribute("data-hotspot-id");this.running.add(i);try{const s=e();s&&s.then?s.then(()=>{this.running.delete(i),this.scheduleProcess()}).catch(()=>{this.running.delete(i),this.scheduleProcess()}):setTimeout(()=>{this.running.delete(i),this.scheduleProcess()},0)}catch(s){this.running.delete(i),console.warn("Animation callback error:",s)}}}clear(){this.queue=[],this.running.clear()}clearFinished(){const t=[];this.running.forEach(e=>{const i=document.querySelector(`[data-hotspot-id="${e}"]`);if(!i){t.push(e);return}const s=i.getElementsByTagName("path");for(let o of s)if(o.currentAnimation&&o.currentAnimation.playState==="finished"){o.currentAnimation=null,t.push(e);break}}),t.forEach(e=>this.running.delete(e))}}const H=class H{constructor(t={}){this.isMobile=/Android|iPhone|iPad|iPod/i.test(navigator.userAgent)||"ontouchstart"in window,this.isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent),this.isWebKit="WebkitAppearance"in document.documentElement.style&&!window.chrome,this.isSafariOrWebKit=this.isSafari||this.isWebKit,Object.assign(this,{viewer:t.viewer,spatialIndex:t.spatialIndex,onHotspotHover:t.onHotspotHover||(()=>{}),onHotspotClick:t.onHotspotClick||(()=>{}),visibilityCheckInterval:t.visibilityCheckInterval||100,batchSize:t.batchSize||50,renderDebounceTime:t.renderDebounceTime||16,debugMode:t.debugMode||!1}),this.lastViewportBounds=null,this.lastViewportZoom=null,this.significantChangeThreshold=.1,this.overlays=new Map,this.visibleOverlays=new Set,this.hoveredHotspot=null,this.selectedHotspot=null,this.animationQueue=new _(this.isMobile?H.MAX_CONCURRENT_ANIMATIONS_MOBILE:H.MAX_CONCURRENT_ANIMATIONS),this.modeStateManager=new Z,this.modeStateManager.on("modeChange",e=>{console.log(`Mode changed from ${e.from} to ${e.to}`)}),this.temporalHandler=new X({audioEngine:window.audioEngine,modeStateManager:this.modeStateManager,onPhaseChange:(e,i)=>this.handleTemporalPhaseChange(e,i)}),this.colorPalettes={tech:{shadow:"rgba(0, 0, 0, 0.3)",glow:"#00ffff",contrast:"rgba(0, 0, 0, 1)",main:"#ffffff"},enchantedJournal:{shadow:"rgba(47, 79, 79, 0.4)",glow:"#FFD700",glow2:"#DDA0DD",contrast:"rgba(160, 82, 45, 0.8)",main:"#A0522D"},moonlitManuscript:{shadow:"rgba(47, 79, 79, 0.5)",glow:"#87CEEB",glow2:"#4682B4",contrast:"rgba(70, 130, 180, 0.9)",main:"#4682B4"},pureWhiteHigh:{shadow:"rgba(0, 0, 0, 0.4)",glow:"rgba(255, 255, 255, 0.9)",glow2:"rgba(255, 255, 255, 0.7)",contrast:"rgba(255, 255, 255, 1)",main:"#FFFFFF"},pureWhiteBalanced:{shadow:"rgba(0, 0, 0, 0.3)",glow:"rgba(255, 255, 255, 0.8)",glow2:"rgba(255, 255, 255, 0.6)",contrast:"rgba(255, 255, 255, 0.3)",main:"#FFFFFF"},blackOnBlack:{shadow:"rgba(255, 255, 255, 0.1)",glow:"rgba(0, 0, 0, 0.8)",glow2:"rgba(0, 0, 0, 0.6)",contrast:"rgba(255, 255, 255, 0.1)",main:"#000000"}},this.timingEasing="cubic-bezier(0.36, 0.45, 0.63, 0.53)",this.currentPalette="blackOnBlack",this.colorScheme=this.colorPalettes[this.currentPalette],window.hotspotColorScheme=this.colorScheme,window.hotspotPalettes=this.colorPalettes,window.setHotspotPalette=e=>{this.colorPalettes[e]&&(this.currentPalette=e,this.colorScheme=this.colorPalettes[e],window.hotspotColorScheme=this.colorScheme,this.refreshAllHotspotStyles())},window.hotspotColorScheme=this.colorScheme,this.isDragging=!1,this.dragStartTime=0,this.dragStartPoint=null,this.mobileDragThreshold=this.isMobile?15:8,this.clickTimeThreshold=300,this.clickDistThreshold=this.isMobile?12:8,this.hotspotAreas=new Map,this.activePointers=new Map,this.primaryPointerId=null,this.lastPointerDownTime=0,this.lastPointerDownPoint=null,this.isPinching=!1,this.isAnimationInProgress=!1,this.pendingVisibilityUpdate=!1,this.animationIndex=0,this.performanceMode=!1,this.animationRegistry=new Set,this.revealMode={active:!1,timer:null,duration:6e3,animations:new Map},this.lastZoom=0,this.hitDetectionCanvas=null,this.useHitDetectionCanvas=!0,this.lodManager=new Y({maxVisibleHotspots:{low:this.isMobile?30:50,medium:this.isMobile?75:100,high:this.isMobile?100:150,critical:this.isMobile?150:200}}),console.log("[HIT_DETECTION] NativeHotspotRenderer: Hit detection system enabled"),console.log("[LOD] NativeHotspotRenderer: Level of Detail system enabled"),this.initStyles(),t.skipInit||this.init()}handleTemporalPhaseChange(t,e){if(!this.temporalHandler.state.isHolding){console.log("[TEMPORAL_DEBUG] Ignoring phase change - not holding");return}console.log(`Temporal phase: ${t} for hotspot ${e==null?void 0:e.id}`),t!==null&&this.modeStateManager.setTemporalState(!0,t);const i=this.overlays.get(e.id);if(!i)return;const s=i.element;if(s.style.opacity="1",s.style.visibility="visible",s.classList.remove("hotspot-temporal-touchDown","hotspot-temporal-explore","hotspot-temporal-preview","hotspot-temporal-activate"),t==="initial"){s.style.opacity="1",s.style.visibility="visible";const o=s.querySelector(".main-path");o&&(o.style.stroke="rgba(255, 255, 255, 0.5)",o.style.strokeWidth="1.5px",o.style.opacity="1",o.style.transition="all 150ms ease-out");return}t==="touchDown"?s.classList.add("hotspot-temporal-touchDown"):t==="explore"?s.classList.add("hotspot-temporal-explore"):t==="preview"?(s.classList.add("hotspot-temporal-preview"),this.selectedHotspot=e,this.onHotspotHover(e)):t==="activate"&&s.classList.add("hotspot-temporal-activate")}normalizePath(t,e){const i=e?t[0]:t;let s="";return i.forEach(([o,a],n)=>{n===0?s+=`M ${Math.round(o)} ${Math.round(a)} `:s+=`L ${Math.round(o)} ${Math.round(a)} `}),s+="Z",s}initStyles(){}optimizeSafariLayers(){if(!this.isSafari)return;let t=1e-4;this.overlays.forEach(e=>{e.element.querySelectorAll(".glow-layer-1, .glow-layer-2, .glow-layer-3").forEach(s=>{s.style.transform=`translateZ(${t}px)`,t+=1e-4})})}async init(){if(!this.viewer.world.getItemCount()){this.viewer.addOnceHandler("open",()=>this.init());return}if(!document.getElementById("hotspot-animations-fix")){const o=document.createElement("style");o.id="hotspot-animations-fix",o.textContent=`
        .hotspot-hover path,
        .hotspot-selected path {
            animation-play-state: running !important;
        }
    `,document.head.appendChild(o)}const e=this.viewer.world.getItemAt(0).getContentSize();this.svg=this.createSVG(e);const i=localStorage.getItem("revealStyle")||"invert";this.svg.classList.add(`reveal-style-${i}`);const s=document.createElement("style");s.textContent=`
        @keyframes revealWidth {
            from { width: 0%; }
            to { width: 110%; }
        }
    `,document.head.appendChild(s),this.viewer.addOverlay({element:this.svg,location:new T.Rect(0,0,1,e.y/e.x),placement:T.Placement.TOP_LEFT}),this.createMaskDefs(),this.pathDefs=document.createElementNS("http://www.w3.org/2000/svg","defs"),this.pathDefs.id="path-definitions",this.svg.insertBefore(this.pathDefs,this.svg.firstChild),this.createClipPathDefs(),this.createSVGFilters(),await this.loadHotspotsInBatches(),this.useHitDetectionCanvas&&await this.initializeHitDetectionCanvas(),this.optimizeForSafari(),this.optimizeSafariLayers(),this.setupMouseTracking(),this.setupDragDetection(),this.setupRevealMode(),this.viewer.addHandler("zoom",()=>{this.currentZoom=this.viewer.viewport.getZoom();const o=this.lastZoom||0;if((o<=8&&this.currentZoom>8||o>8&&this.currentZoom<=8)&&(this.clearAnimationRegistryForZoomChange(),o>8&&this.currentZoom<=8&&this.overlays.forEach(a=>{this.resetStaticTransitions(a.element)})),this.lastZoom=this.currentZoom,this.hoveredHotspot){const a=this.overlays.get(this.hoveredHotspot.id);a&&this.applyStyle(a.element,this.hoveredHotspot.type,"hover")}if(this.selectedHotspot&&this.selectedHotspot!==this.hoveredHotspot){const a=this.overlays.get(this.selectedHotspot.id);a&&this.applyStyle(a.element,this.selectedHotspot.type,"selected")}}),this.startVisibilityTracking(),this.cleanupInterval=setInterval(()=>{this.animationQueue&&this.animationQueue.clearFinished(),this.overlays.forEach(o=>{const a=o.element.getElementsByTagName("path");for(let n of a)n.currentAnimation&&n.currentAnimation.playState==="finished"&&(n.currentAnimation=null)})},2e3),window.nativeHotspotRenderer=this,this.setupDebugMethods()}createSVG(t){const e=`<svg xmlns="http://www.w3.org/2000/svg" 
               width="${t.x}" height="${t.y}" 
               viewBox="0 0 ${t.x} ${t.y}"
               style="position: absolute; width: 100%; height: 100%; pointer-events: auto;">
        </svg>`;return new DOMParser().parseFromString(e,"image/svg+xml").documentElement}async loadHotspotsInBatches(){const t=this.spatialIndex.getAllHotspots(),e=Math.ceil(t.length/this.batchSize);for(let i=0;i<e;i++)t.slice(i*this.batchSize,(i+1)*this.batchSize).forEach(o=>this.createHotspotOverlay(o)),i<e-1&&await new Promise(o=>setTimeout(o,0));console.log(`Loaded ${t.length} hotspots in ${e} batches`)}async initializeHitDetectionCanvas(){try{console.log("[HIT_DETECTION] Initializing canvas-based hit detection..."),this.hitDetectionCanvas=new U({viewer:this.viewer,spatialIndex:this.spatialIndex,debug:this.debugMode}),await this.hitDetectionCanvas.initialize(),window.hitDetectionCanvas=this.hitDetectionCanvas,console.log("[HIT_DETECTION] Canvas-based hit detection initialized successfully")}catch(t){console.error("[HIT_DETECTION] Failed to initialize hit detection canvas:",t),console.warn("[HIT_DETECTION] Falling back to SVG-based detection"),this.useHitDetectionCanvas=!1}}createGroup(t){const e=document.createElementNS("http://www.w3.org/2000/svg","g");return Object.assign(e.style,{cursor:"pointer",pointerEvents:"fill",opacity:this.debugMode?"1":"0",transition:"opacity 0.2s ease-out","-webkit-tap-highlight-color":"transparent",transform:"translateZ(0)","-webkit-transform":"translateZ(0)","will-change":"transform, opacity"}),e.setAttribute("data-hotspot-id",t.id),this.currentPalette.includes("pureWhite")&&(e.style.mixBlendMode="screen"),e}createHotspotWrapper(t){const e=document.createElement("div");return e.className="hotspot-wrapper",e.setAttribute("data-hotspot-wrapper-id",t),this.isSafari&&(e.style.position="absolute",e.style.transform="translateZ(0)",e.style.webkitTransform="translateZ(0)",e.style.willChange="filter",e.style.contain="layout style paint",this.isMobile?e.classList.add("hotspot-wrapper-ios"):e.classList.add("hotspot-wrapper-desktop")),e}createHotspotOverlay(t){const e=this.createGroup(t),i=t.shape==="multipolygon",s=this.normalizePath(t.coordinates,i);if(this.isSafari){const l=document.createElementNS("http://www.w3.org/2000/svg","path");l.setAttribute("d",s),l.setAttribute("fill","none"),l.setAttribute("stroke",this.colorScheme.glow2||this.colorScheme.glow),l.setAttribute("stroke-width","12"),l.setAttribute("opacity","0"),l.setAttribute("vector-effect","non-scaling-stroke"),l.style.pointerEvents="none",l.classList.add("glow-layer-3"),e.appendChild(l);const c=document.createElementNS("http://www.w3.org/2000/svg","path");c.setAttribute("d",s),c.setAttribute("fill","none"),c.setAttribute("stroke",this.colorScheme.glow),c.setAttribute("stroke-width","8"),c.setAttribute("opacity","0"),c.setAttribute("vector-effect","non-scaling-stroke"),c.style.pointerEvents="none",c.classList.add("glow-layer-2"),e.appendChild(c);const d=document.createElementNS("http://www.w3.org/2000/svg","path");d.setAttribute("d",s),d.setAttribute("fill","none"),d.setAttribute("stroke",this.colorScheme.main),d.setAttribute("stroke-width","5"),d.setAttribute("opacity","0"),d.setAttribute("vector-effect","non-scaling-stroke"),d.style.pointerEvents="none",d.classList.add("glow-layer-1"),e.appendChild(d)}const o=document.createElementNS("http://www.w3.org/2000/svg","path");o.setAttribute("d",s),o.setAttribute("fill","none"),o.setAttribute("stroke","transparent"),o.setAttribute("vector-effect","non-scaling-stroke"),o.style.pointerEvents="fill",o.classList.add("main-path"),e.appendChild(o);const a=o.getTotalLength();if(e.removeChild(o),o.setAttribute("data-real-length",a),this.isSafari){const l=e.querySelector(".glow-layer-1"),c=e.querySelector(".glow-layer-2"),d=e.querySelector(".glow-layer-3");[l,c,d].forEach(p=>{p&&p.setAttribute("data-real-length",a)})}if(i&&t.coordinates.length>1){const l=`mask-${t.id}-${this.maskCounter++}`,c=document.createElementNS("http://www.w3.org/2000/svg","mask");c.setAttribute("id",l);const d=document.createElementNS("http://www.w3.org/2000/svg","rect");d.setAttribute("x","0"),d.setAttribute("y","0"),d.setAttribute("width","100%"),d.setAttribute("height","100%"),d.setAttribute("fill","white"),c.appendChild(d),t.coordinates.forEach((p,u)=>{if(u>0){const m=document.createElementNS("http://www.w3.org/2000/svg","path"),f=p.reduce((w,[b,y],v)=>w+(v===0?"M":"L")+`${Math.round(b)},${Math.round(y)}`,"")+"Z";m.setAttribute("d",f),m.setAttribute("fill","black"),m.setAttribute("stroke","black"),m.setAttribute("stroke-width","10"),c.appendChild(m)}}),this.defs.appendChild(c),o.setAttribute("mask",`url(#${l})`)}this.applyStyle(e,t.type,"normal"),e.appendChild(o),this.svg.appendChild(e);const n=this.calculateBounds(t.coordinates),h=this.calculateArea(n);this.overlays.set(t.id,{element:e,hotspot:t,bounds:n,area:h,isVisible:!1}),this.hotspotAreas.set(t.id,h)}setupDragDetection(){this.viewer.addHandler("canvas-drag",()=>{this.isDragging=!0,console.log("OpenSeadragon drag detected - marking as dragging")}),this.viewer.addHandler("canvas-drag-end",()=>{this.isDragging=!1,console.log("OpenSeadragon drag ended - resetting drag state")}),this.viewer.addHandler("pan",()=>{this.isDragging=!0})}setupMouseTracking(){this.svg.style.pointerEvents="auto",(this.isMobile||this.isSafariOrWebKit)&&this.svg.addEventListener("click",i=>{if(console.log("SVG click handler for iOS/Safari",{target:i.target.tagName,isMobile:this.isMobile}),i.target.tagName==="path"||i.target.tagName==="g"||i.target.closest("g[data-hotspot-id]"))return;const s=this.viewer.element.getBoundingClientRect(),o=new T.Point(i.clientX-s.left,i.clientY-s.top),a=this.viewer.viewport.pointFromPixel(o),n=this.viewer.viewport.viewportToImageCoordinates(a),h=this.findSmallestHotspotAtPoint(n);h&&(console.log("iOS/Safari: Found hotspot at SVG click position:",h.id),i.stopPropagation(),i.preventDefault(),this.activateHotspot(h))},!0);const t=this.viewer.container;t.addEventListener("pointerdown",this.handlePointerDown.bind(this)),t.addEventListener("pointermove",this.handlePointerMove.bind(this)),t.addEventListener("pointerup",this.handlePointerUp.bind(this)),t.addEventListener("pointercancel",this.handlePointerCancel.bind(this));let e=null;this.svg.addEventListener("mousemove",i=>{var l;if(this.isSafari&&((l=window.safariPerformanceOptimizer)!=null&&l.isInteracting)||this.isSafari&&e)return;if(this.isSafari&&(e=setTimeout(()=>{e=null},50)),this.modeStateManager.getCurrentMode()==="temporal"){this.svg.style.cursor="default";return}if(this.isDragging){this.svg.style.cursor="default";return}const s=this.viewer.element.getBoundingClientRect(),o=new T.Point(i.clientX-s.left,i.clientY-s.top),a=this.viewer.viewport.pointFromPixel(o),n=this.viewer.viewport.viewportToImageCoordinates(a),h=this.findSmallestHotspotAtPoint(n);if(h!==this.hoveredHotspot){if(console.log("HOVER CHANGE DETECTED!",h==null?void 0:h.id),this.hoveredHotspot){const c=this.overlays.get(this.hoveredHotspot.id);c&&(console.log("Applying normal style to previous"),this.applyStyle(c.element,this.hoveredHotspot.type,this.hoveredHotspot===this.selectedHotspot?"selected":"normal"))}if(this.hoveredHotspot=h,this.onHotspotHover(h),h){const c=this.overlays.get(h.id);c&&(console.log("Applying hover style to new hotspot"),this.applyStyle(c.element,h.type,"hover"))}}this.svg.style.cursor=h?"pointer":"default"}),this.isMobile&&this.svg.addEventListener("touchmove",i=>{if(this.isDragging||(i.preventDefault(),this.modeStateManager.getCurrentMode()==="temporal"))return;const s=i.touches[0],o=this.viewer.element.getBoundingClientRect(),a=new T.Point(s.clientX-o.left,s.clientY-o.top),n=this.viewer.viewport.pointFromPixel(a),h=this.viewer.viewport.viewportToImageCoordinates(n),l=this.findSmallestHotspotAtPoint(h);if(l!==this.hoveredHotspot){if(console.log("Touch hover change detected:",l==null?void 0:l.id),this.hoveredHotspot){const c=this.overlays.get(this.hoveredHotspot.id);c&&this.applyStyle(c.element,this.hoveredHotspot.type,this.hoveredHotspot===this.selectedHotspot?"selected":"normal")}if(this.hoveredHotspot=l,this.onHotspotHover(l),l){const c=this.overlays.get(l.id);c&&this.applyStyle(c.element,l.type,"hover")}}},{passive:!1})}handlePointerDown(t){this.updatesPaused&&(console.warn("Updates were paused during interaction - forcing resume"),this.resumeUpdates()),console.log("handlePointerDown",{pointerId:t.pointerId,activePointersBefore:this.activePointers.size,currentMode:this.modeStateManager.getCurrentMode()}),this.activePointers.set(t.pointerId,{x:t.clientX,y:t.clientY,startX:t.clientX,startY:t.clientY,startTime:Date.now()}),this.isMobile&&t.preventDefault(),this.activePointers.size===1&&(this.primaryPointerId=t.pointerId,this.lastPointerDownTime=Date.now(),this.lastPointerDownPoint={x:t.clientX,y:t.clientY},this.modeStateManager.getCurrentMode()==="temporal"&&(this.modeStateManager.setTemporalState(!1,null),this.modeStateManager.modeStates.temporal.active=!1,this.modeStateManager.modeStates.temporal.phase=null,setTimeout(()=>{if(this.isDragging){console.log("Temporal mode start ignored - already dragging");return}const e=this.viewer.element.getBoundingClientRect(),i=new T.Point(t.clientX-e.left,t.clientY-e.top),s=this.viewer.viewport.pointFromPixel(i),o=this.viewer.viewport.viewportToImageCoordinates(s),a=this.findSmallestHotspotAtPoint(o);a&&this.modeStateManager.getCurrentMode()==="temporal"&&this.temporalHandler.startHold(a,t.clientX,t.clientY)},0)))}handlePointerMove(t){if(this.activePointers.has(t.pointerId)){const e=this.activePointers.get(t.pointerId),i=Math.sqrt(Math.pow(t.clientX-e.startX,2)+Math.pow(t.clientY-e.startY,2)),s=this.isMobile?this.mobileDragThreshold:this.clickDistThreshold;if(i>s&&!this.isDragging&&(this.isDragging=!0,console.log("Mobile drag detected - clearing hover state"),this.hoveredHotspot)){const o=this.overlays.get(this.hoveredHotspot.id);o&&this.applyStyle(o.element,this.hoveredHotspot.type,this.hoveredHotspot===this.selectedHotspot?"selected":"normal"),this.hoveredHotspot=null,this.onHotspotHover(null)}if(e.x=t.clientX,e.y=t.clientY,this.activePointers.size>=2&&(this.isPinching=!0),this.modeStateManager.getCurrentMode()==="temporal"&&this.temporalHandler.state.isHolding&&t.pointerId===this.primaryPointerId){const o=this.temporalHandler.getCurrentProgress();this.temporalHandler.updateProgress(t.clientX,t.clientY,o)}}}handlePointerUp(t){if(console.log("handlePointerUp start",{pointerId:t.pointerId,hasPointer:this.activePointers.has(t.pointerId),activePointers:this.activePointers.size,currentMode:this.modeStateManager.getCurrentMode()}),!this.activePointers.has(t.pointerId))return;const e=this.activePointers.get(t.pointerId),i=Date.now()-e.startTime,s=Math.sqrt(Math.pow(t.clientX-e.startX,2)+Math.pow(t.clientY-e.startY,2));if(t.pointerId===this.primaryPointerId&&this.activePointers.size===1&&!this.isPinching&&!this.isDragging&&s<this.clickDistThreshold)if(this.modeStateManager.getCurrentMode()==="temporal"){const a=this.temporalHandler.endHold();a.hotspot&&!this.isDragging?this.handleTemporalRelease(a.duration,a.hotspot):this.isDragging&&console.log("Temporal mode release ignored - was dragging")}else i<this.clickTimeThreshold&&!this.isDragging?(console.log("Direct mode click detected"),this.handleClick(t),this.forceIOSRedraw()):this.isDragging&&console.log("Direct mode click ignored - was dragging");else this.modeStateManager.getCurrentMode()==="temporal"&&(this.temporalHandler.endHold(),this.cleanupTemporalVisuals());this.activePointers.delete(t.pointerId),this.activePointers.size===0&&(this.primaryPointerId=null,this.isPinching=!1,this.isDragging=!1,this.modeStateManager.setTemporalState(!1),this.temporalHandler.reset())}handleTemporalRelease(t,e){const i=this.temporalHandler.thresholds;console.log("Temporal mode release:",{duration:t,thresholds:i,hotspotId:e.id}),this.cleanupTemporalVisuals(),this.modeStateManager.setTemporalState(!1,null),this.modeStateManager.modeStates.temporal.active=!1,this.modeStateManager.modeStates.temporal.phase=null,t<i.explore?console.log("Temporal: Exploration phase completed"):t>=i.explore&&t<i.activate?console.log("Temporal: Preview/Selection phase completed"):(console.log("Temporal: Activation phase completed"),this.activateHotspot(e)),setTimeout(()=>{this.modeStateManager.setTemporalState(!1,null),console.log("[TEMPORAL_FIX] Final temporal state cleanup"),this.logHitDetectionStats()},150)}cleanupTemporalVisuals(){this.overlays.forEach(t=>{t.element.classList.remove("hotspot-temporal-touchDown","hotspot-temporal-explore","hotspot-temporal-preview","hotspot-temporal-activate"),t.element.style.opacity=t.isVisible?"1":"0"}),this.modeStateManager.setTemporalState(!1,null),this.modeStateManager.modeStates.temporal.active=!1,this.modeStateManager.modeStates.temporal.phase=null}handlePointerCancel(t){this.activePointers.delete(t.pointerId),this.activePointers.size===0&&(this.primaryPointerId=null,this.isPinching=!1,this.isDragging=!1)}handleClick(t){var n;if(console.log("handleClick called",{isDragging:this.isDragging,isPinching:this.isPinching,activePointers:this.activePointers.size,targetTag:t.target.tagName,targetClass:((n=t.target.className)==null?void 0:n.baseVal)||t.target.className,timestamp:Date.now()}),t.target.closest(".openseadragon-controls"))return;if(this.isMobile&&this.hoveredHotspot){console.log("Using cached hover hotspot for mobile click"),t.stopPropagation(),t.preventDefault(),this.activateHotspot(this.hoveredHotspot);return}const e=this.viewer.element.getBoundingClientRect(),i=new T.Point(t.clientX-e.left,t.clientY-e.top),s=this.viewer.viewport.pointFromPixel(i),o=this.viewer.viewport.viewportToImageCoordinates(s),a=this.findSmallestHotspotAtPoint(o);a?(t.stopPropagation(),t.preventDefault(),this.activateHotspot(a)):this.selectedHotspot&&(this.deselectHotspot(),this.onHotspotClick&&this.onHotspotClick(null))}activateHotspot(t){console.log("🎯 iOS DEBUG: activateHotspot called:",{hotspotId:t.id,timestamp:Date.now(),isSafari:this.isSafari,isMobile:this.isMobile}),this.selectedHotspot=t,this.selectionTimestamp=Date.now(),this.lodManager&&this.lodManager.recordInteraction(t.id),this.onHotspotClick(t),this.overlays.forEach((e,i)=>{var o;const s=i===t.id?"selected":i===((o=this.hoveredHotspot)==null?void 0:o.id)?"hover":"normal";i===t.id&&console.log("🎯 iOS DEBUG: Applying selected style to:",i),this.applyStyle(e.element,e.hotspot.type,s)})}deselectHotspot(){console.log("Deselecting hotspot"),this.selectedHotspot=null,this.selectionTimestamp=null,this.overlays.forEach((t,e)=>{var s;const i=e===((s=this.hoveredHotspot)==null?void 0:s.id)?"hover":"normal";this.applyStyle(t.element,t.hotspot.type,i)})}instantDeselect(){var t;if(console.log("Instant deselecting hotspot"),this.selectedHotspot){const e=this.overlays.get(this.selectedHotspot.id);if(e&&e.element){const i=e.element.getElementsByTagName("path");for(let s of i)s.style.filter="none",s.style.stroke="rgba(255, 255, 255, 0)",s.style.strokeWidth="0",s.style.opacity="0",s.style.transition="none",s.style.animation="none";e.element.style.opacity="0",e.element.style.transition="none",e.element.style.animation="none",e.element.style.filter="none"}((t=this.hoveredHotspot)==null?void 0:t.id)===this.selectedHotspot.id&&(this.hoveredHotspot=null)}this.selectedHotspot=null,this.selectionTimestamp=null}findSmallestHotspotAtPoint(t){if(this.useHitDetectionCanvas&&this.hitDetectionCanvas){const i=this.findHotspotUsingCanvas(t);if(i)return console.log(`[HIT_DETECTION] Canvas hit: ${i.id}`),i}const e=[];return this.overlays.forEach((i,s)=>{this.isPointInHotspot(t,i)&&e.push({hotspot:i.hotspot,area:i.area})}),e.length===0?null:(e.sort((i,s)=>i.area-s.area),e[0].hotspot)}findHotspotUsingCanvas(t){try{const e=this.viewer.viewport.imageToViewportCoordinates(t.x,t.y),i=this.viewer.viewport.viewportToWindowCoordinates(e),s=this.viewer.container.getBoundingClientRect(),o=i.x-s.left,a=i.y-s.top,n=this.hitDetectionCanvas.hitTest(o,a);return n&&this.overlays.get(n.id)?n:null}catch(e){return console.warn("[HIT_DETECTION] Canvas hit test failed:",e),null}}isPointInHotspot(t,e){const i=e.hotspot,s=e.bounds;return t.x<s.minX||t.x>s.maxX||t.y<s.minY||t.y>s.maxY?!1:i.shape==="polygon"?this.pointInPolygon(t.x,t.y,i.coordinates):i.shape==="multipolygon"?i.coordinates.some(o=>this.pointInPolygon(t.x,t.y,o)):!1}pointInPolygon(t,e,i){let s=!1;const o=i.length;let a=i[0][0],n=i[0][1];for(let h=1;h<=o;h++){const l=i[h%o][0],c=i[h%o][1];if(e>Math.min(n,c)&&e<=Math.max(n,c)&&t<=Math.max(a,l)&&n!==c){const d=(e-n)*(l-a)/(c-n)+a;(a===l||t<=d)&&(s=!s)}a=l,n=c}return s}applyStyle(t,e,i){if(this.revealMode.active&&i!=="normal")return;t.getElementsByTagName("path");const s=t.querySelector(".main-path"),a=`${t.getAttribute("data-hotspot-id")}-${i}`,n=this.animationRegistry||(this.animationRegistry=new Set),h=n.has(a),l=this.viewer.viewport.getZoom(),c=l>8,p=t.getAttribute("data-current-state")!==i,u=i!=="normal"&&p,m=this.modeStateManager.getCurrentMode()==="temporal",f=m,w=t.getAttribute("data-last-zoom")||"0",b=parseFloat(w)>8&&l<=8;if(t.setAttribute("data-last-zoom",l.toString()),this.animationRegistry&&(b||p)&&this.animationRegistry.delete(a),!(!p&&h&&!b&&!u)){if((i==="hover"||i==="selected")&&c&&!m){console.log("Smart static mode at zoom:",l.toFixed(2)),t.setAttribute("class",`hotspot-${e} hotspot-${i}`),t.setAttribute("data-current-state",i),t.setAttribute("data-animation-active","false"),s&&(s.style.transition="all 0.15s ease-out",s.style.fill="none",s.style.stroke=this.colorScheme.main,s.style.strokeWidth=i==="selected"?"2.5px":"2px",s.style.opacity=i==="selected"?"0.85":"0.7",s.style.strokeDasharray="none",s.style.strokeDashoffset="0",this.isSafari||(s.style.filter=`drop-shadow(0 0 3px ${this.colorScheme.glow})`)),this.isSafari&&t.querySelectorAll(".glow-layer-1, .glow-layer-2, .glow-layer-3").forEach((v,S)=>{v.style.transition="opacity 0.15s ease-out",v.style.strokeDasharray="none",v.style.strokeDashoffset="0";const A=i==="selected"?["0.5","0.3","0.2"]:["0.4","0.2","0.1"];v.style.opacity=A[S]||"0"}),t.style.opacity="1";return}if(!(!p&&h&&!b&&!u)&&!((i==="hover"||i==="selected")&&t.getAttribute("data-animation-active")==="true")){if(t.setAttribute("class",`hotspot-${e} hotspot-${i}`),t.setAttribute("data-current-state",i),i==="hover"||i==="selected"){if(this.isSafari){const y=t.querySelector(".glow-layer-1"),v=t.querySelector(".glow-layer-2"),S=t.querySelector(".glow-layer-3"),A=t.getAttribute("data-hotspot-id"),D=this.getAnimationDuration(A);[{element:s,delay:0,opacity:"1"},{element:y,delay:0,opacity:i==="selected"?"0.7":"0.6"},{element:v,delay:0,opacity:i==="selected"?"0.5":"0.4"},{element:S,delay:0,opacity:i==="selected"?"0.3":"0.2"}].forEach(({element:g,delay:C,opacity:P})=>{if(g){if(g.animate&&!f){const E=g.getTotalLength?g.getTotalLength():parseFloat(g.getAttribute("data-real-length"))||100,x=E*1.1;Object.assign(g.style,{strokeDasharray:`${E} ${E}`,strokeDashoffset:`${x}px`,opacity:"0",transition:"none",animation:"none",vectorEffect:"non-scaling-stroke",paintOrder:"stroke",transform:`translateZ(${C*.001}px)`,willChange:"stroke-dashoffset, opacity"});const z=g.animate([{strokeDashoffset:`${x}px`,opacity:"0",offset:0},{strokeDashoffset:"0px",opacity:P,offset:1}],{duration:D*1e3,delay:C,easing:this.timingEasing,fill:"forwards"});t.setAttribute("data-animation-active","true"),n.add(a),g.currentAnimation=z}else Object.assign(g.style,{strokeDasharray:"none",strokeDashoffset:"0",opacity:P,transition:"none",animation:"none"});i==="selected"?(C===150&&(g.style.filter="blur(1px)"),C===100&&(g.style.filter="blur(2px)"),C===50&&(g.style.filter="blur(3px)")):(C===150&&(g.style.filter="none"),C===100&&(g.style.filter="blur(1px)"),C===50&&(g.style.filter="blur(2px)"))}})}if(s&&!this.isSafari){s.currentAnimation&&(s.currentAnimation.cancel(),s.currentAnimation=null),Object.assign(s.style,{animation:"none",strokeDasharray:"",strokeDashoffset:"",fill:"none",stroke:this.colorScheme.main,strokeWidth:i==="selected"?"2.5px":"2px",opacity:"1"}),s.offsetWidth,this.colorScheme.glow2?s.style.filter=`
                    drop-shadow(0 0 4px ${this.colorScheme.shadow})
                    drop-shadow(0 0 3px ${this.colorScheme.glow})
                    drop-shadow(0 0 10px ${this.colorScheme.glow2})
                    drop-shadow(0 0 20px ${this.colorScheme.glow2})
                `:s.style.filter=`
                    drop-shadow(0 0 6px rgba(0, 0, 0, 0.8))
                    drop-shadow(0 0 3px ${this.colorScheme.glow})
                    drop-shadow(0 0 10px ${this.colorScheme.glow})
                `;const y=parseFloat(s.getAttribute("data-real-length"))||100;if(s.animate&&!f){s.style.strokeDasharray=y,s.style.strokeDashoffset=y;const v=t.getAttribute("data-hotspot-id");let S=this.getAnimationDuration(v);const D=this.viewer.viewport.getZoom()>2&&this.visibleOverlays.size>20,I=()=>{const g=i==="selected"?"0.85":"0.7";return s.currentAnimation=s.animate([{strokeDashoffset:y,opacity:"0.3",offset:0},{strokeDashoffset:"0",opacity:g,offset:1}],{duration:S*1e3,easing:this.timingEasing,fill:"forwards"}),s.currentAnimation.onfinish=()=>{s.currentAnimation=null},s.currentAnimation.finished};D?this.animationQueue.add(t,I):(console.log("QUICK WIN #4: Direct animation execution (no queue)"),I()),t.setAttribute("data-animation-active","true"),n.add(a)}else s.style.strokeDasharray="none",s.style.strokeDashoffset="0",s.style.opacity=i==="selected"?"0.85":"0.7"}}else{if(this.animationRegistry){const y=t.getAttribute("data-hotspot-id");this.animationRegistry.delete(`${y}-hover`),this.animationRegistry.delete(`${y}-selected`)}t.setAttribute("data-animation-active","false"),this.isSafari&&t.querySelectorAll(".glow-layer-1, .glow-layer-2, .glow-layer-3").forEach(v=>{v.style.animation="none",v.currentAnimation&&(v.currentAnimation.cancel(),v.currentAnimation=null),v.offsetWidth;const S=parseFloat(v.getAttribute("data-real-length"))||100;Object.assign(v.style,{strokeDasharray:`${S} ${S}`,strokeDashoffset:S,transition:"opacity 0.1s ease-out",opacity:"0",filter:"none"})}),s&&(s.currentAnimation&&(s.currentAnimation.cancel(),s.currentAnimation=null),s.getAnimations().forEach(y=>y.cancel()),Object.assign(s.style,{animation:"none",strokeDasharray:"",strokeDashoffset:"",transition:"opacity 0.1s ease-out",fill:"none",stroke:"transparent",strokeWidth:"0",filter:"none",opacity:"0"}))}t.style.opacity=i==="hover"||i==="selected"?"1":"0"}}}resetStaticTransitions(t){const e=t.getElementsByTagName("path");for(let i of e)i.style.transition="none",i.offsetWidth}clearAnimationRegistryForZoomChange(){if(this.animationRegistry){const t=new Set;this.hoveredHotspot&&t.add(`${this.hoveredHotspot.id}-hover`),this.selectedHotspot&&t.add(`${this.selectedHotspot.id}-selected`);const e=[];this.animationRegistry.forEach((i,s)=>{t.has(s)||e.push(s)}),e.forEach(i=>this.animationRegistry.delete(i))}}hideOverlay(){this.svg&&(this.svg.style.opacity="0",this.svg.style.visibility="hidden",this.svg.style.pointerEvents="none")}showOverlay(){this.svg&&(this.svg.style.opacity="1",this.svg.style.visibility="visible",this.svg.style.pointerEvents="auto")}setupDebugMethods(){this.hitDetectionCanvas&&(window.hitDetectionCanvas=this.hitDetectionCanvas),this.lodManager&&(window.lodManager=this.lodManager),console.log("[DEBUG] Hit detection and LOD debugging methods available")}logHitDetectionStats(){this.hitDetectionCanvas&&this.useHitDetectionCanvas&&console.log("[HIT_DETECTION] Performance stats:",{totalHotspots:this.overlays.size,canvasInitialized:!!this.hitDetectionCanvas,canvasSize:this.hitDetectionCanvas.canvas?`${this.hitDetectionCanvas.canvas.width}x${this.hitDetectionCanvas.canvas.height}`:"unknown"})}pauseUpdates(){this.updatesPaused=!0,console.log("🔧 NativeHotspotRenderer: Updates paused for cinematic zoom")}resumeUpdates(){this.updatesPaused=!1,console.log("🔧 NativeHotspotRenderer: Updates resumed after cinematic zoom"),this.pendingVisibilityUpdate&&(this.pendingVisibilityUpdate=!1,setTimeout(()=>this.updateVisibility(),50))}refreshAllHotspotStyles(){console.log("Refreshing all hotspot styles with palette:",this.currentPalette),this.overlays.forEach((t,e)=>{var i,s;if(t.isVisible){const o=e===((i=this.selectedHotspot)==null?void 0:i.id)?"selected":e===((s=this.hoveredHotspot)==null?void 0:s.id)?"hover":"normal";o!=="normal"&&(this.applyStyle(t.element,t.hotspot.type,"normal"),setTimeout(()=>{this.applyStyle(t.element,t.hotspot.type,o)},50))}}),this.updateFilterColors(),this.updateWrapperStyles()}updateWrapperStyles(){this.isSafari}updateFilterColors(){const t=this.svg.querySelector('#hotspot-glow-selected feFlood[result="innerColor"]'),e=this.svg.querySelector('#hotspot-glow-selected feFlood[result="outerColor"]'),i=this.svg.querySelector('#hotspot-glow-selected feFlood[result="midColor"]'),s=this.svg.querySelector('#hotspot-glow-hover feFlood[result="innerColor"]'),o=this.svg.querySelector('#hotspot-glow-hover feFlood[result="outerColor"]');t&&t.setAttribute("flood-color",this.colorScheme.glow||"#87CEEB"),e&&e.setAttribute("flood-color",this.colorScheme.glow2||"#4682B4"),i&&i.setAttribute("flood-color",this.colorScheme.main||"#4682B4"),s&&s.setAttribute("flood-color",this.colorScheme.glow||"#87CEEB"),o&&o.setAttribute("flood-color",this.colorScheme.main||"#4682B4")}calculateBounds(t){let e={minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0};const i=s=>{s.forEach(([o,a])=>{e.minX=Math.min(e.minX,o),e.minY=Math.min(e.minY,a),e.maxX=Math.max(e.maxX,o),e.maxY=Math.max(e.maxY,a)})};return Array.isArray(t[0])&&typeof t[0][0]=="number"?i(t):t.forEach(i),e}getHotspotBounds(t){const e=this.overlays.get(t.id);return e&&e.bounds?e.bounds:this.calculateBounds(t.coordinates)}calculateArea(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}getAnimationDuration(t){var p,u;const e=this.isMobile?.6:.8,i=((u=(p=this.viewer)==null?void 0:p.viewport)==null?void 0:u.getZoom())||1,s=1,o=4,a=2,n=1,l=(Math.max(s,Math.min(o,i))-s)/(o-s),c=a-l*(a-n);return e*c}calculateGlowIntensity(){return 1}optimizeForSafari(){/^((?!chrome|android).)*safari/i.test(navigator.userAgent)&&this.overlays.forEach(e=>{const i=e.element.getElementsByTagName("path");for(let s of i)s.style.transform="translateZ(0)",s.style.webkitBackfaceVisibility="hidden"})}createSimpleSVG(t){const e=`<svg xmlns="http://www.w3.org/2000/svg" 
           width="${t.x}" height="${t.y}" 
           viewBox="0 0 ${t.x} ${t.y}"
           style="position: absolute; width: 100%; height: 100%; pointer-events: auto;">
    </svg>`;return new DOMParser().parseFromString(e,"image/svg+xml").documentElement}startVisibilityTracking(){let t=null,e=0;this.isMobile;const i=()=>{if(t&&clearTimeout(t),this.isAnimationInProgress||this.viewer.isAnimating()){this.pendingVisibilityUpdate=!0;return}const o=Date.now()-e,a=this.viewer.viewport.getZoom()<5?100:50;if(o<a){t=setTimeout(()=>{i()},a-o);return}t=setTimeout(()=>{e=Date.now(),this.updateVisibility()},this.renderDebounceTime)};this.viewer.addHandler("animation",i),this.viewer.addHandler("animation-finish",()=>{!this.updatesPaused&&!this.isAnimationInProgress&&this.updateVisibility()}),this.isMobile||this.viewer.addHandler("viewport-change",i),this.updateVisibility()}updateVisibility(){var p,u;if(this.updatesPaused||this.isAnimationInProgress){console.log("updateVisibility BLOCKED - animation in progress"),this.pendingVisibilityUpdate=!0;return}const t=this.viewer.viewport.getZoom(),e=this.viewer.viewport.zoomSpring.target.value;if(Math.abs(t-e)>.001){console.log("updateVisibility SKIPPED - viewer is zooming"),this.pendingVisibilityUpdate=!0;return}if(this.viewer.isAnimating()){console.log("updateVisibility SKIPPED - viewer is animating"),this.pendingVisibilityUpdate=!0;return}const s=this.viewer.viewport.getBounds();if(this.lastViewportBounds&&this.lastViewportZoom){const m=Math.abs(s.x-this.lastViewportBounds.x)>this.significantChangeThreshold||Math.abs(s.y-this.lastViewportBounds.y)>this.significantChangeThreshold||Math.abs(s.width-this.lastViewportBounds.width)>this.significantChangeThreshold||Math.abs(s.height-this.lastViewportBounds.height)>this.significantChangeThreshold,f=Math.abs(t-this.lastViewportZoom)>.1;if(!m&&!f)return}this.lastViewportBounds=s,this.lastViewportZoom=t;const o=this.viewer.viewport,a=o.getZoom();if(this.lodManager&&window.performanceMonitor){const m=window.performanceMonitor.currentFPS,f=window.performanceMonitor.memoryUsage||0;this.lodManager.updatePerformanceMode(m,f)}if(a<1.5){const m=(p=this.selectedHotspot)==null?void 0:p.id,f=(u=this.hoveredHotspot)==null?void 0:u.id;requestAnimationFrame(()=>{this.overlays.forEach(w=>{const b=w.hotspot.id===m||w.hotspot.id===f;w.element.style.opacity=b?"1":"0",w.isVisible=b,b?this.visibleOverlays.add(w.hotspot.id):this.visibleOverlays.delete(w.hotspot.id)})});return}const n=Array.from(this.overlays.values()).map(m=>({...m.hotspot,overlay:m})),h=this.lodManager.selectVisibleHotspots(n,o,a,this.selectedHotspot,this.hoveredHotspot),l=new Set(h.map(m=>m.id)),c=[];let d=0;if(this.overlays.forEach((m,f)=>{const w=l.has(f);w!==m.isVisible?(c.push({element:m.element,opacity:w?"1":"0"}),m.isVisible=w,w?(this.visibleOverlays.add(f),d++):this.visibleOverlays.delete(f)):w&&d++}),this.revealMode.active&&this.overlays.forEach(m=>{m.isVisible&&!this.revealMode.animations.has(m.hotspot.id)?this.startBreathingAnimation(m):!m.isVisible&&this.revealMode.animations.has(m.hotspot.id)&&this.stopBreathingAnimation(m)}),c.length>0&&requestAnimationFrame(()=>{c.forEach(m=>{m.element.style.opacity=m.opacity})}),Math.abs(t-this.lastViewportZoom)>.5&&requestAnimationFrame(()=>{this.viewer.world.getItemCount()>0&&this.viewer.updateOverlay(this.svg)}),d>100){const m=this.lodManager.getStats();console.log(`[LOD] Visible: ${d} | Total: ${m.totalHotspots} | Reduction: ${((m.totalHotspots-d)/m.totalHotspots*100).toFixed(1)}%`)}d>H.HIGH_HOTSPOT_COUNT_THRESHOLD&&this.animationQueue&&(this.animationQueue.clearFinished(),this.animationQueue.running.size>H.MAX_CONCURRENT_ANIMATIONS&&(this.animationQueue.clear(),console.log("Animation queue cleared due to high hotspot count"))),this.checkPerformanceMode()}forceIOSRedraw(){this.isMobile&&this.viewer&&this.svg&&(this.svg.style.display="none",this.svg.offsetHeight,this.svg.style.display="",this.viewer.updateOverlay(this.svg))}checkPerformanceMode(){const t=this.visibleOverlays.size;t>H.HIGH_HOTSPOT_COUNT_THRESHOLD&&!this.performanceMode?(this.performanceMode=!0,this.svg.classList.add("performance-mode"),console.log("Performance mode enabled - simplifying animations")):t<H.HIGH_HOTSPOT_COUNT_THRESHOLD*.8&&this.performanceMode&&(this.performanceMode=!1,this.svg.classList.remove("performance-mode"))}updateVisibilityLazy(){if(this.updatesPaused){console.log("updateVisibilityLazy SKIPPED - updates are paused");return}console.log("updateVisibilityLazy starting - mobile optimized");const t=this.viewer.viewport;if(t.getZoom(),this.viewer.isAnimating()){console.log("updateVisibilityLazy deferred - still animating"),setTimeout(()=>this.updateVisibilityLazy(),100);return}const e=t.getBounds(),i=t.viewportToImageCoordinates(e.getTopLeft()),s=t.viewportToImageCoordinates(e.getBottomRight()),o={minX:i.x,minY:i.y,maxX:s.x,maxY:s.y},a=(o.maxX-o.minX)*.2;Object.keys(o).forEach(p=>{o[p]+=p.startsWith("min")?-a:a});const n=Array.from(this.overlays.entries());let h=0,l=0;const c=30,d=()=>{const p=performance.now();for(l=0;h<n.length&&l<c&&performance.now()-p<8;){const[u,m]=n[h],f=this.boundsIntersect(m.bounds,o);f!==m.isVisible&&(m.element.style.opacity=f?"1":"0",m.isVisible=f,f?this.visibleOverlays.add(u):this.visibleOverlays.delete(u)),h++,l++}h<n.length?"requestIdleCallback"in window?requestIdleCallback(()=>d(),{timeout:50}):requestAnimationFrame(d):this.viewer.world.getItemCount()>0&&requestAnimationFrame(()=>{this.viewer.updateOverlay(this.svg),console.log("updateVisibilityLazy complete")})};"requestIdleCallback"in window?requestIdleCallback(()=>d(),{timeout:100}):setTimeout(()=>requestAnimationFrame(d),50)}boundsIntersect(t,e){return!(t.maxX<e.minX||t.minX>e.maxX||t.maxY<e.minY||t.minY>e.maxY)}createMaskDefs(){this.defs||(this.defs=document.createElementNS("http://www.w3.org/2000/svg","defs"),this.svg.insertBefore(this.defs,this.svg.firstChild),this.maskCounter=0)}createClipPathDefs(){this.defs||this.createMaskDefs();const t=document.createElementNS("http://www.w3.org/2000/svg","defs");t.id="clip-path-defs",this.svg.insertBefore(t,this.svg.firstChild),this.clipDefs=t}createSVGFilters(){const t=document.createElementNS("http://www.w3.org/2000/svg","defs"),e=document.createElementNS("http://www.w3.org/2000/svg","filter");e.setAttribute("id","hotspot-glow-selected"),e.setAttribute("x","-100%"),e.setAttribute("y","-100%"),e.setAttribute("width","300%"),e.setAttribute("height","300%"),e.setAttribute("filterUnits","objectBoundingBox"),e.setAttribute("primitiveUnits","userSpaceOnUse"),e.setAttribute("color-interpolation-filters","sRGB");const i=document.createElementNS("http://www.w3.org/2000/svg","feMorphology");i.setAttribute("operator","dilate"),i.setAttribute("radius","2"),i.setAttribute("in","SourceAlpha"),i.setAttribute("result","expanded");const s=document.createElementNS("http://www.w3.org/2000/svg","feGaussianBlur");s.setAttribute("in","expanded"),s.setAttribute("stdDeviation","3"),s.setAttribute("result","blur1");const o=document.createElementNS("http://www.w3.org/2000/svg","feGaussianBlur");o.setAttribute("in","expanded"),o.setAttribute("stdDeviation","8"),o.setAttribute("result","blur2");const a=document.createElementNS("http://www.w3.org/2000/svg","feGaussianBlur");a.setAttribute("in","expanded"),a.setAttribute("stdDeviation","15"),a.setAttribute("result","blur3");const n=document.createElementNS("http://www.w3.org/2000/svg","feComponentTransfer");n.setAttribute("in","blur1"),n.setAttribute("result","glow1");const h=document.createElementNS("http://www.w3.org/2000/svg","feFuncA");h.setAttribute("type","linear"),h.setAttribute("slope","0.8"),h.setAttribute("intercept","0"),n.appendChild(h);const l=document.createElementNS("http://www.w3.org/2000/svg","feComponentTransfer");l.setAttribute("in","blur2"),l.setAttribute("result","glow2");const c=document.createElementNS("http://www.w3.org/2000/svg","feFuncA");c.setAttribute("type","linear"),c.setAttribute("slope","0.5"),c.setAttribute("intercept","0"),l.appendChild(c);const d=document.createElementNS("http://www.w3.org/2000/svg","feComponentTransfer");d.setAttribute("in","blur3"),d.setAttribute("result","glow3");const p=document.createElementNS("http://www.w3.org/2000/svg","feFuncA");p.setAttribute("type","linear"),p.setAttribute("slope","0.3"),p.setAttribute("intercept","0"),d.appendChild(p);const u=document.createElementNS("http://www.w3.org/2000/svg","feFlood");u.setAttribute("flood-color",this.colorScheme.glow||"#87CEEB"),u.setAttribute("result","innerColor");const m=document.createElementNS("http://www.w3.org/2000/svg","feFlood");m.setAttribute("flood-color",this.colorScheme.glow2||"#4682B4"),m.setAttribute("result","outerColor");const f=document.createElementNS("http://www.w3.org/2000/svg","feComposite");f.setAttribute("in","innerColor"),f.setAttribute("in2","glow1"),f.setAttribute("operator","in"),f.setAttribute("result","innerGlow");const w=document.createElementNS("http://www.w3.org/2000/svg","feComposite");w.setAttribute("in","outerColor"),w.setAttribute("in2","glow3"),w.setAttribute("operator","in"),w.setAttribute("result","outerGlow");const b=document.createElementNS("http://www.w3.org/2000/svg","feFlood");b.setAttribute("flood-color",this.colorScheme.main||"#4682B4"),b.setAttribute("result","midColor");const y=document.createElementNS("http://www.w3.org/2000/svg","feComposite");y.setAttribute("in","midColor"),y.setAttribute("in2","glow2"),y.setAttribute("operator","in"),y.setAttribute("result","midGlow");const v=document.createElementNS("http://www.w3.org/2000/svg","feMerge"),S=document.createElementNS("http://www.w3.org/2000/svg","feMergeNode");S.setAttribute("in","outerGlow");const A=document.createElementNS("http://www.w3.org/2000/svg","feMergeNode");A.setAttribute("in","midGlow");const D=document.createElementNS("http://www.w3.org/2000/svg","feMergeNode");D.setAttribute("in","innerGlow");const I=document.createElementNS("http://www.w3.org/2000/svg","feMergeNode");I.setAttribute("in","SourceGraphic"),v.appendChild(S),v.appendChild(A),v.appendChild(D),v.appendChild(I),e.appendChild(i),e.appendChild(s),e.appendChild(o),e.appendChild(a),e.appendChild(n),e.appendChild(l),e.appendChild(d),e.appendChild(u),e.appendChild(m),e.appendChild(b),e.appendChild(f),e.appendChild(w),e.appendChild(y),e.appendChild(v);const g=document.createElementNS("http://www.w3.org/2000/svg","filter");g.setAttribute("id","hotspot-glow-hover"),g.setAttribute("x","-50%"),g.setAttribute("y","-50%"),g.setAttribute("width","200%"),g.setAttribute("height","200%"),g.setAttribute("filterUnits","objectBoundingBox"),g.setAttribute("primitiveUnits","userSpaceOnUse"),g.setAttribute("color-interpolation-filters","sRGB");const C=document.createElementNS("http://www.w3.org/2000/svg","feGaussianBlur");C.setAttribute("in","SourceAlpha"),C.setAttribute("stdDeviation","6"),C.setAttribute("result","blur");const P=document.createElementNS("http://www.w3.org/2000/svg","feFlood");P.setAttribute("flood-color",this.colorScheme.glow||"#87CEEB"),P.setAttribute("result","innerColor");const E=document.createElementNS("http://www.w3.org/2000/svg","feFlood");E.setAttribute("flood-color",this.colorScheme.main||"#4682B4"),E.setAttribute("result","outerColor");const x=document.createElementNS("http://www.w3.org/2000/svg","feComposite");x.setAttribute("in","innerColor"),x.setAttribute("in2","blur"),x.setAttribute("operator","in"),x.setAttribute("result","coloredBlur");const z=document.createElementNS("http://www.w3.org/2000/svg","feMerge"),R=document.createElementNS("http://www.w3.org/2000/svg","feMergeNode");R.setAttribute("in","coloredBlur");const B=document.createElementNS("http://www.w3.org/2000/svg","feMergeNode");B.setAttribute("in","SourceGraphic"),z.appendChild(R),z.appendChild(B),g.appendChild(C),g.appendChild(P),g.appendChild(E),g.appendChild(x),g.appendChild(z),t.appendChild(e),t.appendChild(g),this.svg.insertBefore(t,this.svg.firstChild)}setupDebugMethods(){window.debugNativeRenderer={renderer:this,toggleHitDetection:()=>{this.useHitDetectionCanvas=!this.useHitDetectionCanvas,console.log(`[DEBUG] Hit detection canvas: ${this.useHitDetectionCanvas?"ON":"OFF"}`)},getLODStats:()=>this.lodManager?this.lodManager.getStats():(console.warn("[DEBUG] LOD Manager not available"),null),forceVisibilityUpdate:()=>{console.log("[DEBUG] Forcing visibility update..."),this.updateVisibility()},getHitDetectionStats:()=>{var t;return this.hitDetectionCanvas?{canvasSize:`${this.hitDetectionCanvas.canvas.width}x${this.hitDetectionCanvas.canvas.height}`,colorMapSize:((t=this.hitDetectionCanvas.colorToHotspot)==null?void 0:t.size)||0,renderTime:this.hitDetectionCanvas.lastRenderTime||"N/A"}:(console.warn("[DEBUG] Hit detection canvas not available"),null)},simulateClick:t=>{const e=this.overlays.get(t);e?(console.log(`[DEBUG] Simulating click on hotspot: ${t}`),this.activateHotspot(e.hotspot)):console.warn(`[DEBUG] Hotspot not found: ${t}`)}},console.log("[DEBUG] Debug methods available at window.debugNativeRenderer")}logHitDetectionStats(){var t;if(this.hitDetectionCanvas&&this.debugMode){const e={canvasEnabled:this.useHitDetectionCanvas,canvasSize:`${this.hitDetectionCanvas.canvas.width}x${this.hitDetectionCanvas.canvas.height}`,colorsGenerated:((t=this.hitDetectionCanvas.colorToHotspot)==null?void 0:t.size)||0,lastRenderTime:this.hitDetectionCanvas.lastRenderTime||"N/A"};console.log("[HIT_DETECTION] Performance Stats:",e)}}setupRevealMode(){document.addEventListener("keydown",i=>{if(i.key.toLowerCase()==="h"&&!i.ctrlKey&&!i.altKey&&!i.metaKey){const s=document.activeElement;if(s&&(s.tagName==="INPUT"||s.tagName==="TEXTAREA"||s.isContentEditable))return;i.preventDefault(),this.toggleRevealMode()}});let t=0,e=null;this.viewer.container.addEventListener("touchend",i=>{if(i.changedTouches.length!==1){t=0;return}t++,e&&clearTimeout(e),t===3?(i.preventDefault(),this.toggleRevealMode(),t=0):e=setTimeout(()=>{t=0},500)})}toggleRevealMode(){this.revealMode.active?this.deactivateRevealMode():this.activateRevealMode()}activateRevealMode(){this.revealMode.active||(console.log("Activating reveal mode"),this.revealMode.active=!0,this.overlays.forEach(t=>{t.isVisible&&this.startBreathingAnimation(t)}),this.revealMode.timer=setTimeout(()=>{this.deactivateRevealMode()},this.revealMode.duration),window.showRevealNotification&&window.showRevealNotification("Hotspots revealed"))}deactivateRevealMode(){this.revealMode.active&&(console.log("Deactivating reveal mode"),this.revealMode.active=!1,this.revealMode.timer&&(clearTimeout(this.revealMode.timer),this.revealMode.timer=null),this.overlays.forEach(t=>{this.stopBreathingAnimation(t)}))}startBreathingAnimation(t){if(this.revealMode.animations.has(t.hotspot.id))return;const e=t.element;e.classList.add("hotspot-reveal-breathing"),this.revealMode.animations.set(t.hotspot.id,{element:e,startTime:Date.now()})}stopBreathingAnimation(t){const e=this.revealMode.animations.get(t.hotspot.id);if(!e)return;e.element.classList.remove("hotspot-reveal-breathing"),this.revealMode.animations.delete(t.hotspot.id)}destroy(){console.log("Destroying NativeHotspotRenderer"),this.animationQueue&&this.animationQueue.clear(),this.cleanupInterval&&clearInterval(this.cleanupInterval),this.revealMode.timer&&clearTimeout(this.revealMode.timer),this.overlays.forEach(t=>{const e=t.element.getElementsByTagName("path");for(let i of e)i.currentAnimation&&i.currentAnimation.cancel(),i.getAnimations().forEach(s=>s.cancel())}),this.hitDetectionCanvas&&typeof this.hitDetectionCanvas.destroy=="function"&&this.hitDetectionCanvas.destroy(),this.temporalHandler&&this.temporalHandler.destroy(),this.modeStateManager&&this.modeStateManager.destroy(),window.debugNativeRenderer&&delete window.debugNativeRenderer,window.nativeHotspotRenderer===this&&delete window.nativeHotspotRenderer}};L(H,"MAX_CONCURRENT_ANIMATIONS",15),L(H,"MAX_CONCURRENT_ANIMATIONS_MOBILE",8),L(H,"HIGH_HOTSPOT_COUNT_THRESHOLD",100);let N=H;function tt(r,t,e,i,s){r.drawer&&r.drawer.getType&&r.drawer.getType()!=="webgl"&&r.addHandler("tile-drawing",n=>{r.drawer&&r.drawer.context&&(r.drawer.context.imageSmoothingEnabled=!0);const h=r.viewport.getZoom();n.tile;const l=n.tile.size;if(n.tile.level,h<1&&l*h<16){n.preventDefaultAction=!0;return}}),r.addHandler("open",()=>{if(k()){let l=0;const c=33;r.addHandler("update-viewport",d=>{const p=performance.now();if(r.isAnimating()&&p-l<c){d.preventDefaultAction=!0;return}l=p})}r.viewport.minZoomLevel=.8,r.viewport.minZoomImageRatio=.5,k()&&(r.viewport.minZoomLevel=.5,r.viewport.minZoomImageRatio=.3),G(r),W(r,M),r.viewport.minZoomLevel=.8,r.viewport.minZoomImageRatio=.5,console.log("Viewer ready - initializing systems"),console.log("Using drawer:",r.drawer.getType?r.drawer.getType():"canvas");const h=r.world.getItemAt(0).getBounds();r.viewport.fitBounds(h,!0),r.viewport.applyConstraints(!0),k()&&setTimeout(()=>{const l=r.world.getItemAt(0);if(l){const c=l.getBounds();r.viewport.fitBoundsWithConstraints(c,!1)}},100),setTimeout(()=>K(r,t,e,i),100)}),r.addHandler("zoom",()=>{e.tileCleanupManager&&e.tileCleanupManager.setPressure("normal"),t.isZoomingToHotspot()&&r.imageLoader&&r.imageLoader.clear()}),r.addHandler("pan",()=>{e.tileCleanupManager&&e.tileCleanupManager.setPressure("normal")}),r.addHandler("tile-loaded",n=>{var h;if(n.tile&&e.tileOptimizer){const l=n.tile.loadTime||((h=n.tiledImage)==null?void 0:h.lastResetTime)||100;e.tileOptimizer.trackLoadTime(l);const c=`${n.tile.level||0}_${n.tile.x||0}_${n.tile.y||0}`;e.tileOptimizer.loadingTiles.delete(c)}}),r.addHandler("animation",()=>{if(e.performanceMonitor){const n=e.performanceMonitor.getMetrics();if(n.averageFPS<M.debug.warnThreshold.fps){const h=V(n.averageFPS,n.memoryUsage);if(e.tileCleanupManager){const l={emergency:"critical",critical:"critical",reduced:"high","memory-limited":"high",normal:"normal"};e.tileCleanupManager.setPressure(l[h]||"normal")}}}}),r.addHandler("animation-finish",()=>{console.log("animation-finish fired",{isZoomingToHotspot:t.isZoomingToHotspot(),isExpandingToFullView:t.isExpandingToFullView()}),t.isZoomingToHotspot()&&(console.log("animation-finish: Setting isZoomingToHotspot to false"),t.setIsZoomingToHotspot(!1),e.renderer&&(console.log("animation-finish: Calling resumeUpdates"),e.renderer.resumeUpdates(),e.renderer.updateVisibility()),e.renderOptimizer&&e.renderOptimizer.endCinematicZoom())}),r.addHandler("animation-start",n=>{t.isZoomingToHotspot()&&e.tileCleanupManager&&e.tileCleanupManager.pauseCleanup(3e3)});const o=()=>{let n;n&&clearTimeout(n),n=setTimeout(()=>{q(()=>{const{viewportManager:h,spatialIndex:l,audioEngine:c}=e;if(!h||!l||!c)return;const d=h.getCurrentViewport(),p=l.queryViewport(d.bounds,d.zoom);c.preloadHotspots(p)})},M.viewport.updateDebounce)};r.addHandler("viewport-change",o);let a=!1;r.addHandler("animation-start",()=>{k()&&(t.isZoomingToHotspot()||t.isExpandingToFullView())&&(a=!0,r.removeHandler("viewport-change",o))}),r.addHandler("animation-finish",()=>{a&&(a=!1,r.addHandler("viewport-change",o),setTimeout(o,100))}),r.addHandler("canvas-click",n=>{!n.preventDefaultAction&&e.renderer&&n.quick&&e.renderer.selectedHotspot&&(e.renderer.selectedHotspot=null,t.setSelectedHotspot(null),e.overlayManager&&e.overlayManager.selectHotspot(null))}),k()&&r.addHandler("canvas-click",n=>{const h=r.container.clientWidth,l=r.container.clientHeight,c=100,d=n.position.x<c&&n.position.y<c,p=n.position.x>h-c&&n.position.y<c,u=n.position.x<c&&n.position.y>l-c,m=n.position.x>h-c&&n.position.y>l-c;if(d||p||u||m){const f=t.tapCount()+1;if(t.setTapCount(f),t.tapTimeout()&&clearTimeout(t.tapTimeout()),f>=3){const b=t.debugLevel()===0?1:0;t.setDebugLevel(b),localStorage.setItem("debugLevel",b.toString()),e.performanceMonitor&&e.performanceMonitor.disableDebugOverlay(),console.log(`Debug mode: ${b===1?"ON":"OFF"}`),t.setTapCount(0)}else t.setTapTimeout(setTimeout(()=>{t.setTapCount(0)},1e3))}})}function et(r,t){const e={centerX:r.viewport.centerSpringX.springStiffness,centerY:r.viewport.centerSpringY.springStiffness,zoom:r.viewport.zoomSpring.springStiffness};r.addHandler("zoom-click",i=>{if(i.quick)return;const s=r.viewport.getZoom(),o=i.zoom,a=Math.abs(Math.log2(o)-Math.log2(s)),n=Math.min(.8,.3+a*.15);r.viewport.zoomSpring.animationTime=n;const h=Math.max(4,8-a);r.viewport.zoomSpring.springStiffness=h,setTimeout(()=>{r.viewport.zoomSpring.animationTime=t.viewer.animationTime,r.viewport.zoomSpring.springStiffness=e.zoom},n*1e3+100)})}function it(r,t,e){const i={"+":()=>r.viewport.zoomBy(M.viewer.zoomPerScroll),"=":()=>r.viewport.zoomBy(M.viewer.zoomPerScroll),"-":()=>r.viewport.zoomBy(1/M.viewer.zoomPerScroll),_:()=>r.viewport.zoomBy(1/M.viewer.zoomPerScroll),0:()=>{var o;(o=window.animations)!=null&&o.expandToFullView&&window.animations.expandToFullView()},f:()=>r.viewport.fitBounds(r.world.getHomeBounds()),F:()=>r.viewport.fitBounds(r.world.getHomeBounds()),c:()=>{if(k())return;const a=t.debugLevel()===0?1:0;t.setDebugLevel(a),localStorage.setItem("debugLevel",a.toString()),e.performanceMonitor&&e.performanceMonitor.disableDebugOverlay(),e.renderer&&e.renderer.setDebugMode(a===1),console.log(`Debug mode: ${a===1?"ON":"OFF"}`)},h:()=>{e.renderer&&e.renderer.toggleRevealMode()},H:()=>{e.renderer&&e.renderer.toggleRevealMode()}},s=o=>{const a=document.activeElement;if(a&&(a.tagName==="INPUT"||a.tagName==="TEXTAREA"||a.contentEditable==="true"))return;const n=i[o.key];n&&r&&(o.preventDefault(),n(),r.viewport.applyConstraints())};return window.addEventListener("keydown",s),s}function st(r,t,e){const i=new ResizeObserver(s=>{if(!(!(t!=null&&t.viewport)||!t.isOpen()))for(let o of s){const{width:a,height:n}=o.contentRect;a>0&&n>0&&requestAnimationFrame(()=>{try{t&&t.viewport&&t.isOpen()&&(t.viewport.resize(),t.viewport.applyConstraints(),t.forceRedraw())}catch(h){h.message&&!h.message.includes("undefined")&&console.warn("Resize error:",h)}})}});i.observe(r),e.setComponents(s=>({...s,resizeObserver:i}))}function q(r){"requestIdleCallback"in window?requestIdleCallback(r,{timeout:200}):setTimeout(r,50)}function G(r){r.addHandler("zoom",t=>{r.drawer&&r.drawer.context&&(r.drawer.context.imageSmoothingEnabled=!0,r.drawer.imageSmoothingEnabled=!0)}),r.addHandler("pan",()=>{r.drawer&&r.drawer.context&&(r.drawer.context.imageSmoothingEnabled=!0,r.drawer.imageSmoothingEnabled=!0)}),r.addHandler("viewport-change",()=>{r.drawer&&r.drawer.context&&(r.drawer.context.imageSmoothingEnabled=!0,r.drawer.imageSmoothingEnabled=!0)})}function W(r,t,e){let i=null,s=null,o="idle",a=0,n=null;r.addHandler("zoom",h=>{const l=r.viewport.getZoom();a++,n&&clearTimeout(n),(!s||Math.abs(l-s)>.01)&&(o==="idle"?(o="accelerating",i=performance.now(),r.viewport.centerSpringX.animationTime=.4,r.viewport.centerSpringY.animationTime=.4,r.viewport.zoomSpring.animationTime=.4,r.imageLoader&&a>3&&(r.imageLoader.jobLimit=Math.max(2,r.imageLoader.jobLimit-1))):o==="accelerating"&&a>5&&(o="cruising",r.viewport.zoomSpring.animationTime=.2,r.imageLoader&&(r.imageLoader.jobLimit=2)),s=l),n=setTimeout(()=>{o!=="idle"&&(o="decelerating",r.viewport.centerSpringX.animationTime=.3,r.viewport.centerSpringY.animationTime=.3,r.viewport.zoomSpring.animationTime=.3,r.imageLoader&&(r.imageLoader.jobLimit=3),setTimeout(()=>{o="idle",a=0,r.imageLoader&&(r.imageLoader.jobLimit=t.viewer.imageLoaderLimit),r.forceRedraw(),i&&(performance.now()-i,i=null)},200))},100)})}async function K(r,t,e,i,s){var l;if(!r)return;const o={viewer:r,OpenSeadragon:T,spatialIndex:e.spatialIndex,onHotspotHover:t.setHoveredHotspot,onHotspotClick:i,visibilityCheckInterval:M.hotspots.visibilityCheckInterval,batchSize:M.hotspots.batchSize,renderDebounceTime:M.hotspots.renderDebounceTime,maxVisibleHotspots:M.hotspots.maxVisibleHotspots,minZoomForHotspots:M.hotspots.minZoomForHotspots,debugMode:t.debugLevel()===2},a=new N(o);t.setModeStateManager(a.modeStateManager);const n=$.createWithOverride(r);n.initialize(),window.overlayManager=n;const h=a.onHotspotClick;a.onHotspotClick=c=>{h(c),n&&n.selectHotspot&&n.selectHotspot(c)},t.setComponents(c=>({...c,renderer:a,overlayManager:n})),console.log("Using NativeHotspotRenderer for hotspot rendering"),console.log(`Using ${n.constructor.name} for overlay effects`),console.log("DEBUG: After renderer creation, window.nativeHotspotRenderer:",(l=window.nativeHotspotRenderer)==null?void 0:l.constructor.name),console.log("DEBUG: renderer type:",a.constructor.name),console.log("DEBUG: Are they the same?",window.nativeHotspotRenderer===a)}export{et as setupAdaptiveSprings,it as setupKeyboardHandler,st as setupResizeObserver,tt as setupViewerEventHandlers};
